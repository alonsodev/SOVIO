{"version":3,"sources":["../bower_components/isMobile/isMobile.js","../bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js","../bower_components/bootstrap-datepicker/dist/locales/bootstrap-datepicker.es.min.js","../bower_components/moment/moment.js","../bower_components/flot/jquery.flot.js","../bower_components/flot/jquery.flot.pie.js","../bower_components/datatables.net/js/jquery.dataTables.js","../bower_components/datatables.net-bs/js/dataTables.bootstrap.js","../bower_components/datatables.net-responsive/js/dataTables.responsive.js","../bower_components/datatables.net-responsive-bs/js/responsive.bootstrap.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/transition.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/alert.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/button.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/carousel.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/collapse.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/dropdown.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/modal.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/tooltip.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/popover.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/scrollspy.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/tab.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/affix.js","../assets/scripts/main.js"],"names":["global","apple_phone","apple_ipod","apple_tablet","android_phone","android_tablet","amazon_phone","amazon_tablet","windows_phone","windows_tablet","other_blackberry","other_blackberry_10","other_opera","other_chrome","other_firefox","seven_inch","RegExp","match","regex","userAgent","test","IsMobileClass","ua","navigator","tmp","split","this","apple","phone","ipod","tablet","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","chrome","any","window","instantiate","IM","Class","module","exports","define","amd","isMobile","a","require","jQuery","b","c","Date","UTC","apply","arguments","d","getFullYear","getMonth","getDate","e","getUTCFullYear","getUTCMonth","getUTCDate","f","g","isNaN","getTime","h","toLowerCase","data","i","replace","q","each","p","j","get","slice","contains","valueOf","length","remove","splice","isArray","clear","push","copy","extend","k","_process_options","dates","viewDate","o","defaultViewDate","focusDate","element","isInline","isInput","is","component","hasClass","find","hasInput","picker","r","template","_check_template","templates","leftArrow","html","rightArrow","_buildEvents","_attachEvents","addClass","appendTo","rtl","viewMode","startView","calendarWeeks","attr","parseInt","_allow_update","setStartDate","_o","startDate","setEndDate","endDate","setDaysOfWeekDisabled","daysOfWeekDisabled","setDaysOfWeekHighlighted","daysOfWeekHighlighted","setDatesDisabled","datesDisabled","fillDow","fillMonths","update","showMode","show","prototype","constructor","_resolveViewName","language","minViewMode","maxViewMode","Math","min","max","multidate","Number","multidateSeparator","String","weekStart","weekEnd","parseFormat","format","_local_to_utc","_zero_time","parseDate","assumeNearbyYear","map","orientation","grep","x","y","year","l","month","m","day","_events","_secondaryEvents","_applyEvents","on","_unapplyEvents","off","keyup","proxy","inArray","keyCode","keydown","paste","showOnFocus","focus","click","blur","_focused_from","target","immediateUpdates","changeYear changeMonth","date","resize","place","document","mousedown","hide","_detachEvents","_attachSecondaryEvents","_detachSecondaryEvents","_trigger","_utc_to_local","trigger","type","formatDate","enableOnReadonly","container","msMaxTouchPoints","disableTouchKeyboard","detach","forceParse","val","setValue","destroy","datepicker","originalEvent","clipboardData","types","getData","setDate","preventDefault","getTimezoneOffset","_zero_utc_time","getDates","getUTCDates","clearDates","autoclose","setDates","setUTCDates","setUTCDate","getFormattedDate","join","getStartDate","updateNavArrows","getEndDate","outerWidth","outerHeight","width","scrollTop","offset","parents","css","zIndexOffset","parent","n","left","top","removeClass","right","zIndex","dateWithinRange","fill","change","daysMin","append","monthsShort","setRange","range","getClassNames","todayHighlight","dateIsDisabled","getUTCDay","_fill_yearsView","s","t","u","text","noop","enabled","classes","concat","tooltip","today","en","titleFormat","toggle","todayBtn","clearBtn","title","getDaysInMonth","setUTCFullYear","v","w","z","beforeShowDay","unique","empty","A","monthsTitle","B","end","eq","beforeShowMonth","C","prop","beforeShowYear","beforeShowDecade","beforeShowCentury","visibility","stopPropagation","closest","modes","navStep","moveMonth","moveYear","_setDate","index","setUTCMonth","_toggle_multidate","toggleActive","moveDay","moveWeek","abs","moveAvailableDate","weekOfDateIsDisabled","keyboardNavigation","ctrlKey","shiftKey","children","filter","clsName","inputs","jquery","call","dateUpdated","pickers","updateDates","updateRanges","updating","fn","Array","shift","toArray","Error","defaults","locale_opts","Constructor","days","daysShort","months","navFnc","isLeapYear","validParts","nonpunctuation","toValue","toDisplay","separators","parts","yesterday","tomorrow","exec","yyyy","yy","M","MM","mm","dd","D","DD","toString","substring","headTemplate","contTemplate","footTemplate","DPGlobal","noConflict","version","es","factory","moment","utils_hooks__hooks","hookCallback","setHookCallback","callback","input","Object","isDate","arr","res","hasOwnProp","hasOwnProperty","create_utc__createUTC","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","getParsingFlags","_pf","valid__isValid","_isValid","flags","_d","invalidWeekday","_strict","undefined","bigHour","valid__createInvalid","NaN","isUndefined","copyConfig","to","from","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","obj","absFloor","number","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","stack","deprecateSimple","name","deprecations","isFunction","Function","isObject","locale_set__set","_config","_ordinalParseLenient","_ordinalParse","source","mergeConfigs","parentConfig","childConfig","Locale","set","normalizeLocale","key","chooseLocale","names","next","loadLocale","oldLocale","locales","globalLocale","_abbr","locale_locales__getSetGlobalLocale","values","locale_locales__getLocale","defineLocale","abbr","parentLocale","updateLocale","locale_locales__listLocales","keys","addUnitAlias","unit","shorthand","lowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","makeGetSet","keepTime","get_set__set","get_set__get","mom","isValid","getSet","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","substr","addFormatToken","token","padded","ordinal","func","formatTokenFunctions","localeData","removeFormattingTokens","makeFormatFunction","array","formattingTokens","output","formatMoment","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","longDateFormat","localFormattingTokens","lastIndex","addRegexToken","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","localeMonths","_months","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","localeMonthsParse","monthName","_monthsParse","_longMonthsParse","_shortMonthsParse","setMonth","dayOfMonth","monthsParse","getSetMonth","monthsShortRegex","_monthsParseExact","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","string","extendedIsoRegex","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromString","aspNetJsonRegex","createFromInputFallback","createDate","ms","setFullYear","createUTCDate","daysInYear","getIsLeapYear","firstWeekOffset","dow","doy","fwd","fwdlw","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","currentDateArray","nowValue","now","_useUTC","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","weekYear","temp","weekdayOverflow","GG","W","E","local__createLocal","_week","gg","ISO_8601","parsedInput","skipped","stringLength","totalParsedInputLength","indexOf","meridiemFixWrap","_meridiem","hour","meridiem","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","add","preparse","configFromInput","isUTC","pickBy","moments","args","Duration","duration","years","quarters","quarter","weeks","hours","minutes","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","separator","utcOffset","offsetFromString","matcher","matches","chunk","chunkOffset","cloneWithOffset","model","diff","clone","setTime","local","getDateOffset","round","getSetOffset","keepLocalTime","localAdjust","matchShortOffset","_changeInProgress","add_subtract__addSubtract","create__createDuration","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","parseFloat","positiveMomentsDifference","base","isAfter","isBefore","absRound","createAdder","direction","period","dur","isAdding","moment_calendar__calendar","time","formats","sod","startOf","calendar","localInput","endOf","isBetween","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","delta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","moment_format__toISOString","toISOString","toDate","inputString","defaultFormat","postformat","withoutSuffix","humanize","fromNow","toNow","newLocaleData","isoWeekday","to_type__valueOf","unix","toObject","toJSON","moment_valid__isValid","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","localeWeek","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","localeWeekdays","_weekdays","isFormat","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","localeWeekdaysParse","weekdayName","_weekdaysParse","_minWeekdaysParse","_shortWeekdaysParse","_fullWeekdaysParse","weekdays","weekdaysShort","weekdaysMin","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","getSetDayOfYear","hFormat","lowercase","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","parseMs","getZoneAbbr","getZoneName","moment__createUnix","moment__createInZone","parseZone","locale_calendar__calendar","_calendar","_longDateFormat","formatUpper","toUpperCase","_invalidDate","_ordinal","preParsePostFormat","relative__relativeTime","isFuture","_relativeTime","pastFuture","lists__get","field","setter","list","count","out","lists__listMonths","lists__listMonthsShort","lists__listWeekdays","lists__listWeekdaysShort","lists__listWeekdaysMin","duration_abs__abs","mathAbs","duration_add_subtract__addSubtract","duration_add_subtract__add","duration_add_subtract__subtract","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","duration_as__valueOf","makeAs","alias","duration_get__get","makeGetter","substituteTimeAgo","relativeTime","duration_humanize__relativeTime","posNegDuration","thresholds","duration_humanize__getSetRelativeTimeThreshold","threshold","limit","withSuffix","iso_string__toISOString","iso_string__abs","Y","total","asSeconds","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","defaultLocaleMonths","defaultLocaleMonthsShort","defaultMonthsShortRegex","defaultMonthsRegex","parseTwoDigitYear","getSetYear","prototypeMin","prototypeMax","add_subtract__add","add_subtract__subtract","lang","isoWeekYear","defaultLocaleWeek","getSetDayOfMonth","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","getSetMinute","getSetSecond","getSetMillisecond","momentPrototype__proto","isoWeeks","isoWeeksInYear","isDST","isDSTShifted","zoneAbbr","zoneName","zone","momentPrototype","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultOrdinalParse","defaultRelativeTime","future","past","hh","prototype__proto","firstDayOfYear","firstDayOfWeek","ordinalParse","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","duration_prototype__proto","toIsoString","invalid","relativeTimeThreshold","_moment","$","color","make","normalize","scale","clamp","extract","elem","nodeName","parse","str","trim","lookupColors","aqua","azure","beige","black","blue","brown","cyan","darkblue","darkcyan","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkviolet","fuchsia","gold","green","indigo","khaki","lightblue","lightcyan","lightgreen","lightgrey","lightpink","lightyellow","lime","magenta","maroon","navy","olive","orange","pink","purple","violet","red","silver","white","yellow","Canvas","cls","createElement","className","position","getContext","G_vmlCanvasManager","initElement","context","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","height","textContainer","_textCache","Plot","placeholder","data_","options_","plugins","executeHooks","hook","plot","initPlugins","init","options","parseOptions","opts","colors","xaxis","grid","yaxis","tickColor","borderColor","axisOptions","axisCount","fontSize","fontSizeDefault","fontDefaults","style","size","variant","weight","family","xaxes","font","lineHeight","yaxes","noTicks","ticks","x2axis","y2axis","coloredAreas","markings","coloredAreasColor","markingsColor","lines","series","points","bars","shadowSize","highlightColor","getOrCreateAxis","hooks","processOptions","setData","parseData","fillInSeriesOptions","processData","axisNumber","coord","allAxes","canvasToAxisCoords","axis","used","c2p","x1","y1","axisToCanvasCoords","p2c","axes","neededColors","maxIndex","sc","colorPool","colorPoolSize","variation","colori","zero","updateAxis","datamin","fakeInfinity","datamax","ps","topSentry","POSITIVE_INFINITY","bottomSentry","NEGATIVE_INFINITY","MAX_VALUE","_","datapoints","processRawData","required","autoscale","defaultValue","horizontal","pointsize","insertSteps","steps","nullify","Infinity","processDatapoints","xmin","ymin","xmax","ymax","align","barWidth","setupCanvases","surface","overlay","ctx","octx","eventHolder","unbind","existing","shutdown","bindEvents","hoverable","mousemove","onMouseMove","bind","onMouseLeave","clickable","onClick","redrawTimeout","clearTimeout","setTransformationHelpers","identity","transform","it","inverseTransform","plotWidth","plotHeight","measureTickLabels","labelWidth","labelHeight","maxWidth","legacyStyles","layer","label","info","getTextInfo","allocateAxisBoxFirstPhase","lw","lh","isXAxis","tickLength","axisMargin","padding","labelMargin","innermost","outermost","first","found","reserveSpace","plotOffset","bottom","box","allocateAxisBoxSecondPhase","adjustLayoutForThingsStickingOut","minMargin","minBorderMargin","radius","lineWidth","margins","setupGrid","showGrid","margin","processOffset","borderWidth","axisOpts","allocatedAxes","setupTickGeneration","setTicks","snapRangeToTicks","drawAxisLabels","insertLegend","widen","autoscaleMargin","sqrt","dec","log","LN10","maxDec","tickDecimals","magn","norm","minTickSize","tickSize","mode","tickGenerator","prev","start","floorInBase","tickFormatter","factor","formatted","decimal","precision","alignTicksWithAxis","otherAxis","niceTicks","extraDec","ts","toFixed","oticks","draw","drawBackground","backgroundColor","aboveData","drawGrid","drawSeries","render","triggerRedrawOverlay","extractRange","ranges","save","translate","fillStyle","getColorOrGradient","fillRect","restore","bw","bc","getAxes","xrange","yrange","xequal","yequal","markingsLineWidth","subPixel","beginPath","strokeStyle","moveTo","lineTo","stroke","xoff","yoff","strokeRect","tick","halign","valign","removeText","addText","drawSeriesLines","drawSeriesBars","drawSeriesPoints","plotLine","xoffset","yoffset","axisx","axisy","prevx","prevy","x2","y2","plotLineArea","areaOpen","ypos","segmentStart","segmentEnd","x1old","x2old","lineJoin","sw","angle","PI","sin","cos","getFillStyle","plotPoints","shadow","symbol","arc","closePath","drawBar","barLeft","barRight","fillStyleCallback","drawLeft","drawRight","drawTop","drawBottom","plotBars","filloptions","seriesColor","fillColor","legend","fragments","entries","rowStarted","lf","labelFormatter","sorted","reverse","ascending","entry","noColumns","labelBoxBorderColor","table","backgroundOpacity","div","prependTo","findNearbyItem","mouseX","mouseY","seriesFilter","maxDistance","mouseActiveRadius","smallestDistance","item","mx","my","maxx","maxy","dx","dy","dist","datapoint","dataIndex","seriesIndex","triggerClickHoverEvent","eventname","event","canvasX","pageX","canvasY","pageY","autoHighlight","highlights","auto","point","unhighlight","highlight","interaction","redrawOverlayInterval","drawOverlay","setTimeout","hi","drawBarHighlight","drawPointHighlight","indexOfHighlight","pointRadius","spec","defaultColor","gradient","createLinearGradient","co","brightness","opacity","addColorStop","getPlaceholder","getCanvas","getPlotOffset","getXAxes","getYAxes","getOptions","pointOffset","removeData","parentNode","removeChild","clearRect","cache","layerKey","getTextLayer","layerCache","styleKey","styleCache","positions","active","rendered","font-size","insertAfter","textStyle","max-width","text-align","processed","canvas","combine","combined","numCombined","pie","newdata","percent","newCtx","canvasWidth","canvasHeight","drawShadow","shadowLeft","shadowTop","edge","alpha","maxRadius","tilt","globalAlpha","centerLeft","centerTop","drawPie","drawSlice","currentAngle","drawLabels","drawLabel","startAngle","plf","formatter","halfAngle","labelTop","labelLeft","background","insertBefore","slices","drawDonutHole","legendWidth","attempts","REDRAW_SHRINK","REDRAW_ATTEMPTS","prepend","setSeries","innerRadius","globalCompositeOperation","isPointInPoly","poly","pt","findNearbySlice","isPointInPath","p1X","p1Y","p2X","p2Y","p3X","p3Y","p4X","p4Y","p5X","p5Y","arrPoly","arrPoint","drawHighlight","root","_fnHungarianMap","newKey","hungarian","_hungarianMap","_fnCamelToHungarian","src","user","force","hungarianKey","_fnLanguageCompat","DataTable","oLanguage","zeroRecords","sZeroRecords","sEmptyTable","_fnMap","sLoadingRecords","sInfoThousands","sThousands","sDecimal","_addNumericSort","_fnCompatOpts","_fnCompatMap","sScrollX","scrollX","searchCols","aoSearchCols","ien","models","oSearch","_fnCompatCols","dataSort","aDataSort","_fnBrowserDetect","settings","__browser","browser","outer","inner","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","bBounding","getBoundingClientRect","oBrowser","oScroll","iBarWidth","_fnReduce","inc","isSet","_fnAddColumn","oSettings","nTh","oDefaults","column","iCol","aoColumns","oCol","oColumn","sTitle","innerHTML","mData","idx","aoPreSearchCols","_fnColumnOptions","oOptions","oClasses","th","sWidthOrig","mDataProp","sType","_sManualType","sClass","iDataSort","mDataSrc","_fnGetObjectDataFn","mRender","attrTest","_bAttrSrc","isPlainObject","_setter","fnGetData","rowData","meta","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","oFeatures","bSort","bSortable","sSortableNone","bAsc","asSorting","bDesc","sSortingClass","sSortableAsc","sSortingClassJUI","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","columns","_fnCalculateColumnWidths","iLen","sWidth","scroll","sY","sX","_fnScrollDraw","_fnCallbackFire","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","_pluck","sParam","_fnColumnTypes","jen","ken","col","detectedType","aoData","ext","detect","_fnGetCellData","_fnApplyColumnDefs","aoColDefs","aoCols","jLen","kLen","def","aTargets","targets","_fnAddData","aDataIn","nTr","anTds","iRow","oData","oRow","_aData","aiDisplayMaster","id","rowIdFn","aIds","bDeferRender","_fnCreateTr","_fnAddTr","trs","row","el","_fnGetRowElements","cells","_fnNodeToDataIndex","_DT_RowIndex","_fnNodeToColumnIndex","anCells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","_fnLog","_fnSetCellData","_fnSplitObjNotation","mSource","fetchData","arrayNotation","funcNotation","innerSrc","__reArray","__reFn","aLast","_fnGetDataMaster","_fnClearTable","aiDisplay","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","cell","childNodes","firstChild","_aSortData","_aFilterData","cols","_fnRowAttributes","contents","tds","td","objectRead","getAttribute","cellProcess","nextSibling","rowNode","rowId","nTrIn","nTd","sCellType","_DT_CellIndex","bVisible","appendChild","fnCreatedCell","oInstance","setAttribute","tr","DT_RowClass","__rowc","_unique","DT_RowAttr","DT_RowData","_fnBuildHead","thead","nTHead","tfoot","nTFoot","createHeader","iTabIndex","sTableId","_fnSortAttachListener","_fnRenderer","_fnDetectHeader","aoHeader","sHeaderTH","sFooterTH","aoFooter","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","iRowspan","iColspan","aoLocal","aApplied","iColumns","_fnDraw","aPreDraw","_fnProcessingDisplay","anRows","iRowCount","asStripeClasses","iStripes","oLang","aoOpenRows","iInitDisplayStart","bServerSide","_fnDataSource","bDrawing","_iDisplayStart","fnRecordsDisplay","iDisplayStart","iDisplayEnd","fnDisplayEnd","bDeferLoading","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","class","colSpan","sRowEmpty","body","nTBody","bSorted","bFiltered","_fnReDraw","holdPosition","features","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","nTable","holding","insert","sWrapper","sNoFooter","nHolding","nTableWrapper","nTableReinsertBefore","featureNode","cOption","nNewNode","cNext","sAttr","aDom","sDom","sJUIHeader","sJUIFooter","aSplit","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nThead","nCell","iColShifted","iColumn","bUnique","nTrs","fnShiftCol","_fnGetUniqueThs","nHeader","aReturn","bSortCellsTop","_fnBuildAjax","rbracket","ajaxData","ajax","instance","json","jqXHR","newData","baseAjax","success","error","sError","dataType","sServerMethod","xhr","thrown","readyState","oAjaxData","fnServerData","sAjaxSource","url","bAjaxDataGet","_fnAjaxParameters","_fnAjaxUpdateDraw","dataProp","columnSearch","columnCount","preSearch","preColSearch","_fnSortFlatten","displayStart","displayLength","_iDisplayLength","param","order","search","sSearch","bRegex","sName","searchable","bSearchable","orderable","dir","legacy","compat","old","modern","_fnAjaxDataSrc","recordsTotal","recordsFiltered","_iRecordsTotal","_iRecordsDisplay","_bInitComplete","_fnInitComplete","dataSrc","sAjaxDataProp","aaData","tableId","previousSearch","sFilterInput","sFilter","searchFn","bSmart","bCaseInsensitive","searchDelay","jqFilter","sSearchPlaceholder","_fnThrottle","ev","activeElement","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","rows","merge","searchStr","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","invalidated","prevSearch","displayMaster","_fnFilterData","_sFilterRow","_fnEscapeRegex","word","sVal","_re_escape_regex","filterData","fomatters","wasInvalidated","__filter_div","__filter_div_textContent","textContent","innerText","_fnSearchToCamel","_fnSearchToHung","tid","nodes","sInfo","aoDrawCallback","_fnUpdateInfo","sInfoEmpty","sInfoFiltered","sInfoPostFix","_fnInfoMacros","fnInfoCallback","fnFormatNumber","vis","all","_fnInitialise","iAjaxStart","deferLoading","bInitialised","_fnStringToCss","aData","oInit","_fnLengthChange","_fnLengthOverflow","menu","aLengthMenu","d2","lengths","select","aria-controls","sLengthSelect","Option","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","redraw","node","sPaging","visRecords","page","pages","buttons","fnUpdate","_fnPageChange","action","records","changed","sProcessing","scrollY","caption","captionSide","_captionSide","headerClone","cloneNode","footerClone","footer","_div","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","box-sizing","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","scrollLeft","bCollapse","nScrollHead","nScrollBody","nScrollFoot","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","correction","sanityWidth","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooter","divFooterInner","divFooterTable","header","tableEl","tableStyle","ie67","dtHeaderCells","headerWidths","footerWidths","headerContent","footerContent","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollBarVis","scrollHeight","clientHeight","_fnApplyToChildren","offsetHeight","nToSize","iOuterWidth","bScrolling","an1","an2","nNode1","nNode2","nodeType","columnIdx","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","styleWidth","_fnConvertToWidth","tmpTable","_fnGetWidestNode","sContentPadding","holder","bounding","_reszEvt","bindResize","sInstance","freq","last","timer","frequency","_fnGetMaxLenString","maxIdx","__re_html_remove","srcCol","aSort","fixed","aaSortingFixed","fixedObj","nestedSort","pre","aaSorting","post","_idx","sortCol","aiOrig","oExtSort","formatters","_fnSortData","dataA","dataB","_fnSortAria","nextSort","oAria","removeAttribute","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","sorting","bSortMulti","sortIdx","attachTo","_fnBindAction","_fnSortingClasses","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customData","customSort","sSortDataType","_fnSaveState","bStateSave","state","visible","oSavedState","fnStateSaveCallback","_fnLoadState","fnStateLoadCallback","abStateLoad","iStateDuration","oLoadedState","_fnSettingsFromNode","level","tn","sErrMode","errMode","alert","mappedName","_fnExtend","extender","breakRefs","which","_fnCallbackReg","sStore","callbackArr","eventName","Event","result","renderer","host","_numbers","numbers","extPagination","numbers_length","half","_range","DT_el","decimalPlace","num","__numericReplace","num-fmt","_re_formatted_numeric","html-num","_re_html","html-num-fmt","_ext","_fnExternApiFunc","iApiIndex","internal","_Api","_api_register","_api_registerPlural","_re_dic","_re_new_lines","_re_date_start","_re_date_end","_empty","_intVal","integer","_numToDecimal","decimalPoint","_isNumber","strType","_isHtml","_htmlNumeric","_stripHtml","prop2","_pluck_order","_removeEmpty","again","knew","sSelector","oOpts","api","traditional","fnAddData","flatten","fnAdjustColumnSizing","bRedraw","fnClearTable","fnClose","child","fnDeleteRow","fnDestroy","fnDraw","complete","fnFilter","sInput","bShowGlobal","fnGetNodes","fnGetPosition","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","fnPageChange","mAction","fnSetColumnVis","bShow","fnSettings","fnSort","aaSort","fnSortListener","nNode","fnCallback","listener","mRow","bAction","fnVersionCheck","_that","emptyInit","oApi","sId","bInitHandedOff","$this","allSettings","bRetrieve","bDestroy","sDestroyWidth","dataTable","iDisplayLength","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","bJQueryUI","oJUIClasses","sTable","iDeferLoading","sUrl","sStripeOdd","sStripeEven","stripeClasses","rowOne","asDestroyStripes","aoColumnsInit","anThs","getElementsByTagName","aoColumnDefs","oDef","sortedColumns","captions","tbody","__apiStruct","__arrayProto","_toSettings","mixed","jq","tables","ctxSettings","selector","Api","iterator","alwaysNew","items","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","paging","recordsDisplay","serverSide","__reload","one","abort","resetPaging","_selector_run","selectFn","selectorType","_selector_opts","_selector_first","inst","displayFiltered","__row_selector","run","sel","selInt","rowObj","hash","thatIdx","loopRow","loopCells","newRows","modRows","__details_add","klass","addRow","created","_details","_detailsShow","__details_remove","__details_display","__details_events","namespace","drawEvent","colvisEvent","destroyEvent","_emp","_child_obj","_child_mth","__re_column_selector","__columnData","r1","r2","__column_selector","visColumns","jqResult","__setColumnVis","recalc","calc","__cell_selector","allCells","fnSelector","rowSelector","columnSelector","caseInsen","versionCheck","iThis","iThat","aThis","aThat","isDataTable","fnIsDataTable","head","foot","fnTables","util","throttle","escapeRegex","camelToHungarian","jqRows","orig","jqTable","jqTbody","jqWrapper","bJUI","sSortIcon","wrapper","sSortJUIWrapper","removedMethod","arg1","arg2","arg3","arg4","plural","resolved","bScrollCollapse","toFormat","JSON","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","oPaginate","sFirst","sLast","sNext","sPrevious","sScrollXInner","sScrollY","aoRowCallback","aoHeaderCallback","aoFooterCallback","aoRowCreatedCallback","aoPreDrawCallback","aoInitComplete","aoStateSaveParams","aoStateLoadParams","aoStateLoaded","aoStateSave","aoStateLoad","aoServerParams","aoDestroyCallback","paginate","oPlugins","builder","pageButton","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","sPageButton","sPageButtonActive","sPageButtonDisabled","sSortAsc","sSortDesc","sSortJUIAsc","sSortJUIDesc","_stateDefault","_sortIcon","_headerFooter","simple","full","simple_numbers","full_numbers","btnDisplay","btnClass","activeEl","aria","counter","attach","button","clickHandler","aria-label","data-dt-idx","tabindex","parsed","re1","re2","date-pre","html-pre","string-pre","string-asc","string-desc","jqueryui","__htmlEscapeEntities","thousands","prefix","postfix","negative","flo","intPart","floatPart","_fnCalculateEnd","dataTableSettings","dataTableExt","dom","bootstrap","currentTarget","href","Responsive","dt","current","responsive","details","_constructor","dtPrivateSettings","oldWindowWidth","_responsive","_resize","_setColumnVis","breakpoints","_classLogic","_resizeAuto","_detailsInit","_redrawChildren","_columnsVisiblity","breakpoint","priority","minWidth","includeIn","requiredWidth","scrolling","bar","widthAvailable","usedWidth","control","showControl","never","responsivePriority","dataPriority","operator","_find","classNames","brokenPoint","re","_detailsDisplay","_detailsObj","triggerHandler","_tabIndexes","targetIdx","orthogonal","hidden","columnIndex","rowIndex","oldVis","columnsVis","collapsedClass","toggleClass","clonedTable","clonedHeader","clonedBody","clonedFooter","footerCells","inserted","showHide","childRow","childRowImmediate","hasHidden","modal","close","li","_display","_original","transitionEnd","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","emulateTransitionEnd","called","$el","support","special","bsTransitionEnd","bindType","delegateType","handle","handleObj","handler","Plugin","option","Alert","dismiss","VERSION","TRANSITION_DURATION","removeElement","$parent","isDefaultPrevented","Button","setState","$element","DEFAULTS","isLoading","loadingText","resetText","$input","$btn","Carousel","slide","interval","pause","cycle","$indicators","paused","sliding","$active","$items","keyboard","documentElement","wrap","tagName","clearInterval","setInterval","getItemIndex","getItemForDirection","activeIndex","willWrap","itemIndex","$next","isCycling","relatedTarget","slideEvent","$nextIndicator","slidEvent","carousel","$target","slideIndex","$carousel","getTargetFromTrigger","$trigger","Collapse","transitioning","getParent","addAriaAndCollapsedClass","dimension","hasWidth","activesData","actives","startEvent","scrollSize","camelCase","isOpen","collapse","clearMenus","backdrop","Dropdown","isActive","desc","dropdown","_relatedTarget","Modal","$body","$dialog","$backdrop","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","load","BACKDROP_TRANSITION_DURATION","checkScrollbar","setScrollbar","escape","adjustDialog","enforceFocus","hideModal","has","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","animate","doAnimate","callbackRemove","modalIsOverflowing","paddingLeft","bodyIsOverflowing","paddingRight","fullWindowWidth","innerWidth","documentElementRect","measureScrollbar","bodyPad","scrollDiv","showEvent","Tooltip","timeout","hoverState","inState","animation","placement","delay","viewport","$viewport","hover","triggers","eventIn","eventOut","enter","leave","_options","fixTitle","getDefaults","getDelegateOptions","self","tip","isInStateTrue","hasContent","inDom","ownerDocument","$tip","tipId","getUID","setContent","autoToken","autoPlace","getPosition","actualWidth","actualHeight","orgPlacement","viewportDim","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","marginTop","marginLeft","setOffset","using","props","getViewportAdjustedDelta","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","arrow","getTitle","$e","isBody","elRect","elOffset","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","random","getElementById","$arrow","enable","disable","toggleEnabled","Popover","content","getContent","popover","ScrollSpy","$scrollElement","offsets","activeTarget","process","refresh","getScrollHeight","offsetMethod","offsetBase","isWindow","$href","maxScroll","activate","parentsUntil","scrollspy","$spy","Tab","$ul","$previous","hideEvent","tab","Affix","checkPosition","checkPositionWithEventLoop","affixed","unpin","pinnedOffset","RESET","getState","offsetTop","offsetBottom","targetHeight","initializing","colliderTop","colliderHeight","getPinnedOffset","affix","affixType","Sage","encuesta","result_test","common","cargarUrl","assign","finalize","home","about_us","UTIL","fire","funcname","loadEvents","classnm","ready"],"mappings":"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","file":"main.js","sourcesContent":["/**\n * isMobile.js v0.4.0\n *\n * A simple library to detect Apple phones and tablets,\n * Android phones and tablets, other mobile devices (like blackberry, mini-opera and windows phone),\n * and any kind of seven inch device, via user agent sniffing.\n *\n * @author: Kai Mallea (kmallea@gmail.com)\n *\n * @license: http://creativecommons.org/publicdomain/zero/1.0/\n */\n(function (global) {\n\n    var apple_phone         = /iPhone/i,\n        apple_ipod          = /iPod/i,\n        apple_tablet        = /iPad/i,\n        android_phone       = /(?=.*\\bAndroid\\b)(?=.*\\bMobile\\b)/i, // Match 'Android' AND 'Mobile'\n        android_tablet      = /Android/i,\n        amazon_phone        = /(?=.*\\bAndroid\\b)(?=.*\\bSD4930UR\\b)/i,\n        amazon_tablet       = /(?=.*\\bAndroid\\b)(?=.*\\b(?:KFOT|KFTT|KFJWI|KFJWA|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|KFARWI|KFASWI|KFSAWI|KFSAWA)\\b)/i,\n        windows_phone       = /IEMobile/i,\n        windows_tablet      = /(?=.*\\bWindows\\b)(?=.*\\bARM\\b)/i, // Match 'Windows' AND 'ARM'\n        other_blackberry    = /BlackBerry/i,\n        other_blackberry_10 = /BB10/i,\n        other_opera         = /Opera Mini/i,\n        other_chrome        = /(CriOS|Chrome)(?=.*\\bMobile\\b)/i,\n        other_firefox       = /(?=.*\\bFirefox\\b)(?=.*\\bMobile\\b)/i, // Match 'Firefox' AND 'Mobile'\n        seven_inch = new RegExp(\n            '(?:' +         // Non-capturing group\n\n            'Nexus 7' +     // Nexus 7\n\n            '|' +           // OR\n\n            'BNTV250' +     // B&N Nook Tablet 7 inch\n\n            '|' +           // OR\n\n            'Kindle Fire' + // Kindle Fire\n\n            '|' +           // OR\n\n            'Silk' +        // Kindle Fire, Silk Accelerated\n\n            '|' +           // OR\n\n            'GT-P1000' +    // Galaxy Tab 7 inch\n\n            ')',            // End non-capturing group\n\n            'i');           // Case-insensitive matching\n\n    var match = function(regex, userAgent) {\n        return regex.test(userAgent);\n    };\n\n    var IsMobileClass = function(userAgent) {\n        var ua = userAgent || navigator.userAgent;\n\n        // Facebook mobile app's integrated browser adds a bunch of strings that\n        // match everything. Strip it out if it exists.\n        var tmp = ua.split('[FBAN');\n        if (typeof tmp[1] !== 'undefined') {\n            ua = tmp[0];\n        }\n\n        // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n        // iPhone\" string. Same probable happens on other tablet platforms.\n        // This will confuse detection so strip it out if it exists.\n        tmp = ua.split('Twitter');\n        if (typeof tmp[1] !== 'undefined') {\n            ua = tmp[0];\n        }\n\n        this.apple = {\n            phone:  match(apple_phone, ua),\n            ipod:   match(apple_ipod, ua),\n            tablet: !match(apple_phone, ua) && match(apple_tablet, ua),\n            device: match(apple_phone, ua) || match(apple_ipod, ua) || match(apple_tablet, ua)\n        };\n        this.amazon = {\n            phone:  match(amazon_phone, ua),\n            tablet: !match(amazon_phone, ua) && match(amazon_tablet, ua),\n            device: match(amazon_phone, ua) || match(amazon_tablet, ua)\n        };\n        this.android = {\n            phone:  match(amazon_phone, ua) || match(android_phone, ua),\n            tablet: !match(amazon_phone, ua) && !match(android_phone, ua) && (match(amazon_tablet, ua) || match(android_tablet, ua)),\n            device: match(amazon_phone, ua) || match(amazon_tablet, ua) || match(android_phone, ua) || match(android_tablet, ua)\n        };\n        this.windows = {\n            phone:  match(windows_phone, ua),\n            tablet: match(windows_tablet, ua),\n            device: match(windows_phone, ua) || match(windows_tablet, ua)\n        };\n        this.other = {\n            blackberry:   match(other_blackberry, ua),\n            blackberry10: match(other_blackberry_10, ua),\n            opera:        match(other_opera, ua),\n            firefox:      match(other_firefox, ua),\n            chrome:       match(other_chrome, ua),\n            device:       match(other_blackberry, ua) || match(other_blackberry_10, ua) || match(other_opera, ua) || match(other_firefox, ua) || match(other_chrome, ua)\n        };\n        this.seven_inch = match(seven_inch, ua);\n        this.any = this.apple.device || this.android.device || this.windows.device || this.other.device || this.seven_inch;\n\n        // excludes 'other' devices and ipods, targeting touchscreen phones\n        this.phone = this.apple.phone || this.android.phone || this.windows.phone;\n\n        // excludes 7 inch devices, classifying as phone or tablet is left to the user\n        this.tablet = this.apple.tablet || this.android.tablet || this.windows.tablet;\n\n        if (typeof window === 'undefined') {\n            return this;\n        }\n    };\n\n    var instantiate = function() {\n        var IM = new IsMobileClass();\n        IM.Class = IsMobileClass;\n        return IM;\n    };\n\n    if (typeof module !== 'undefined' && module.exports && typeof window === 'undefined') {\n        //node\n        module.exports = IsMobileClass;\n    } else if (typeof module !== 'undefined' && module.exports && typeof window !== 'undefined') {\n        //browserify\n        module.exports = instantiate();\n    } else if (typeof define === 'function' && define.amd) {\n        //AMD\n        define('isMobile', [], global.isMobile = instantiate());\n    } else {\n        global.isMobile = instantiate();\n    }\n\n})(this);\n","/*!\n * Datepicker for Bootstrap v1.6.0 (https://github.com/eternicode/bootstrap-datepicker)\n *\n * Copyright 2012 Stefan Petre\n * Improvements by Andrew Rowls\n * Licensed under the Apache License v2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n */\n!function(a){\"function\"==typeof define&&define.amd?define([\"jquery\"],a):a(\"object\"==typeof exports?require(\"jquery\"):jQuery)}(function(a,b){function c(){return new Date(Date.UTC.apply(Date,arguments))}function d(){var a=new Date;return c(a.getFullYear(),a.getMonth(),a.getDate())}function e(a,b){return a.getUTCFullYear()===b.getUTCFullYear()&&a.getUTCMonth()===b.getUTCMonth()&&a.getUTCDate()===b.getUTCDate()}function f(a){return function(){return this[a].apply(this,arguments)}}function g(a){return a&&!isNaN(a.getTime())}function h(b,c){function d(a,b){return b.toLowerCase()}var e,f=a(b).data(),g={},h=new RegExp(\"^\"+c.toLowerCase()+\"([A-Z])\");c=new RegExp(\"^\"+c.toLowerCase());for(var i in f)c.test(i)&&(e=i.replace(h,d),g[e]=f[i]);return g}function i(b){var c={};if(q[b]||(b=b.split(\"-\")[0],q[b])){var d=q[b];return a.each(p,function(a,b){b in d&&(c[b]=d[b])}),c}}var j=function(){var b={get:function(a){return this.slice(a)[0]},contains:function(a){for(var b=a&&a.valueOf(),c=0,d=this.length;d>c;c++)if(this[c].valueOf()===b)return c;return-1},remove:function(a){this.splice(a,1)},replace:function(b){b&&(a.isArray(b)||(b=[b]),this.clear(),this.push.apply(this,b))},clear:function(){this.length=0},copy:function(){var a=new j;return a.replace(this),a}};return function(){var c=[];return c.push.apply(c,arguments),a.extend(c,b),c}}(),k=function(b,c){a(b).data(\"datepicker\",this),this._process_options(c),this.dates=new j,this.viewDate=this.o.defaultViewDate,this.focusDate=null,this.element=a(b),this.isInline=!1,this.isInput=this.element.is(\"input\"),this.component=this.element.hasClass(\"date\")?this.element.find(\".add-on, .input-group-addon, .btn\"):!1,this.hasInput=this.component&&this.element.find(\"input\").length,this.component&&0===this.component.length&&(this.component=!1),this.picker=a(r.template),this._check_template(this.o.templates.leftArrow)&&this.picker.find(\".prev\").html(this.o.templates.leftArrow),this._check_template(this.o.templates.rightArrow)&&this.picker.find(\".next\").html(this.o.templates.rightArrow),this._buildEvents(),this._attachEvents(),this.isInline?this.picker.addClass(\"datepicker-inline\").appendTo(this.element):this.picker.addClass(\"datepicker-dropdown dropdown-menu\"),this.o.rtl&&this.picker.addClass(\"datepicker-rtl\"),this.viewMode=this.o.startView,this.o.calendarWeeks&&this.picker.find(\"thead .datepicker-title, tfoot .today, tfoot .clear\").attr(\"colspan\",function(a,b){return parseInt(b)+1}),this._allow_update=!1,this.setStartDate(this._o.startDate),this.setEndDate(this._o.endDate),this.setDaysOfWeekDisabled(this.o.daysOfWeekDisabled),this.setDaysOfWeekHighlighted(this.o.daysOfWeekHighlighted),this.setDatesDisabled(this.o.datesDisabled),this.fillDow(),this.fillMonths(),this._allow_update=!0,this.update(),this.showMode(),this.isInline&&this.show()};k.prototype={constructor:k,_resolveViewName:function(a,c){return 0===a||\"days\"===a||\"month\"===a?0:1===a||\"months\"===a||\"year\"===a?1:2===a||\"years\"===a||\"decade\"===a?2:3===a||\"decades\"===a||\"century\"===a?3:4===a||\"centuries\"===a||\"millennium\"===a?4:c===b?!1:c},_check_template:function(c){try{if(c===b||\"\"===c)return!1;if((c.match(/[<>]/g)||[]).length<=0)return!0;var d=a(c);return d.length>0}catch(e){return!1}},_process_options:function(b){this._o=a.extend({},this._o,b);var e=this.o=a.extend({},this._o),f=e.language;q[f]||(f=f.split(\"-\")[0],q[f]||(f=o.language)),e.language=f,e.startView=this._resolveViewName(e.startView,0),e.minViewMode=this._resolveViewName(e.minViewMode,0),e.maxViewMode=this._resolveViewName(e.maxViewMode,4),e.startView=Math.min(e.startView,e.maxViewMode),e.startView=Math.max(e.startView,e.minViewMode),e.multidate!==!0&&(e.multidate=Number(e.multidate)||!1,e.multidate!==!1&&(e.multidate=Math.max(0,e.multidate))),e.multidateSeparator=String(e.multidateSeparator),e.weekStart%=7,e.weekEnd=(e.weekStart+6)%7;var g=r.parseFormat(e.format);if(e.startDate!==-(1/0)&&(e.startDate?e.startDate instanceof Date?e.startDate=this._local_to_utc(this._zero_time(e.startDate)):e.startDate=r.parseDate(e.startDate,g,e.language,e.assumeNearbyYear):e.startDate=-(1/0)),e.endDate!==1/0&&(e.endDate?e.endDate instanceof Date?e.endDate=this._local_to_utc(this._zero_time(e.endDate)):e.endDate=r.parseDate(e.endDate,g,e.language,e.assumeNearbyYear):e.endDate=1/0),e.daysOfWeekDisabled=e.daysOfWeekDisabled||[],a.isArray(e.daysOfWeekDisabled)||(e.daysOfWeekDisabled=e.daysOfWeekDisabled.split(/[,\\s]*/)),e.daysOfWeekDisabled=a.map(e.daysOfWeekDisabled,function(a){return parseInt(a,10)}),e.daysOfWeekHighlighted=e.daysOfWeekHighlighted||[],a.isArray(e.daysOfWeekHighlighted)||(e.daysOfWeekHighlighted=e.daysOfWeekHighlighted.split(/[,\\s]*/)),e.daysOfWeekHighlighted=a.map(e.daysOfWeekHighlighted,function(a){return parseInt(a,10)}),e.datesDisabled=e.datesDisabled||[],!a.isArray(e.datesDisabled)){var h=[];h.push(r.parseDate(e.datesDisabled,g,e.language,e.assumeNearbyYear)),e.datesDisabled=h}e.datesDisabled=a.map(e.datesDisabled,function(a){return r.parseDate(a,g,e.language,e.assumeNearbyYear)});var i=String(e.orientation).toLowerCase().split(/\\s+/g),j=e.orientation.toLowerCase();if(i=a.grep(i,function(a){return/^auto|left|right|top|bottom$/.test(a)}),e.orientation={x:\"auto\",y:\"auto\"},j&&\"auto\"!==j)if(1===i.length)switch(i[0]){case\"top\":case\"bottom\":e.orientation.y=i[0];break;case\"left\":case\"right\":e.orientation.x=i[0]}else j=a.grep(i,function(a){return/^left|right$/.test(a)}),e.orientation.x=j[0]||\"auto\",j=a.grep(i,function(a){return/^top|bottom$/.test(a)}),e.orientation.y=j[0]||\"auto\";else;if(e.defaultViewDate){var k=e.defaultViewDate.year||(new Date).getFullYear(),l=e.defaultViewDate.month||0,m=e.defaultViewDate.day||1;e.defaultViewDate=c(k,l,m)}else e.defaultViewDate=d()},_events:[],_secondaryEvents:[],_applyEvents:function(a){for(var c,d,e,f=0;f<a.length;f++)c=a[f][0],2===a[f].length?(d=b,e=a[f][1]):3===a[f].length&&(d=a[f][1],e=a[f][2]),c.on(e,d)},_unapplyEvents:function(a){for(var c,d,e,f=0;f<a.length;f++)c=a[f][0],2===a[f].length?(e=b,d=a[f][1]):3===a[f].length&&(e=a[f][1],d=a[f][2]),c.off(d,e)},_buildEvents:function(){var b={keyup:a.proxy(function(b){-1===a.inArray(b.keyCode,[27,37,39,38,40,32,13,9])&&this.update()},this),keydown:a.proxy(this.keydown,this),paste:a.proxy(this.paste,this)};this.o.showOnFocus===!0&&(b.focus=a.proxy(this.show,this)),this.isInput?this._events=[[this.element,b]]:this.component&&this.hasInput?this._events=[[this.element.find(\"input\"),b],[this.component,{click:a.proxy(this.show,this)}]]:this.element.is(\"div\")?this.isInline=!0:this._events=[[this.element,{click:a.proxy(this.show,this)}]],this._events.push([this.element,\"*\",{blur:a.proxy(function(a){this._focused_from=a.target},this)}],[this.element,{blur:a.proxy(function(a){this._focused_from=a.target},this)}]),this.o.immediateUpdates&&this._events.push([this.element,{\"changeYear changeMonth\":a.proxy(function(a){this.update(a.date)},this)}]),this._secondaryEvents=[[this.picker,{click:a.proxy(this.click,this)}],[a(window),{resize:a.proxy(this.place,this)}],[a(document),{mousedown:a.proxy(function(a){this.element.is(a.target)||this.element.find(a.target).length||this.picker.is(a.target)||this.picker.find(a.target).length||this.picker.hasClass(\"datepicker-inline\")||this.hide()},this)}]]},_attachEvents:function(){this._detachEvents(),this._applyEvents(this._events)},_detachEvents:function(){this._unapplyEvents(this._events)},_attachSecondaryEvents:function(){this._detachSecondaryEvents(),this._applyEvents(this._secondaryEvents)},_detachSecondaryEvents:function(){this._unapplyEvents(this._secondaryEvents)},_trigger:function(b,c){var d=c||this.dates.get(-1),e=this._utc_to_local(d);this.element.trigger({type:b,date:e,dates:a.map(this.dates,this._utc_to_local),format:a.proxy(function(a,b){0===arguments.length?(a=this.dates.length-1,b=this.o.format):\"string\"==typeof a&&(b=a,a=this.dates.length-1),b=b||this.o.format;var c=this.dates.get(a);return r.formatDate(c,b,this.o.language)},this)})},show:function(){var b=this.component?this.element.find(\"input\"):this.element;if(!b.attr(\"readonly\")||this.o.enableOnReadonly!==!1)return this.isInline||this.picker.appendTo(this.o.container),this.place(),this.picker.show(),this._attachSecondaryEvents(),this._trigger(\"show\"),(window.navigator.msMaxTouchPoints||\"ontouchstart\"in document)&&this.o.disableTouchKeyboard&&a(this.element).blur(),this},hide:function(){return this.isInline?this:this.picker.is(\":visible\")?(this.focusDate=null,this.picker.hide().detach(),this._detachSecondaryEvents(),this.viewMode=this.o.startView,this.showMode(),this.o.forceParse&&(this.isInput&&this.element.val()||this.hasInput&&this.element.find(\"input\").val())&&this.setValue(),this._trigger(\"hide\"),this):this},destroy:function(){return this.hide(),this._detachEvents(),this._detachSecondaryEvents(),this.picker.remove(),delete this.element.data().datepicker,this.isInput||delete this.element.data().date,this},paste:function(b){var c;if(b.originalEvent.clipboardData&&b.originalEvent.clipboardData.types&&-1!==a.inArray(\"text/plain\",b.originalEvent.clipboardData.types))c=b.originalEvent.clipboardData.getData(\"text/plain\");else{if(!window.clipboardData)return;c=window.clipboardData.getData(\"Text\")}this.setDate(c),this.update(),b.preventDefault()},_utc_to_local:function(a){return a&&new Date(a.getTime()+6e4*a.getTimezoneOffset())},_local_to_utc:function(a){return a&&new Date(a.getTime()-6e4*a.getTimezoneOffset())},_zero_time:function(a){return a&&new Date(a.getFullYear(),a.getMonth(),a.getDate())},_zero_utc_time:function(a){return a&&new Date(Date.UTC(a.getUTCFullYear(),a.getUTCMonth(),a.getUTCDate()))},getDates:function(){return a.map(this.dates,this._utc_to_local)},getUTCDates:function(){return a.map(this.dates,function(a){return new Date(a)})},getDate:function(){return this._utc_to_local(this.getUTCDate())},getUTCDate:function(){var a=this.dates.get(-1);return\"undefined\"!=typeof a?new Date(a):null},clearDates:function(){var a;this.isInput?a=this.element:this.component&&(a=this.element.find(\"input\")),a&&a.val(\"\"),this.update(),this._trigger(\"changeDate\"),this.o.autoclose&&this.hide()},setDates:function(){var b=a.isArray(arguments[0])?arguments[0]:arguments;return this.update.apply(this,b),this._trigger(\"changeDate\"),this.setValue(),this},setUTCDates:function(){var b=a.isArray(arguments[0])?arguments[0]:arguments;return this.update.apply(this,a.map(b,this._utc_to_local)),this._trigger(\"changeDate\"),this.setValue(),this},setDate:f(\"setDates\"),setUTCDate:f(\"setUTCDates\"),remove:f(\"destroy\"),setValue:function(){var a=this.getFormattedDate();return this.isInput?this.element.val(a):this.component&&this.element.find(\"input\").val(a),this},getFormattedDate:function(c){c===b&&(c=this.o.format);var d=this.o.language;return a.map(this.dates,function(a){return r.formatDate(a,c,d)}).join(this.o.multidateSeparator)},getStartDate:function(){return this.o.startDate},setStartDate:function(a){return this._process_options({startDate:a}),this.update(),this.updateNavArrows(),this},getEndDate:function(){return this.o.endDate},setEndDate:function(a){return this._process_options({endDate:a}),this.update(),this.updateNavArrows(),this},setDaysOfWeekDisabled:function(a){return this._process_options({daysOfWeekDisabled:a}),this.update(),this.updateNavArrows(),this},setDaysOfWeekHighlighted:function(a){return this._process_options({daysOfWeekHighlighted:a}),this.update(),this},setDatesDisabled:function(a){this._process_options({datesDisabled:a}),this.update(),this.updateNavArrows()},place:function(){if(this.isInline)return this;var b=this.picker.outerWidth(),c=this.picker.outerHeight(),d=10,e=a(this.o.container),f=e.width(),g=\"body\"===this.o.container?a(document).scrollTop():e.scrollTop(),h=e.offset(),i=[];this.element.parents().each(function(){var b=a(this).css(\"z-index\");\"auto\"!==b&&0!==b&&i.push(parseInt(b))});var j=Math.max.apply(Math,i)+this.o.zIndexOffset,k=this.component?this.component.parent().offset():this.element.offset(),l=this.component?this.component.outerHeight(!0):this.element.outerHeight(!1),m=this.component?this.component.outerWidth(!0):this.element.outerWidth(!1),n=k.left-h.left,o=k.top-h.top;\"body\"!==this.o.container&&(o+=g),this.picker.removeClass(\"datepicker-orient-top datepicker-orient-bottom datepicker-orient-right datepicker-orient-left\"),\"auto\"!==this.o.orientation.x?(this.picker.addClass(\"datepicker-orient-\"+this.o.orientation.x),\"right\"===this.o.orientation.x&&(n-=b-m)):k.left<0?(this.picker.addClass(\"datepicker-orient-left\"),n-=k.left-d):n+b>f?(this.picker.addClass(\"datepicker-orient-right\"),n+=m-b):this.picker.addClass(\"datepicker-orient-left\");var p,q=this.o.orientation.y;if(\"auto\"===q&&(p=-g+o-c,q=0>p?\"bottom\":\"top\"),this.picker.addClass(\"datepicker-orient-\"+q),\"top\"===q?o-=c+parseInt(this.picker.css(\"padding-top\")):o+=l,this.o.rtl){var r=f-(n+m);this.picker.css({top:o,right:r,zIndex:j})}else this.picker.css({top:o,left:n,zIndex:j});return this},_allow_update:!0,update:function(){if(!this._allow_update)return this;var b=this.dates.copy(),c=[],d=!1;return arguments.length?(a.each(arguments,a.proxy(function(a,b){b instanceof Date&&(b=this._local_to_utc(b)),c.push(b)},this)),d=!0):(c=this.isInput?this.element.val():this.element.data(\"date\")||this.element.find(\"input\").val(),c=c&&this.o.multidate?c.split(this.o.multidateSeparator):[c],delete this.element.data().date),c=a.map(c,a.proxy(function(a){return r.parseDate(a,this.o.format,this.o.language,this.o.assumeNearbyYear)},this)),c=a.grep(c,a.proxy(function(a){return!this.dateWithinRange(a)||!a},this),!0),this.dates.replace(c),this.dates.length?this.viewDate=new Date(this.dates.get(-1)):this.viewDate<this.o.startDate?this.viewDate=new Date(this.o.startDate):this.viewDate>this.o.endDate?this.viewDate=new Date(this.o.endDate):this.viewDate=this.o.defaultViewDate,d?this.setValue():c.length&&String(b)!==String(this.dates)&&this._trigger(\"changeDate\"),!this.dates.length&&b.length&&this._trigger(\"clearDate\"),this.fill(),this.element.change(),this},fillDow:function(){var b=this.o.weekStart,c=\"<tr>\";for(this.o.calendarWeeks&&(this.picker.find(\".datepicker-days .datepicker-switch\").attr(\"colspan\",function(a,b){return parseInt(b)+1}),c+='<th class=\"cw\">&#160;</th>');b<this.o.weekStart+7;)c+='<th class=\"dow',a.inArray(b,this.o.daysOfWeekDisabled)>-1&&(c+=\" disabled\"),c+='\">'+q[this.o.language].daysMin[b++%7]+\"</th>\";c+=\"</tr>\",this.picker.find(\".datepicker-days thead\").append(c)},fillMonths:function(){for(var a=this._utc_to_local(this.viewDate),b=\"\",c=0;12>c;){var d=a&&a.getMonth()===c?\" focused\":\"\";b+='<span class=\"month'+d+'\">'+q[this.o.language].monthsShort[c++]+\"</span>\"}this.picker.find(\".datepicker-months td\").html(b)},setRange:function(b){b&&b.length?this.range=a.map(b,function(a){return a.valueOf()}):delete this.range,this.fill()},getClassNames:function(b){var c=[],d=this.viewDate.getUTCFullYear(),e=this.viewDate.getUTCMonth(),f=new Date;return b.getUTCFullYear()<d||b.getUTCFullYear()===d&&b.getUTCMonth()<e?c.push(\"old\"):(b.getUTCFullYear()>d||b.getUTCFullYear()===d&&b.getUTCMonth()>e)&&c.push(\"new\"),this.focusDate&&b.valueOf()===this.focusDate.valueOf()&&c.push(\"focused\"),this.o.todayHighlight&&b.getUTCFullYear()===f.getFullYear()&&b.getUTCMonth()===f.getMonth()&&b.getUTCDate()===f.getDate()&&c.push(\"today\"),-1!==this.dates.contains(b)&&c.push(\"active\"),(!this.dateWithinRange(b)||this.dateIsDisabled(b))&&c.push(\"disabled\"),-1!==a.inArray(b.getUTCDay(),this.o.daysOfWeekHighlighted)&&c.push(\"highlighted\"),this.range&&(b>this.range[0]&&b<this.range[this.range.length-1]&&c.push(\"range\"),-1!==a.inArray(b.valueOf(),this.range)&&c.push(\"selected\"),b.valueOf()===this.range[0]&&c.push(\"range-start\"),b.valueOf()===this.range[this.range.length-1]&&c.push(\"range-end\")),c},_fill_yearsView:function(c,d,e,f,g,h,i,j){var k,l,m,n,o,p,q,r,s,t,u;for(k=\"\",l=this.picker.find(c),m=parseInt(g/e,10)*e,o=parseInt(h/f,10)*f,p=parseInt(i/f,10)*f,n=a.map(this.dates,function(a){return parseInt(a.getUTCFullYear()/f,10)*f}),l.find(\".datepicker-switch\").text(m+\"-\"+(m+9*f)),q=m-f,r=-1;11>r;r+=1)s=[d],t=null,-1===r?s.push(\"old\"):10===r&&s.push(\"new\"),-1!==a.inArray(q,n)&&s.push(\"active\"),(o>q||q>p)&&s.push(\"disabled\"),q===this.viewDate.getFullYear()&&s.push(\"focused\"),j!==a.noop&&(u=j(new Date(q,0,1)),u===b?u={}:\"boolean\"==typeof u?u={enabled:u}:\"string\"==typeof u&&(u={classes:u}),u.enabled===!1&&s.push(\"disabled\"),u.classes&&(s=s.concat(u.classes.split(/\\s+/))),u.tooltip&&(t=u.tooltip)),k+='<span class=\"'+s.join(\" \")+'\"'+(t?' title=\"'+t+'\"':\"\")+\">\"+q+\"</span>\",q+=f;l.find(\"td\").html(k)},fill:function(){var d,e,f=new Date(this.viewDate),g=f.getUTCFullYear(),h=f.getUTCMonth(),i=this.o.startDate!==-(1/0)?this.o.startDate.getUTCFullYear():-(1/0),j=this.o.startDate!==-(1/0)?this.o.startDate.getUTCMonth():-(1/0),k=this.o.endDate!==1/0?this.o.endDate.getUTCFullYear():1/0,l=this.o.endDate!==1/0?this.o.endDate.getUTCMonth():1/0,m=q[this.o.language].today||q.en.today||\"\",n=q[this.o.language].clear||q.en.clear||\"\",o=q[this.o.language].titleFormat||q.en.titleFormat;if(!isNaN(g)&&!isNaN(h)){this.picker.find(\".datepicker-days .datepicker-switch\").text(r.formatDate(f,o,this.o.language)),this.picker.find(\"tfoot .today\").text(m).toggle(this.o.todayBtn!==!1),this.picker.find(\"tfoot .clear\").text(n).toggle(this.o.clearBtn!==!1),this.picker.find(\"thead .datepicker-title\").text(this.o.title).toggle(\"\"!==this.o.title),this.updateNavArrows(),this.fillMonths();var p=c(g,h-1,28),s=r.getDaysInMonth(p.getUTCFullYear(),p.getUTCMonth());p.setUTCDate(s),p.setUTCDate(s-(p.getUTCDay()-this.o.weekStart+7)%7);var t=new Date(p);p.getUTCFullYear()<100&&t.setUTCFullYear(p.getUTCFullYear()),t.setUTCDate(t.getUTCDate()+42),t=t.valueOf();for(var u,v=[];p.valueOf()<t;){if(p.getUTCDay()===this.o.weekStart&&(v.push(\"<tr>\"),this.o.calendarWeeks)){var w=new Date(+p+(this.o.weekStart-p.getUTCDay()-7)%7*864e5),x=new Date(Number(w)+(11-w.getUTCDay())%7*864e5),y=new Date(Number(y=c(x.getUTCFullYear(),0,1))+(11-y.getUTCDay())%7*864e5),z=(x-y)/864e5/7+1;v.push('<td class=\"cw\">'+z+\"</td>\")}u=this.getClassNames(p),u.push(\"day\"),this.o.beforeShowDay!==a.noop&&(e=this.o.beforeShowDay(this._utc_to_local(p)),e===b?e={}:\"boolean\"==typeof e?e={enabled:e}:\"string\"==typeof e&&(e={classes:e}),e.enabled===!1&&u.push(\"disabled\"),e.classes&&(u=u.concat(e.classes.split(/\\s+/))),e.tooltip&&(d=e.tooltip)),u=a.unique(u),v.push('<td class=\"'+u.join(\" \")+'\"'+(d?' title=\"'+d+'\"':\"\")+\">\"+p.getUTCDate()+\"</td>\"),d=null,p.getUTCDay()===this.o.weekEnd&&v.push(\"</tr>\"),p.setUTCDate(p.getUTCDate()+1)}this.picker.find(\".datepicker-days tbody\").empty().append(v.join(\"\"));var A=q[this.o.language].monthsTitle||q.en.monthsTitle||\"Months\",B=this.picker.find(\".datepicker-months\").find(\".datepicker-switch\").text(this.o.maxViewMode<2?A:g).end().find(\"span\").removeClass(\"active\");if(a.each(this.dates,function(a,b){b.getUTCFullYear()===g&&B.eq(b.getUTCMonth()).addClass(\"active\")}),(i>g||g>k)&&B.addClass(\"disabled\"),g===i&&B.slice(0,j).addClass(\"disabled\"),g===k&&B.slice(l+1).addClass(\"disabled\"),this.o.beforeShowMonth!==a.noop){var C=this;a.each(B,function(c,d){var e=new Date(g,c,1),f=C.o.beforeShowMonth(e);f===b?f={}:\"boolean\"==typeof f?f={enabled:f}:\"string\"==typeof f&&(f={classes:f}),f.enabled!==!1||a(d).hasClass(\"disabled\")||a(d).addClass(\"disabled\"),f.classes&&a(d).addClass(f.classes),f.tooltip&&a(d).prop(\"title\",f.tooltip)})}this._fill_yearsView(\".datepicker-years\",\"year\",10,1,g,i,k,this.o.beforeShowYear),this._fill_yearsView(\".datepicker-decades\",\"decade\",100,10,g,i,k,this.o.beforeShowDecade),this._fill_yearsView(\".datepicker-centuries\",\"century\",1e3,100,g,i,k,this.o.beforeShowCentury)}},updateNavArrows:function(){if(this._allow_update){var a=new Date(this.viewDate),b=a.getUTCFullYear(),c=a.getUTCMonth();switch(this.viewMode){case 0:this.o.startDate!==-(1/0)&&b<=this.o.startDate.getUTCFullYear()&&c<=this.o.startDate.getUTCMonth()?this.picker.find(\".prev\").css({visibility:\"hidden\"}):this.picker.find(\".prev\").css({visibility:\"visible\"}),this.o.endDate!==1/0&&b>=this.o.endDate.getUTCFullYear()&&c>=this.o.endDate.getUTCMonth()?this.picker.find(\".next\").css({visibility:\"hidden\"}):this.picker.find(\".next\").css({visibility:\"visible\"});break;case 1:case 2:case 3:case 4:this.o.startDate!==-(1/0)&&b<=this.o.startDate.getUTCFullYear()||this.o.maxViewMode<2?this.picker.find(\".prev\").css({visibility:\"hidden\"}):this.picker.find(\".prev\").css({visibility:\"visible\"}),this.o.endDate!==1/0&&b>=this.o.endDate.getUTCFullYear()||this.o.maxViewMode<2?this.picker.find(\".next\").css({visibility:\"hidden\"}):this.picker.find(\".next\").css({visibility:\"visible\"})}}},click:function(b){b.preventDefault(),b.stopPropagation();var e,f,g,h,i,j,k;e=a(b.target),e.hasClass(\"datepicker-switch\")&&this.showMode(1);var l=e.closest(\".prev, .next\");l.length>0&&(f=r.modes[this.viewMode].navStep*(l.hasClass(\"prev\")?-1:1),0===this.viewMode?(this.viewDate=this.moveMonth(this.viewDate,f),this._trigger(\"changeMonth\",this.viewDate)):(this.viewDate=this.moveYear(this.viewDate,f),1===this.viewMode&&this._trigger(\"changeYear\",this.viewDate)),this.fill()),e.hasClass(\"today\")&&(this.showMode(-2),this._setDate(d(),\"linked\"===this.o.todayBtn?null:\"view\")),e.hasClass(\"clear\")&&this.clearDates(),e.hasClass(\"disabled\")||(e.hasClass(\"day\")&&(g=parseInt(e.text(),10)||1,h=this.viewDate.getUTCFullYear(),i=this.viewDate.getUTCMonth(),e.hasClass(\"old\")&&(0===i?(i=11,h-=1,j=!0,k=!0):(i-=1,j=!0)),e.hasClass(\"new\")&&(11===i?(i=0,h+=1,j=!0,k=!0):(i+=1,j=!0)),this._setDate(c(h,i,g)),k&&this._trigger(\"changeYear\",this.viewDate),j&&this._trigger(\"changeMonth\",this.viewDate)),e.hasClass(\"month\")&&(this.viewDate.setUTCDate(1),g=1,i=e.parent().find(\"span\").index(e),h=this.viewDate.getUTCFullYear(),this.viewDate.setUTCMonth(i),this._trigger(\"changeMonth\",this.viewDate),1===this.o.minViewMode?(this._setDate(c(h,i,g)),this.showMode()):this.showMode(-1),this.fill()),(e.hasClass(\"year\")||e.hasClass(\"decade\")||e.hasClass(\"century\"))&&(this.viewDate.setUTCDate(1),g=1,i=0,h=parseInt(e.text(),10)||0,this.viewDate.setUTCFullYear(h),e.hasClass(\"year\")&&(this._trigger(\"changeYear\",this.viewDate),2===this.o.minViewMode&&this._setDate(c(h,i,g))),e.hasClass(\"decade\")&&(this._trigger(\"changeDecade\",this.viewDate),3===this.o.minViewMode&&this._setDate(c(h,i,g))),e.hasClass(\"century\")&&(this._trigger(\"changeCentury\",this.viewDate),4===this.o.minViewMode&&this._setDate(c(h,i,g))),this.showMode(-1),this.fill())),this.picker.is(\":visible\")&&this._focused_from&&a(this._focused_from).focus(),delete this._focused_from},_toggle_multidate:function(a){var b=this.dates.contains(a);if(a||this.dates.clear(),-1!==b?(this.o.multidate===!0||this.o.multidate>1||this.o.toggleActive)&&this.dates.remove(b):this.o.multidate===!1?(this.dates.clear(),this.dates.push(a)):this.dates.push(a),\"number\"==typeof this.o.multidate)for(;this.dates.length>this.o.multidate;)this.dates.remove(0)},_setDate:function(a,b){b&&\"date\"!==b||this._toggle_multidate(a&&new Date(a)),b&&\"view\"!==b||(this.viewDate=a&&new Date(a)),this.fill(),this.setValue(),b&&\"view\"===b||this._trigger(\"changeDate\");var c;this.isInput?c=this.element:this.component&&(c=this.element.find(\"input\")),c&&c.change(),!this.o.autoclose||b&&\"date\"!==b||this.hide()},moveDay:function(a,b){var c=new Date(a);return c.setUTCDate(a.getUTCDate()+b),c},moveWeek:function(a,b){return this.moveDay(a,7*b)},moveMonth:function(a,b){if(!g(a))return this.o.defaultViewDate;if(!b)return a;var c,d,e=new Date(a.valueOf()),f=e.getUTCDate(),h=e.getUTCMonth(),i=Math.abs(b);if(b=b>0?1:-1,1===i)d=-1===b?function(){return e.getUTCMonth()===h}:function(){return e.getUTCMonth()!==c},c=h+b,e.setUTCMonth(c),(0>c||c>11)&&(c=(c+12)%12);else{for(var j=0;i>j;j++)e=this.moveMonth(e,b);c=e.getUTCMonth(),e.setUTCDate(f),d=function(){return c!==e.getUTCMonth()}}for(;d();)e.setUTCDate(--f),e.setUTCMonth(c);return e},moveYear:function(a,b){return this.moveMonth(a,12*b)},moveAvailableDate:function(a,b,c){do{if(a=this[c](a,b),!this.dateWithinRange(a))return!1;c=\"moveDay\"}while(this.dateIsDisabled(a));return a},weekOfDateIsDisabled:function(b){return-1!==a.inArray(b.getUTCDay(),this.o.daysOfWeekDisabled)},dateIsDisabled:function(b){return this.weekOfDateIsDisabled(b)||a.grep(this.o.datesDisabled,function(a){return e(b,a)}).length>0},dateWithinRange:function(a){return a>=this.o.startDate&&a<=this.o.endDate},keydown:function(a){if(!this.picker.is(\":visible\"))return void((40===a.keyCode||27===a.keyCode)&&(this.show(),a.stopPropagation()));var b,c,d=!1,e=this.focusDate||this.viewDate;switch(a.keyCode){case 27:this.focusDate?(this.focusDate=null,this.viewDate=this.dates.get(-1)||this.viewDate,this.fill()):this.hide(),a.preventDefault(),a.stopPropagation();break;case 37:case 38:case 39:case 40:if(!this.o.keyboardNavigation||7===this.o.daysOfWeekDisabled.length)break;b=37===a.keyCode||38===a.keyCode?-1:1,0===this.viewMode?a.ctrlKey?(c=this.moveAvailableDate(e,b,\"moveYear\"),c&&this._trigger(\"changeYear\",this.viewDate)):a.shiftKey?(c=this.moveAvailableDate(e,b,\"moveMonth\"),c&&this._trigger(\"changeMonth\",this.viewDate)):37===a.keyCode||39===a.keyCode?c=this.moveAvailableDate(e,b,\"moveDay\"):this.weekOfDateIsDisabled(e)||(c=this.moveAvailableDate(e,b,\"moveWeek\")):1===this.viewMode?((38===a.keyCode||40===a.keyCode)&&(b=4*b),c=this.moveAvailableDate(e,b,\"moveMonth\")):2===this.viewMode&&((38===a.keyCode||40===a.keyCode)&&(b=4*b),c=this.moveAvailableDate(e,b,\"moveYear\")),c&&(this.focusDate=this.viewDate=c,this.setValue(),this.fill(),a.preventDefault());break;case 13:if(!this.o.forceParse)break;e=this.focusDate||this.dates.get(-1)||this.viewDate,this.o.keyboardNavigation&&(this._toggle_multidate(e),d=!0),this.focusDate=null,this.viewDate=this.dates.get(-1)||this.viewDate,this.setValue(),this.fill(),this.picker.is(\":visible\")&&(a.preventDefault(),a.stopPropagation(),this.o.autoclose&&this.hide());break;case 9:this.focusDate=null,this.viewDate=this.dates.get(-1)||this.viewDate,this.fill(),this.hide()}if(d){this.dates.length?this._trigger(\"changeDate\"):this._trigger(\"clearDate\");var f;this.isInput?f=this.element:this.component&&(f=this.element.find(\"input\")),f&&f.change()}},showMode:function(a){a&&(this.viewMode=Math.max(this.o.minViewMode,Math.min(this.o.maxViewMode,this.viewMode+a))),this.picker.children(\"div\").hide().filter(\".datepicker-\"+r.modes[this.viewMode].clsName).show(),this.updateNavArrows()}};var l=function(b,c){a(b).data(\"datepicker\",this),this.element=a(b),this.inputs=a.map(c.inputs,function(a){return a.jquery?a[0]:a}),delete c.inputs,n.call(a(this.inputs),c).on(\"changeDate\",a.proxy(this.dateUpdated,this)),this.pickers=a.map(this.inputs,function(b){return a(b).data(\"datepicker\")}),this.updateDates()};l.prototype={updateDates:function(){this.dates=a.map(this.pickers,function(a){return a.getUTCDate()}),this.updateRanges()},updateRanges:function(){var b=a.map(this.dates,function(a){return a.valueOf()});a.each(this.pickers,function(a,c){c.setRange(b)})},dateUpdated:function(b){if(!this.updating){this.updating=!0;var c=a(b.target).data(\"datepicker\");if(\"undefined\"!=typeof c){var d=c.getUTCDate(),e=a.inArray(b.target,this.inputs),f=e-1,g=e+1,h=this.inputs.length;if(-1!==e){if(a.each(this.pickers,function(a,b){b.getUTCDate()||b.setUTCDate(d)}),d<this.dates[f])for(;f>=0&&d<this.dates[f];)this.pickers[f--].setUTCDate(d);else if(d>this.dates[g])for(;h>g&&d>this.dates[g];)this.pickers[g++].setUTCDate(d);this.updateDates(),delete this.updating}}}},remove:function(){a.map(this.pickers,function(a){a.remove()}),delete this.element.data().datepicker}};var m=a.fn.datepicker,n=function(c){var d=Array.apply(null,arguments);d.shift();var e;if(this.each(function(){var b=a(this),f=b.data(\"datepicker\"),g=\"object\"==typeof c&&c;if(!f){var j=h(this,\"date\"),m=a.extend({},o,j,g),n=i(m.language),p=a.extend({},o,n,j,g);b.hasClass(\"input-daterange\")||p.inputs?(a.extend(p,{inputs:p.inputs||b.find(\"input\").toArray()}),f=new l(this,p)):f=new k(this,p),b.data(\"datepicker\",f)}\"string\"==typeof c&&\"function\"==typeof f[c]&&(e=f[c].apply(f,d))}),e===b||e instanceof k||e instanceof l)return this;if(this.length>1)throw new Error(\"Using only allowed for the collection of a single element (\"+c+\" function)\");return e};a.fn.datepicker=n;var o=a.fn.datepicker.defaults={assumeNearbyYear:!1,autoclose:!1,beforeShowDay:a.noop,beforeShowMonth:a.noop,beforeShowYear:a.noop,beforeShowDecade:a.noop,beforeShowCentury:a.noop,calendarWeeks:!1,clearBtn:!1,toggleActive:!1,daysOfWeekDisabled:[],daysOfWeekHighlighted:[],datesDisabled:[],endDate:1/0,forceParse:!0,format:\"mm/dd/yyyy\",keyboardNavigation:!0,language:\"en\",minViewMode:0,maxViewMode:4,multidate:!1,multidateSeparator:\",\",orientation:\"auto\",rtl:!1,startDate:-(1/0),startView:0,todayBtn:!1,todayHighlight:!1,weekStart:0,disableTouchKeyboard:!1,enableOnReadonly:!0,showOnFocus:!0,zIndexOffset:10,container:\"body\",immediateUpdates:!1,title:\"\",templates:{leftArrow:\"&laquo;\",rightArrow:\"&raquo;\"}},p=a.fn.datepicker.locale_opts=[\"format\",\"rtl\",\"weekStart\"];a.fn.datepicker.Constructor=k;var q=a.fn.datepicker.dates={en:{days:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],daysShort:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],daysMin:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],monthsShort:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],today:\"Today\",clear:\"Clear\",titleFormat:\"MM yyyy\"}},r={modes:[{clsName:\"days\",navFnc:\"Month\",navStep:1},{clsName:\"months\",navFnc:\"FullYear\",navStep:1},{clsName:\"years\",navFnc:\"FullYear\",navStep:10},{clsName:\"decades\",navFnc:\"FullDecade\",navStep:100},{clsName:\"centuries\",navFnc:\"FullCentury\",navStep:1e3}],isLeapYear:function(a){return a%4===0&&a%100!==0||a%400===0},getDaysInMonth:function(a,b){return[31,r.isLeapYear(a)?29:28,31,30,31,30,31,31,30,31,30,31][b]},validParts:/dd?|DD?|mm?|MM?|yy(?:yy)?/g,nonpunctuation:/[^ -\\/:-@\\u5e74\\u6708\\u65e5\\[-`{-~\\t\\n\\r]+/g,parseFormat:function(a){if(\"function\"==typeof a.toValue&&\"function\"==typeof a.toDisplay)return a;var b=a.replace(this.validParts,\"\\x00\").split(\"\\x00\"),c=a.match(this.validParts);if(!b||!b.length||!c||0===c.length)throw new Error(\"Invalid date format.\");return{separators:b,parts:c}},parseDate:function(e,f,g,h){function i(a,b){return b===!0&&(b=10),100>a&&(a+=2e3,a>(new Date).getFullYear()+b&&(a-=100)),a}function j(){var a=this.slice(0,s[n].length),b=s[n].slice(0,a.length);return a.toLowerCase()===b.toLowerCase()}if(!e)return b;if(e instanceof Date)return e;if(\"string\"==typeof f&&(f=r.parseFormat(f)),f.toValue)return f.toValue(e,f,g);var l,m,n,o,p=/([\\-+]\\d+)([dmwy])/,s=e.match(/([\\-+]\\d+)([dmwy])/g),t={d:\"moveDay\",m:\"moveMonth\",w:\"moveWeek\",y:\"moveYear\"},u={yesterday:\"-1d\",today:\"+0d\",tomorrow:\"+1d\"};if(/^[\\-+]\\d+[dmwy]([\\s,]+[\\-+]\\d+[dmwy])*$/.test(e)){for(e=new Date,n=0;n<s.length;n++)l=p.exec(s[n]),m=parseInt(l[1]),o=t[l[2]],e=k.prototype[o](e,m);return c(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate())}if(\"undefined\"!=typeof u[e]&&(e=u[e],s=e.match(/([\\-+]\\d+)([dmwy])/g),/^[\\-+]\\d+[dmwy]([\\s,]+[\\-+]\\d+[dmwy])*$/.test(e))){for(e=new Date,n=0;n<s.length;n++)l=p.exec(s[n]),m=parseInt(l[1]),o=t[l[2]],e=k.prototype[o](e,m);return c(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate())}s=e&&e.match(this.nonpunctuation)||[],e=new Date;var v,w,x={},y=[\"yyyy\",\"yy\",\"M\",\"MM\",\"m\",\"mm\",\"d\",\"dd\"],z={yyyy:function(a,b){return a.setUTCFullYear(h?i(b,h):b)},yy:function(a,b){return a.setUTCFullYear(h?i(b,h):b)},m:function(a,b){if(isNaN(a))return a;for(b-=1;0>b;)b+=12;for(b%=12,a.setUTCMonth(b);a.getUTCMonth()!==b;)a.setUTCDate(a.getUTCDate()-1);return a},d:function(a,b){return a.setUTCDate(b)}};z.M=z.MM=z.mm=z.m,z.dd=z.d,e=d();var A=f.parts.slice();if(s.length!==A.length&&(A=a(A).filter(function(b,c){return-1!==a.inArray(c,y)}).toArray()),s.length===A.length){var B;for(n=0,B=A.length;B>n;n++){if(v=parseInt(s[n],10),l=A[n],isNaN(v))switch(l){case\"MM\":w=a(q[g].months).filter(j),v=a.inArray(w[0],q[g].months)+1;break;case\"M\":w=a(q[g].monthsShort).filter(j),v=a.inArray(w[0],q[g].monthsShort)+1;\n}x[l]=v}var C,D;for(n=0;n<y.length;n++)D=y[n],D in x&&!isNaN(x[D])&&(C=new Date(e),z[D](C,x[D]),isNaN(C)||(e=C))}return e},formatDate:function(b,c,d){if(!b)return\"\";if(\"string\"==typeof c&&(c=r.parseFormat(c)),c.toDisplay)return c.toDisplay(b,c,d);var e={d:b.getUTCDate(),D:q[d].daysShort[b.getUTCDay()],DD:q[d].days[b.getUTCDay()],m:b.getUTCMonth()+1,M:q[d].monthsShort[b.getUTCMonth()],MM:q[d].months[b.getUTCMonth()],yy:b.getUTCFullYear().toString().substring(2),yyyy:b.getUTCFullYear()};e.dd=(e.d<10?\"0\":\"\")+e.d,e.mm=(e.m<10?\"0\":\"\")+e.m,b=[];for(var f=a.extend([],c.separators),g=0,h=c.parts.length;h>=g;g++)f.length&&b.push(f.shift()),b.push(e[c.parts[g]]);return b.join(\"\")},headTemplate:'<thead><tr><th colspan=\"7\" class=\"datepicker-title\"></th></tr><tr><th class=\"prev\">&laquo;</th><th colspan=\"5\" class=\"datepicker-switch\"></th><th class=\"next\">&raquo;</th></tr></thead>',contTemplate:'<tbody><tr><td colspan=\"7\"></td></tr></tbody>',footTemplate:'<tfoot><tr><th colspan=\"7\" class=\"today\"></th></tr><tr><th colspan=\"7\" class=\"clear\"></th></tr></tfoot>'};r.template='<div class=\"datepicker\"><div class=\"datepicker-days\"><table class=\" table-condensed\">'+r.headTemplate+\"<tbody></tbody>\"+r.footTemplate+'</table></div><div class=\"datepicker-months\"><table class=\"table-condensed\">'+r.headTemplate+r.contTemplate+r.footTemplate+'</table></div><div class=\"datepicker-years\"><table class=\"table-condensed\">'+r.headTemplate+r.contTemplate+r.footTemplate+'</table></div><div class=\"datepicker-decades\"><table class=\"table-condensed\">'+r.headTemplate+r.contTemplate+r.footTemplate+'</table></div><div class=\"datepicker-centuries\"><table class=\"table-condensed\">'+r.headTemplate+r.contTemplate+r.footTemplate+\"</table></div></div>\",a.fn.datepicker.DPGlobal=r,a.fn.datepicker.noConflict=function(){return a.fn.datepicker=m,this},a.fn.datepicker.version=\"1.6.0\",a(document).on(\"focus.datepicker.data-api click.datepicker.data-api\",'[data-provide=\"datepicker\"]',function(b){var c=a(this);c.data(\"datepicker\")||(b.preventDefault(),n.call(c,\"show\"))}),a(function(){n.call(a('[data-provide=\"datepicker-inline\"]'))})});","!function(a){a.fn.datepicker.dates.es={days:[\"Domingo\",\"Lunes\",\"Martes\",\"Miércoles\",\"Jueves\",\"Viernes\",\"Sábado\"],daysShort:[\"Dom\",\"Lun\",\"Mar\",\"Mié\",\"Jue\",\"Vie\",\"Sáb\"],daysMin:[\"Do\",\"Lu\",\"Ma\",\"Mi\",\"Ju\",\"Vi\",\"Sa\"],months:[\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"],monthsShort:[\"Ene\",\"Feb\",\"Mar\",\"Abr\",\"May\",\"Jun\",\"Jul\",\"Ago\",\"Sep\",\"Oct\",\"Nov\",\"Dic\"],today:\"Hoy\",monthsTitle:\"Meses\",clear:\"Borrar\",weekStart:1,format:\"dd/mm/yyyy\"}}(jQuery);","//! moment.js\n//! version : 2.12.0\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, function () { 'use strict';\n\n    var hookCallback;\n\n    function utils_hooks__hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function create_utc__createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    function valid__isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            m._isValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function valid__createInvalid (flags) {\n        var m = create_utc__createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = utils_hooks__hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            utils_hooks__hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (utils_hooks__hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (firstTime) {\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(arguments).join(', ') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    utils_hooks__hooks.suppressDeprecationWarnings = false;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function isObject(input) {\n        return Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function locale_set__set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _ordinalParseLenient.\n        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    // internal storage for locale config files\n    var locales = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we\n                // want to undo that for lazy loaded locales\n                locale_locales__getSetGlobalLocale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function locale_locales__getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = locale_locales__getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale');\n                config = mergeConfigs(locales[name]._config, config);\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    config = mergeConfigs(locales[config.parentLocale]._config, config);\n                } else {\n                    // treat as if there is no base config\n                    deprecateSimple('parentLocaleUndefined',\n                            'specified parentLocale is not defined yet');\n                }\n            }\n            locales[name] = new Locale(config);\n\n            // backwards compat for now: also set the locale\n            locale_locales__getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale;\n            if (locales[name] != null) {\n                config = mergeConfigs(locales[name]._config, config);\n            }\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            locale_locales__getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function locale_locales__getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function locale_locales__listLocales() {\n        return Object.keys(locales);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                get_set__set(this, unit, value);\n                utils_hooks__hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get_set__get(this, unit);\n            }\n        };\n    }\n\n    function get_set__get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function get_set__set (mom, unit, value) {\n        if (mom.isValid()) {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n\n    // MOMENTS\n\n    function getSet (units, value) {\n        var unit;\n        if (typeof units === 'object') {\n            for (unit in units) {\n                this.set(unit, units[unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (typeof callback === 'number') {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = create_utc__createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (typeof value !== 'number') {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            utils_hooks__hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get_set__get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = create_utc__createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')$', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')$', 'i');\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    utils_hooks__hooks.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    function createDate (y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        //the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    utils_hooks__hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', false);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(utils_hooks__hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n            week = defaults(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    utils_hooks__hooks.ISO_8601 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === utils_hooks__hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (getParsingFlags(config).bigHour === true &&\n                config._a[HOUR] <= 12 &&\n                config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!valid__isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || locale_locales__getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return valid__createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else if (isDate(input)) {\n            config._d = input;\n        } else {\n            configFromInput(config);\n        }\n\n        if (!valid__isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (input === undefined) {\n            config._d = new Date(utils_hooks__hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (typeof(input) === 'object') {\n            configFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function local__createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n         'moment().min is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n         function () {\n             var other = local__createLocal.apply(null, arguments);\n             if (this.isValid() && other.isValid()) {\n                 return other < this ? this : other;\n             } else {\n                 return valid__createInvalid();\n             }\n         }\n     );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n        function () {\n            var other = local__createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return valid__createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return local__createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = locale_locales__getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = ((string || '').match(matcher) || []);\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            utils_hooks__hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return local__createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    utils_hooks__hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n            } else if (Math.abs(input) < 16) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    utils_hooks__hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm) {\n            this.utcOffset(this._tzm);\n        } else if (typeof this._i === 'string') {\n            this.utcOffset(offsetFromString(matchOffset, this._i));\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? local__createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?\\d*)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$/;\n\n    function create__createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])        * sign,\n                h  : toInt(match[HOUR])        * sign,\n                m  : toInt(match[MINUTE])      * sign,\n                s  : toInt(match[SECOND])      * sign,\n                ms : toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    create__createDuration.fn = Duration.prototype;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = create__createDuration(val, period);\n            add_subtract__addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            utils_hooks__hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add_subtract__add      = createAdder(1, 'add');\n    var add_subtract__subtract = createAdder(-1, 'subtract');\n\n    function moment_calendar__calendar (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || local__createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            diff = this.diff(sod, 'days', true),\n            format = diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format]() : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : local__createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return +this > +localInput;\n        } else {\n            return +localInput < +this.clone().startOf(units);\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : local__createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return +this < +localInput;\n        } else {\n            return +this.clone().endOf(units) < +localInput;\n        }\n    }\n\n    function isBetween (from, to, units) {\n        return this.isAfter(from, units) && this.isBefore(to, units);\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : local__createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return +this === +localInput;\n        } else {\n            inputMs = +localInput;\n            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            delta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        if (units === 'year' || units === 'month' || units === 'quarter') {\n            output = monthDiff(this, that);\n            if (units === 'quarter') {\n                output = output / 3;\n            } else if (units === 'year') {\n                output = output / 12;\n            }\n        } else {\n            delta = this - that;\n            output = units === 'second' ? delta / 1e3 : // 1000\n                units === 'minute' ? delta / 6e4 : // 1000 * 60\n                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                delta;\n        }\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        return -(wholeMonthDiff + adjust);\n    }\n\n    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function moment_format__toISOString () {\n        var m = this.clone().utc();\n        if (0 < m.year() && m.year() <= 9999) {\n            if (isFunction(Date.prototype.toISOString)) {\n                // native implementation is ~50x faster, use it when we can\n                return this.toDate().toISOString();\n            } else {\n                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        } else {\n            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        }\n    }\n\n    function format (inputString) {\n        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 local__createLocal(time).isValid())) {\n            return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(local__createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 local__createLocal(time).isValid())) {\n            return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(local__createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = locale_locales__getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function to_type__valueOf () {\n        return +this._d - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(+this / 1000);\n    }\n\n    function toDate () {\n        return this._offset ? new Date(+this) : this._d;\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function moment_valid__isValid () {\n        return valid__isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0], 10);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   matchWord);\n    addRegexToken('ddd',  matchWord);\n    addRegexToken('dddd', matchWord);\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return this._weekdaysShort[m.day()];\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return this._weekdaysMin[m.day()];\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = local__createLocal([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n    }\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var momentPrototype__proto = Moment.prototype;\n\n    momentPrototype__proto.add               = add_subtract__add;\n    momentPrototype__proto.calendar          = moment_calendar__calendar;\n    momentPrototype__proto.clone             = clone;\n    momentPrototype__proto.diff              = diff;\n    momentPrototype__proto.endOf             = endOf;\n    momentPrototype__proto.format            = format;\n    momentPrototype__proto.from              = from;\n    momentPrototype__proto.fromNow           = fromNow;\n    momentPrototype__proto.to                = to;\n    momentPrototype__proto.toNow             = toNow;\n    momentPrototype__proto.get               = getSet;\n    momentPrototype__proto.invalidAt         = invalidAt;\n    momentPrototype__proto.isAfter           = isAfter;\n    momentPrototype__proto.isBefore          = isBefore;\n    momentPrototype__proto.isBetween         = isBetween;\n    momentPrototype__proto.isSame            = isSame;\n    momentPrototype__proto.isSameOrAfter     = isSameOrAfter;\n    momentPrototype__proto.isSameOrBefore    = isSameOrBefore;\n    momentPrototype__proto.isValid           = moment_valid__isValid;\n    momentPrototype__proto.lang              = lang;\n    momentPrototype__proto.locale            = locale;\n    momentPrototype__proto.localeData        = localeData;\n    momentPrototype__proto.max               = prototypeMax;\n    momentPrototype__proto.min               = prototypeMin;\n    momentPrototype__proto.parsingFlags      = parsingFlags;\n    momentPrototype__proto.set               = getSet;\n    momentPrototype__proto.startOf           = startOf;\n    momentPrototype__proto.subtract          = add_subtract__subtract;\n    momentPrototype__proto.toArray           = toArray;\n    momentPrototype__proto.toObject          = toObject;\n    momentPrototype__proto.toDate            = toDate;\n    momentPrototype__proto.toISOString       = moment_format__toISOString;\n    momentPrototype__proto.toJSON            = toJSON;\n    momentPrototype__proto.toString          = toString;\n    momentPrototype__proto.unix              = unix;\n    momentPrototype__proto.valueOf           = to_type__valueOf;\n    momentPrototype__proto.creationData      = creationData;\n\n    // Year\n    momentPrototype__proto.year       = getSetYear;\n    momentPrototype__proto.isLeapYear = getIsLeapYear;\n\n    // Week Year\n    momentPrototype__proto.weekYear    = getSetWeekYear;\n    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;\n\n    // Quarter\n    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;\n\n    // Month\n    momentPrototype__proto.month       = getSetMonth;\n    momentPrototype__proto.daysInMonth = getDaysInMonth;\n\n    // Week\n    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;\n    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;\n    momentPrototype__proto.weeksInYear    = getWeeksInYear;\n    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;\n\n    // Day\n    momentPrototype__proto.date       = getSetDayOfMonth;\n    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;\n    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;\n    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;\n    momentPrototype__proto.dayOfYear  = getSetDayOfYear;\n\n    // Hour\n    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;\n\n    // Minute\n    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;\n\n    // Second\n    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;\n\n    // Millisecond\n    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;\n\n    // Offset\n    momentPrototype__proto.utcOffset            = getSetOffset;\n    momentPrototype__proto.utc                  = setOffsetToUTC;\n    momentPrototype__proto.local                = setOffsetToLocal;\n    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;\n    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    momentPrototype__proto.isDST                = isDaylightSavingTime;\n    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;\n    momentPrototype__proto.isLocal              = isLocal;\n    momentPrototype__proto.isUtcOffset          = isUtcOffset;\n    momentPrototype__proto.isUtc                = isUtc;\n    momentPrototype__proto.isUTC                = isUtc;\n\n    // Timezone\n    momentPrototype__proto.zoneAbbr = getZoneAbbr;\n    momentPrototype__proto.zoneName = getZoneName;\n\n    // Deprecations\n    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);\n\n    var momentPrototype = momentPrototype__proto;\n\n    function moment__createUnix (input) {\n        return local__createLocal(input * 1000);\n    }\n\n    function moment__createInZone () {\n        return local__createLocal.apply(null, arguments).parseZone();\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function locale_calendar__calendar (key, mom, now) {\n        var output = this._calendar[key];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relative__relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var prototype__proto = Locale.prototype;\n\n    prototype__proto._calendar       = defaultCalendar;\n    prototype__proto.calendar        = locale_calendar__calendar;\n    prototype__proto._longDateFormat = defaultLongDateFormat;\n    prototype__proto.longDateFormat  = longDateFormat;\n    prototype__proto._invalidDate    = defaultInvalidDate;\n    prototype__proto.invalidDate     = invalidDate;\n    prototype__proto._ordinal        = defaultOrdinal;\n    prototype__proto.ordinal         = ordinal;\n    prototype__proto._ordinalParse   = defaultOrdinalParse;\n    prototype__proto.preparse        = preParsePostFormat;\n    prototype__proto.postformat      = preParsePostFormat;\n    prototype__proto._relativeTime   = defaultRelativeTime;\n    prototype__proto.relativeTime    = relative__relativeTime;\n    prototype__proto.pastFuture      = pastFuture;\n    prototype__proto.set             = locale_set__set;\n\n    // Month\n    prototype__proto.months            =        localeMonths;\n    prototype__proto._months           = defaultLocaleMonths;\n    prototype__proto.monthsShort       =        localeMonthsShort;\n    prototype__proto._monthsShort      = defaultLocaleMonthsShort;\n    prototype__proto.monthsParse       =        localeMonthsParse;\n    prototype__proto._monthsRegex      = defaultMonthsRegex;\n    prototype__proto.monthsRegex       = monthsRegex;\n    prototype__proto._monthsShortRegex = defaultMonthsShortRegex;\n    prototype__proto.monthsShortRegex  = monthsShortRegex;\n\n    // Week\n    prototype__proto.week = localeWeek;\n    prototype__proto._week = defaultLocaleWeek;\n    prototype__proto.firstDayOfYear = localeFirstDayOfYear;\n    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;\n\n    // Day of Week\n    prototype__proto.weekdays       =        localeWeekdays;\n    prototype__proto._weekdays      = defaultLocaleWeekdays;\n    prototype__proto.weekdaysMin    =        localeWeekdaysMin;\n    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;\n    prototype__proto.weekdaysShort  =        localeWeekdaysShort;\n    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;\n    prototype__proto.weekdaysParse  =        localeWeekdaysParse;\n\n    // Hours\n    prototype__proto.isPM = localeIsPM;\n    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;\n    prototype__proto.meridiem = localeMeridiem;\n\n    function lists__get (format, index, field, setter) {\n        var locale = locale_locales__getLocale();\n        var utc = create_utc__createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function list (format, index, field, count, setter) {\n        if (typeof format === 'number') {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return lists__get(format, index, field, setter);\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < count; i++) {\n            out[i] = lists__get(format, i, field, setter);\n        }\n        return out;\n    }\n\n    function lists__listMonths (format, index) {\n        return list(format, index, 'months', 12, 'month');\n    }\n\n    function lists__listMonthsShort (format, index) {\n        return list(format, index, 'monthsShort', 12, 'month');\n    }\n\n    function lists__listWeekdays (format, index) {\n        return list(format, index, 'weekdays', 7, 'day');\n    }\n\n    function lists__listWeekdaysShort (format, index) {\n        return list(format, index, 'weekdaysShort', 7, 'day');\n    }\n\n    function lists__listWeekdaysMin (format, index) {\n        return list(format, index, 'weekdaysMin', 7, 'day');\n    }\n\n    locale_locales__getSetGlobalLocale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);\n    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);\n\n    var mathAbs = Math.abs;\n\n    function duration_abs__abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function duration_add_subtract__addSubtract (duration, input, value, direction) {\n        var other = create__createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function duration_add_subtract__add (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function duration_add_subtract__subtract (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function duration_as__valueOf () {\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function duration_get__get (units) {\n        units = normalizeUnits(units);\n        return this[units + 's']();\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this._data[name];\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        s: 45,  // seconds to minute\n        m: 45,  // minutes to hour\n        h: 22,  // hours to day\n        d: 26,  // days to month\n        M: 11   // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {\n        var duration = create__createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds < thresholds.s && ['s', seconds]  ||\n                minutes <= 1           && ['m']           ||\n                minutes < thresholds.m && ['mm', minutes] ||\n                hours   <= 1           && ['h']           ||\n                hours   < thresholds.h && ['hh', hours]   ||\n                days    <= 1           && ['d']           ||\n                days    < thresholds.d && ['dd', days]    ||\n                months  <= 1           && ['M']           ||\n                months  < thresholds.M && ['MM', months]  ||\n                years   <= 1           && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        var locale = this.localeData();\n        var output = duration_humanize__relativeTime(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var iso_string__abs = Math.abs;\n\n    function iso_string__toISOString() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        var seconds = iso_string__abs(this._milliseconds) / 1000;\n        var days         = iso_string__abs(this._days);\n        var months       = iso_string__abs(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds;\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        return (total < 0 ? '-' : '') +\n            'P' +\n            (Y ? Y + 'Y' : '') +\n            (M ? M + 'M' : '') +\n            (D ? D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? h + 'H' : '') +\n            (m ? m + 'M' : '') +\n            (s ? s + 'S' : '');\n    }\n\n    var duration_prototype__proto = Duration.prototype;\n\n    duration_prototype__proto.abs            = duration_abs__abs;\n    duration_prototype__proto.add            = duration_add_subtract__add;\n    duration_prototype__proto.subtract       = duration_add_subtract__subtract;\n    duration_prototype__proto.as             = as;\n    duration_prototype__proto.asMilliseconds = asMilliseconds;\n    duration_prototype__proto.asSeconds      = asSeconds;\n    duration_prototype__proto.asMinutes      = asMinutes;\n    duration_prototype__proto.asHours        = asHours;\n    duration_prototype__proto.asDays         = asDays;\n    duration_prototype__proto.asWeeks        = asWeeks;\n    duration_prototype__proto.asMonths       = asMonths;\n    duration_prototype__proto.asYears        = asYears;\n    duration_prototype__proto.valueOf        = duration_as__valueOf;\n    duration_prototype__proto._bubble        = bubble;\n    duration_prototype__proto.get            = duration_get__get;\n    duration_prototype__proto.milliseconds   = milliseconds;\n    duration_prototype__proto.seconds        = seconds;\n    duration_prototype__proto.minutes        = minutes;\n    duration_prototype__proto.hours          = hours;\n    duration_prototype__proto.days           = days;\n    duration_prototype__proto.weeks          = weeks;\n    duration_prototype__proto.months         = months;\n    duration_prototype__proto.years          = years;\n    duration_prototype__proto.humanize       = humanize;\n    duration_prototype__proto.toISOString    = iso_string__toISOString;\n    duration_prototype__proto.toString       = iso_string__toISOString;\n    duration_prototype__proto.toJSON         = iso_string__toISOString;\n    duration_prototype__proto.locale         = locale;\n    duration_prototype__proto.localeData     = localeData;\n\n    // Deprecations\n    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);\n    duration_prototype__proto.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    utils_hooks__hooks.version = '2.12.0';\n\n    setHookCallback(local__createLocal);\n\n    utils_hooks__hooks.fn                    = momentPrototype;\n    utils_hooks__hooks.min                   = min;\n    utils_hooks__hooks.max                   = max;\n    utils_hooks__hooks.now                   = now;\n    utils_hooks__hooks.utc                   = create_utc__createUTC;\n    utils_hooks__hooks.unix                  = moment__createUnix;\n    utils_hooks__hooks.months                = lists__listMonths;\n    utils_hooks__hooks.isDate                = isDate;\n    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;\n    utils_hooks__hooks.invalid               = valid__createInvalid;\n    utils_hooks__hooks.duration              = create__createDuration;\n    utils_hooks__hooks.isMoment              = isMoment;\n    utils_hooks__hooks.weekdays              = lists__listWeekdays;\n    utils_hooks__hooks.parseZone             = moment__createInZone;\n    utils_hooks__hooks.localeData            = locale_locales__getLocale;\n    utils_hooks__hooks.isDuration            = isDuration;\n    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;\n    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;\n    utils_hooks__hooks.defineLocale          = defineLocale;\n    utils_hooks__hooks.updateLocale          = updateLocale;\n    utils_hooks__hooks.locales               = locale_locales__listLocales;\n    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;\n    utils_hooks__hooks.normalizeUnits        = normalizeUnits;\n    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;\n    utils_hooks__hooks.prototype             = momentPrototype;\n\n    var _moment = utils_hooks__hooks;\n\n    return _moment;\n\n}));","/* Javascript plotting library for jQuery, version 0.8.3.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\n*/\n\n// first an inline dependency, jquery.colorhelpers.js, we inline it here\n// for convenience\n\n/* Plugin for jQuery for working with colors.\n *\n * Version 1.1.\n *\n * Inspiration from jQuery color animation plugin by John Resig.\n *\n * Released under the MIT license by Ole Laursen, October 2009.\n *\n * Examples:\n *\n *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n *   console.log(c.r, c.g, c.b, c.a);\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n *\n * Note that .scale() and .add() return the same modified object\n * instead of making a new one.\n *\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\n * produce a color rather than just crashing.\n */\n(function($){$.color={};$.color.make=function(r,g,b,a){var o={};o.r=r||0;o.g=g||0;o.b=b||0;o.a=a!=null?a:1;o.add=function(c,d){for(var i=0;i<c.length;++i)o[c.charAt(i)]+=d;return o.normalize()};o.scale=function(c,f){for(var i=0;i<c.length;++i)o[c.charAt(i)]*=f;return o.normalize()};o.toString=function(){if(o.a>=1){return\"rgb(\"+[o.r,o.g,o.b].join(\",\")+\")\"}else{return\"rgba(\"+[o.r,o.g,o.b,o.a].join(\",\")+\")\"}};o.normalize=function(){function clamp(min,value,max){return value<min?min:value>max?max:value}o.r=clamp(0,parseInt(o.r),255);o.g=clamp(0,parseInt(o.g),255);o.b=clamp(0,parseInt(o.b),255);o.a=clamp(0,o.a,1);return o};o.clone=function(){return $.color.make(o.r,o.b,o.g,o.a)};return o.normalize()};$.color.extract=function(elem,css){var c;do{c=elem.css(css).toLowerCase();if(c!=\"\"&&c!=\"transparent\")break;elem=elem.parent()}while(elem.length&&!$.nodeName(elem.get(0),\"body\"));if(c==\"rgba(0, 0, 0, 0)\")c=\"transparent\";return $.color.parse(c)};$.color.parse=function(str){var res,m=$.color.make;if(res=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10));if(res=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10),parseFloat(res[4]));if(res=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55);if(res=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55,parseFloat(res[4]));if(res=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1],16),parseInt(res[2],16),parseInt(res[3],16));if(res=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1]+res[1],16),parseInt(res[2]+res[2],16),parseInt(res[3]+res[3],16));var name=$.trim(str).toLowerCase();if(name==\"transparent\")return m(255,255,255,0);else{res=lookupColors[name]||[0,0,0];return m(res[0],res[1],res[2])}};var lookupColors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\n\n// the actual Flot code\n(function($) {\n\n\t// Cache the prototype hasOwnProperty for faster access\n\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\n    // operation produces the same effect as detach, i.e. removing the element\n    // without touching its jQuery data.\n\n    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\n\n    if (!$.fn.detach) {\n        $.fn.detach = function() {\n            return this.each(function() {\n                if (this.parentNode) {\n                    this.parentNode.removeChild( this );\n                }\n            });\n        };\n    }\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The Canvas object is a wrapper around an HTML5 <canvas> tag.\n\t//\n\t// @constructor\n\t// @param {string} cls List of classes to apply to the canvas.\n\t// @param {element} container Element onto which to append the canvas.\n\t//\n\t// Requiring a container is a little iffy, but unfortunately canvas\n\t// operations don't work unless the canvas is attached to the DOM.\n\n\tfunction Canvas(cls, container) {\n\n\t\tvar element = container.children(\".\" + cls)[0];\n\n\t\tif (element == null) {\n\n\t\t\telement = document.createElement(\"canvas\");\n\t\t\telement.className = cls;\n\n\t\t\t$(element).css({ direction: \"ltr\", position: \"absolute\", left: 0, top: 0 })\n\t\t\t\t.appendTo(container);\n\n\t\t\t// If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\n\n\t\t\tif (!element.getContext) {\n\t\t\t\tif (window.G_vmlCanvasManager) {\n\t\t\t\t\telement = window.G_vmlCanvasManager.initElement(element);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.element = element;\n\n\t\tvar context = this.context = element.getContext(\"2d\");\n\n\t\t// Determine the screen's ratio of physical to device-independent\n\t\t// pixels.  This is the ratio between the canvas width that the browser\n\t\t// advertises and the number of pixels actually present in that space.\n\n\t\t// The iPhone 4, for example, has a device-independent width of 320px,\n\t\t// but its screen is actually 640px wide.  It therefore has a pixel\n\t\t// ratio of 2, while most normal devices have a ratio of 1.\n\n\t\tvar devicePixelRatio = window.devicePixelRatio || 1,\n\t\t\tbackingStoreRatio =\n\t\t\t\tcontext.webkitBackingStorePixelRatio ||\n\t\t\t\tcontext.mozBackingStorePixelRatio ||\n\t\t\t\tcontext.msBackingStorePixelRatio ||\n\t\t\t\tcontext.oBackingStorePixelRatio ||\n\t\t\t\tcontext.backingStorePixelRatio || 1;\n\n\t\tthis.pixelRatio = devicePixelRatio / backingStoreRatio;\n\n\t\t// Size the canvas to match the internal dimensions of its container\n\n\t\tthis.resize(container.width(), container.height());\n\n\t\t// Collection of HTML div layers for text overlaid onto the canvas\n\n\t\tthis.textContainer = null;\n\t\tthis.text = {};\n\n\t\t// Cache of text fragments and metrics, so we can avoid expensively\n\t\t// re-calculating them when the plot is re-rendered in a loop.\n\n\t\tthis._textCache = {};\n\t}\n\n\t// Resizes the canvas to the given dimensions.\n\t//\n\t// @param {number} width New width of the canvas, in pixels.\n\t// @param {number} width New height of the canvas, in pixels.\n\n\tCanvas.prototype.resize = function(width, height) {\n\n\t\tif (width <= 0 || height <= 0) {\n\t\t\tthrow new Error(\"Invalid dimensions for plot, width = \" + width + \", height = \" + height);\n\t\t}\n\n\t\tvar element = this.element,\n\t\t\tcontext = this.context,\n\t\t\tpixelRatio = this.pixelRatio;\n\n\t\t// Resize the canvas, increasing its density based on the display's\n\t\t// pixel ratio; basically giving it more pixels without increasing the\n\t\t// size of its element, to take advantage of the fact that retina\n\t\t// displays have that many more pixels in the same advertised space.\n\n\t\t// Resizing should reset the state (excanvas seems to be buggy though)\n\n\t\tif (this.width != width) {\n\t\t\telement.width = width * pixelRatio;\n\t\t\telement.style.width = width + \"px\";\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tif (this.height != height) {\n\t\t\telement.height = height * pixelRatio;\n\t\t\telement.style.height = height + \"px\";\n\t\t\tthis.height = height;\n\t\t}\n\n\t\t// Save the context, so we can reset in case we get replotted.  The\n\t\t// restore ensure that we're really back at the initial state, and\n\t\t// should be safe even if we haven't saved the initial state yet.\n\n\t\tcontext.restore();\n\t\tcontext.save();\n\n\t\t// Scale the coordinate space to match the display density; so even though we\n\t\t// may have twice as many pixels, we still want lines and other drawing to\n\t\t// appear at the same size; the extra pixels will just make them crisper.\n\n\t\tcontext.scale(pixelRatio, pixelRatio);\n\t};\n\n\t// Clears the entire canvas area, not including any overlaid HTML text\n\n\tCanvas.prototype.clear = function() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t};\n\n\t// Finishes rendering the canvas, including managing the text overlay.\n\n\tCanvas.prototype.render = function() {\n\n\t\tvar cache = this._textCache;\n\n\t\t// For each text layer, add elements marked as active that haven't\n\t\t// already been rendered, and remove those that are no longer active.\n\n\t\tfor (var layerKey in cache) {\n\t\t\tif (hasOwnProperty.call(cache, layerKey)) {\n\n\t\t\t\tvar layer = this.getTextLayer(layerKey),\n\t\t\t\t\tlayerCache = cache[layerKey];\n\n\t\t\t\tlayer.hide();\n\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tif (position.active) {\n\t\t\t\t\t\t\t\t\t\tif (!position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tlayer.append(position.element);\n\t\t\t\t\t\t\t\t\t\t\tposition.rendered = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpositions.splice(i--, 1);\n\t\t\t\t\t\t\t\t\t\tif (position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tposition.element.detach();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (positions.length == 0) {\n\t\t\t\t\t\t\t\t\tdelete styleCache[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlayer.show();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Creates (if necessary) and returns the text overlay container.\n\t//\n\t// @param {string} classes String of space-separated CSS classes used to\n\t//     uniquely identify the text layer.\n\t// @return {object} The jQuery-wrapped text-layer div.\n\n\tCanvas.prototype.getTextLayer = function(classes) {\n\n\t\tvar layer = this.text[classes];\n\n\t\t// Create the text layer if it doesn't exist\n\n\t\tif (layer == null) {\n\n\t\t\t// Create the text layer container, if it doesn't exist\n\n\t\t\tif (this.textContainer == null) {\n\t\t\t\tthis.textContainer = $(\"<div class='flot-text'></div>\")\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t'font-size': \"smaller\",\n\t\t\t\t\t\tcolor: \"#545454\"\n\t\t\t\t\t})\n\t\t\t\t\t.insertAfter(this.element);\n\t\t\t}\n\n\t\t\tlayer = this.text[classes] = $(\"<div></div>\")\n\t\t\t\t.addClass(classes)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tbottom: 0,\n\t\t\t\t\tright: 0\n\t\t\t\t})\n\t\t\t\t.appendTo(this.textContainer);\n\t\t}\n\n\t\treturn layer;\n\t};\n\n\t// Creates (if necessary) and returns a text info object.\n\t//\n\t// The object looks like this:\n\t//\n\t// {\n\t//     width: Width of the text's wrapper div.\n\t//     height: Height of the text's wrapper div.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     positions: Array of positions at which this text is drawn.\n\t// }\n\t//\n\t// The positions array contains objects that look like this:\n\t//\n\t// {\n\t//     active: Flag indicating whether the text should be visible.\n\t//     rendered: Flag indicating whether the text is currently visible.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     x: X coordinate at which to draw the text.\n\t//     y: Y coordinate at which to draw the text.\n\t// }\n\t//\n\t// Each position after the first receives a clone of the original element.\n\t//\n\t// The idea is that that the width, height, and general 'identity' of the\n\t// text is constant no matter where it is placed; the placements are a\n\t// secondary property.\n\t//\n\t// Canvas maintains a cache of recently-used text info objects; getTextInfo\n\t// either returns the cached element or creates a new entry.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {string} text Text string to retrieve info for.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @return {object} a text info object.\n\n\tCanvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\n\n\t\tvar textStyle, layerCache, styleCache, info;\n\n\t\t// Cast the value to a string, in case we were given a number or such\n\n\t\ttext = \"\" + text;\n\n\t\t// If the font is a font-spec object, generate a CSS font definition\n\n\t\tif (typeof font === \"object\") {\n\t\t\ttextStyle = font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \"px/\" + font.lineHeight + \"px \" + font.family;\n\t\t} else {\n\t\t\ttextStyle = font;\n\t\t}\n\n\t\t// Retrieve (or create) the cache for the text's layer and styles\n\n\t\tlayerCache = this._textCache[layer];\n\n\t\tif (layerCache == null) {\n\t\t\tlayerCache = this._textCache[layer] = {};\n\t\t}\n\n\t\tstyleCache = layerCache[textStyle];\n\n\t\tif (styleCache == null) {\n\t\t\tstyleCache = layerCache[textStyle] = {};\n\t\t}\n\n\t\tinfo = styleCache[text];\n\n\t\t// If we can't find a matching element in our cache, create a new one\n\n\t\tif (info == null) {\n\n\t\t\tvar element = $(\"<div></div>\").html(text)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t'max-width': width,\n\t\t\t\t\ttop: -9999\n\t\t\t\t})\n\t\t\t\t.appendTo(this.getTextLayer(layer));\n\n\t\t\tif (typeof font === \"object\") {\n\t\t\t\telement.css({\n\t\t\t\t\tfont: textStyle,\n\t\t\t\t\tcolor: font.color\n\t\t\t\t});\n\t\t\t} else if (typeof font === \"string\") {\n\t\t\t\telement.addClass(font);\n\t\t\t}\n\n\t\t\tinfo = styleCache[text] = {\n\t\t\t\twidth: element.outerWidth(true),\n\t\t\t\theight: element.outerHeight(true),\n\t\t\t\telement: element,\n\t\t\t\tpositions: []\n\t\t\t};\n\n\t\t\telement.detach();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t// Adds a text string to the canvas text overlay.\n\t//\n\t// The text isn't drawn immediately; it is marked as rendering, which will\n\t// result in its addition to the canvas on the next render pass.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number} x X coordinate at which to draw the text.\n\t// @param {number} y Y coordinate at which to draw the text.\n\t// @param {string} text Text string to draw.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @param {string=} halign Horizontal alignment of the text; either \"left\",\n\t//     \"center\" or \"right\".\n\t// @param {string=} valign Vertical alignment of the text; either \"top\",\n\t//     \"middle\" or \"bottom\".\n\n\tCanvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign) {\n\n\t\tvar info = this.getTextInfo(layer, text, font, angle, width),\n\t\t\tpositions = info.positions;\n\n\t\t// Tweak the div's position to match the text's alignment\n\n\t\tif (halign == \"center\") {\n\t\t\tx -= info.width / 2;\n\t\t} else if (halign == \"right\") {\n\t\t\tx -= info.width;\n\t\t}\n\n\t\tif (valign == \"middle\") {\n\t\t\ty -= info.height / 2;\n\t\t} else if (valign == \"bottom\") {\n\t\t\ty -= info.height;\n\t\t}\n\n\t\t// Determine whether this text already exists at this position.\n\t\t// If so, mark it for inclusion in the next render pass.\n\n\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\tposition.active = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the text doesn't exist at this position, create a new entry\n\n\t\t// For the very first position we'll re-use the original element,\n\t\t// while for subsequent ones we'll clone it.\n\n\t\tposition = {\n\t\t\tactive: true,\n\t\t\trendered: false,\n\t\t\telement: positions.length ? info.element.clone() : info.element,\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\n\t\tpositions.push(position);\n\n\t\t// Move the element to its final position within the container\n\n\t\tposition.element.css({\n\t\t\ttop: Math.round(y),\n\t\t\tleft: Math.round(x),\n\t\t\t'text-align': halign\t// In case the text wraps\n\t\t});\n\t};\n\n\t// Removes one or more text strings from the canvas text overlay.\n\t//\n\t// If no parameters are given, all text within the layer is removed.\n\t//\n\t// Note that the text is not immediately removed; it is simply marked as\n\t// inactive, which will result in its removal on the next render pass.\n\t// This avoids the performance penalty for 'clear and redraw' behavior,\n\t// where we potentially get rid of all text on a layer, but will likely\n\t// add back most or all of it later, as when redrawing axes, for example.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number=} x X coordinate of the text.\n\t// @param {number=} y Y coordinate of the text.\n\t// @param {string=} text Text string to remove.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which the text is rotated, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\n\tCanvas.prototype.removeText = function(layer, x, y, text, font, angle) {\n\t\tif (text == null) {\n\t\t\tvar layerCache = this._textCache[layer];\n\t\t\tif (layerCache != null) {\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar positions = this.getTextInfo(layer, text, font, angle).positions;\n\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\tposition.active = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The top-level container for the entire plot.\n\n    function Plot(placeholder, data_, options_, plugins) {\n        // data is on the form:\n        //   [ series1, series2 ... ]\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n\n        var series = [],\n            options = {\n                // the color theme used for graphs\n                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n                legend: {\n                    show: true,\n                    noColumns: 1, // number of colums in legend table\n                    labelFormatter: null, // fn: string -> string\n                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\n                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n                    position: \"ne\", // position of default legend container within plot\n                    margin: 5, // distance from grid edge to default legend container within plot\n                    backgroundColor: null, // null means auto-detect\n                    backgroundOpacity: 0.85, // set to 0 to avoid background\n                    sorted: null    // default to no legend sorting\n                },\n                xaxis: {\n                    show: null, // null = auto-detect, true = always, false = never\n                    position: \"bottom\", // or \"top\"\n                    mode: null, // null or \"time\"\n                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\n                    color: null, // base color, labels, ticks\n                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    transform: null, // null or f: number -> number to transform axis\n                    inverseTransform: null, // if transform is set, this should be the inverse function\n                    min: null, // min. value to show, null means set automatically\n                    max: null, // max. value to show, null means set automatically\n                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\n                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n                    tickFormatter: null, // fn: number -> string\n                    labelWidth: null, // size of tick labels in pixels\n                    labelHeight: null,\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\n                    alignTicksWithAxis: null, // axis number or null for no sync\n                    tickDecimals: null, // no. of decimals, null means auto\n                    tickSize: null, // number or [number, \"unit\"]\n                    minTickSize: null // number or [number, \"unit\"]\n                },\n                yaxis: {\n                    autoscaleMargin: 0.02,\n                    position: \"left\" // or \"right\"\n                },\n                xaxes: [],\n                yaxes: [],\n                series: {\n                    points: {\n                        show: false,\n                        radius: 3,\n                        lineWidth: 2, // in pixels\n                        fill: true,\n                        fillColor: \"#ffffff\",\n                        symbol: \"circle\" // or callback\n                    },\n                    lines: {\n                        // we don't put in show: false so we can see\n                        // whether lines were actively disabled\n                        lineWidth: 2, // in pixels\n                        fill: false,\n                        fillColor: null,\n                        steps: false\n                        // Omit 'zero', so we can later default its value to\n                        // match that of the 'fill' option.\n                    },\n                    bars: {\n                        show: false,\n                        lineWidth: 2, // in pixels\n                        barWidth: 1, // in units of the x axis\n                        fill: true,\n                        fillColor: null,\n                        align: \"left\", // \"left\", \"right\", or \"center\"\n                        horizontal: false,\n                        zero: true\n                    },\n                    shadowSize: 3,\n                    highlightColor: null\n                },\n                grid: {\n                    show: true,\n                    aboveData: false,\n                    color: \"#545454\", // primary color used for outline and labels\n                    backgroundColor: null, // null for transparent, else color\n                    borderColor: null, // set if different from the grid color\n                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    margin: 0, // distance from the canvas edge to the grid\n                    labelMargin: 5, // in pixels\n                    axisMargin: 8, // in pixels\n                    borderWidth: 2, // in pixels\n                    minBorderMargin: null, // in pixels, null means taken from points radius\n                    markings: null, // array of ranges or fn: axes -> array of ranges\n                    markingsColor: \"#f4f4f4\",\n                    markingsLineWidth: 2,\n                    // interactive stuff\n                    clickable: false,\n                    hoverable: false,\n                    autoHighlight: true, // highlight in case mouse is near\n                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\n                },\n                interaction: {\n                    redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\n                },\n                hooks: {}\n            },\n        surface = null,     // the canvas for the plot itself\n        overlay = null,     // canvas for interactive stuff on top of plot\n        eventHolder = null, // jQuery object that events should be bound to\n        ctx = null, octx = null,\n        xaxes = [], yaxes = [],\n        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\n        plotWidth = 0, plotHeight = 0,\n        hooks = {\n            processOptions: [],\n            processRawData: [],\n            processDatapoints: [],\n            processOffset: [],\n            drawBackground: [],\n            drawSeries: [],\n            draw: [],\n            bindEvents: [],\n            drawOverlay: [],\n            shutdown: []\n        },\n        plot = this;\n\n        // public functions\n        plot.setData = setData;\n        plot.setupGrid = setupGrid;\n        plot.draw = draw;\n        plot.getPlaceholder = function() { return placeholder; };\n        plot.getCanvas = function() { return surface.element; };\n        plot.getPlotOffset = function() { return plotOffset; };\n        plot.width = function () { return plotWidth; };\n        plot.height = function () { return plotHeight; };\n        plot.offset = function () {\n            var o = eventHolder.offset();\n            o.left += plotOffset.left;\n            o.top += plotOffset.top;\n            return o;\n        };\n        plot.getData = function () { return series; };\n        plot.getAxes = function () {\n            var res = {}, i;\n            $.each(xaxes.concat(yaxes), function (_, axis) {\n                if (axis)\n                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\n            });\n            return res;\n        };\n        plot.getXAxes = function () { return xaxes; };\n        plot.getYAxes = function () { return yaxes; };\n        plot.c2p = canvasToAxisCoords;\n        plot.p2c = axisToCanvasCoords;\n        plot.getOptions = function () { return options; };\n        plot.highlight = highlight;\n        plot.unhighlight = unhighlight;\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n        plot.pointOffset = function(point) {\n            return {\n                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\n                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\n            };\n        };\n        plot.shutdown = shutdown;\n        plot.destroy = function () {\n            shutdown();\n            placeholder.removeData(\"plot\").empty();\n\n            series = [];\n            options = null;\n            surface = null;\n            overlay = null;\n            eventHolder = null;\n            ctx = null;\n            octx = null;\n            xaxes = [];\n            yaxes = [];\n            hooks = null;\n            highlights = [];\n            plot = null;\n        };\n        plot.resize = function () {\n        \tvar width = placeholder.width(),\n        \t\theight = placeholder.height();\n            surface.resize(width, height);\n            overlay.resize(width, height);\n        };\n\n        // public attributes\n        plot.hooks = hooks;\n\n        // initialize\n        initPlugins(plot);\n        parseOptions(options_);\n        setupCanvases();\n        setData(data_);\n        setupGrid();\n        draw();\n        bindEvents();\n\n\n        function executeHooks(hook, args) {\n            args = [plot].concat(args);\n            for (var i = 0; i < hook.length; ++i)\n                hook[i].apply(this, args);\n        }\n\n        function initPlugins() {\n\n            // References to key classes, allowing plugins to modify them\n\n            var classes = {\n                Canvas: Canvas\n            };\n\n            for (var i = 0; i < plugins.length; ++i) {\n                var p = plugins[i];\n                p.init(plot, classes);\n                if (p.options)\n                    $.extend(true, options, p.options);\n            }\n        }\n\n        function parseOptions(opts) {\n\n            $.extend(true, options, opts);\n\n            // $.extend merges arrays, rather than replacing them.  When less\n            // colors are provided than the size of the default palette, we\n            // end up with those colors plus the remaining defaults, which is\n            // not expected behavior; avoid it by replacing them here.\n\n            if (opts && opts.colors) {\n            \toptions.colors = opts.colors;\n            }\n\n            if (options.xaxis.color == null)\n                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            if (options.yaxis.color == null)\n                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\n            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\n\n            if (options.grid.borderColor == null)\n                options.grid.borderColor = options.grid.color;\n            if (options.grid.tickColor == null)\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            // Fill in defaults for axis options, including any unspecified\n            // font-spec fields, if a font-spec was provided.\n\n            // If no x/y axis options were provided, create one of each anyway,\n            // since the rest of the code assumes that they exist.\n\n            var i, axisOptions, axisCount,\n                fontSize = placeholder.css(\"font-size\"),\n                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\n                fontDefaults = {\n                    style: placeholder.css(\"font-style\"),\n                    size: Math.round(0.8 * fontSizeDefault),\n                    variant: placeholder.css(\"font-variant\"),\n                    weight: placeholder.css(\"font-weight\"),\n                    family: placeholder.css(\"font-family\")\n                };\n\n            axisCount = options.xaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.xaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\n                options.xaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            axisCount = options.yaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.yaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\n                options.yaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            // backwards compatibility, to be removed in future\n            if (options.xaxis.noTicks && options.xaxis.ticks == null)\n                options.xaxis.ticks = options.xaxis.noTicks;\n            if (options.yaxis.noTicks && options.yaxis.ticks == null)\n                options.yaxis.ticks = options.yaxis.noTicks;\n            if (options.x2axis) {\n                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\n                options.xaxes[1].position = \"top\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.x2axis.min == null) {\n                    options.xaxes[1].min = null;\n                }\n                if (options.x2axis.max == null) {\n                    options.xaxes[1].max = null;\n                }\n            }\n            if (options.y2axis) {\n                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\n                options.yaxes[1].position = \"right\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.y2axis.min == null) {\n                    options.yaxes[1].min = null;\n                }\n                if (options.y2axis.max == null) {\n                    options.yaxes[1].max = null;\n                }\n            }\n            if (options.grid.coloredAreas)\n                options.grid.markings = options.grid.coloredAreas;\n            if (options.grid.coloredAreasColor)\n                options.grid.markingsColor = options.grid.coloredAreasColor;\n            if (options.lines)\n                $.extend(true, options.series.lines, options.lines);\n            if (options.points)\n                $.extend(true, options.series.points, options.points);\n            if (options.bars)\n                $.extend(true, options.series.bars, options.bars);\n            if (options.shadowSize != null)\n                options.series.shadowSize = options.shadowSize;\n            if (options.highlightColor != null)\n                options.series.highlightColor = options.highlightColor;\n\n            // save options on axes for future reference\n            for (i = 0; i < options.xaxes.length; ++i)\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n            for (i = 0; i < options.yaxes.length; ++i)\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n\n            // add hooks from options\n            for (var n in hooks)\n                if (options.hooks[n] && options.hooks[n].length)\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\n\n            executeHooks(hooks.processOptions, [options]);\n        }\n\n        function setData(d) {\n            series = parseData(d);\n            fillInSeriesOptions();\n            processData();\n        }\n\n        function parseData(d) {\n            var res = [];\n            for (var i = 0; i < d.length; ++i) {\n                var s = $.extend(true, {}, options.series);\n\n                if (d[i].data != null) {\n                    s.data = d[i].data; // move the data instead of deep-copy\n                    delete d[i].data;\n\n                    $.extend(true, s, d[i]);\n\n                    d[i].data = s.data;\n                }\n                else\n                    s.data = d[i];\n                res.push(s);\n            }\n\n            return res;\n        }\n\n        function axisNumber(obj, coord) {\n            var a = obj[coord + \"axis\"];\n            if (typeof a == \"object\") // if we got a real axis, extract number\n                a = a.n;\n            if (typeof a != \"number\")\n                a = 1; // default to first axis\n            return a;\n        }\n\n        function allAxes() {\n            // return flat array without annoying null entries\n            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\n        }\n\n        function canvasToAxisCoords(pos) {\n            // return an object with x/y corresponding to all used axes\n            var res = {}, i, axis;\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used)\n                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used)\n                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n            }\n\n            if (res.x1 !== undefined)\n                res.x = res.x1;\n            if (res.y1 !== undefined)\n                res.y = res.y1;\n\n            return res;\n        }\n\n        function axisToCanvasCoords(pos) {\n            // get canvas coords from the first pair of x/y found in pos\n            var res = {}, i, axis, key;\n\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used) {\n                    key = \"x\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"x\";\n\n                    if (pos[key] != null) {\n                        res.left = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used) {\n                    key = \"y\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"y\";\n\n                    if (pos[key] != null) {\n                        res.top = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        function getOrCreateAxis(axes, number) {\n            if (!axes[number - 1])\n                axes[number - 1] = {\n                    n: number, // save the number for future reference\n                    direction: axes == xaxes ? \"x\" : \"y\",\n                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\n                };\n\n            return axes[number - 1];\n        }\n\n        function fillInSeriesOptions() {\n\n            var neededColors = series.length, maxIndex = -1, i;\n\n            // Subtract the number of series that already have fixed colors or\n            // color indexes from the number that we still need to generate.\n\n            for (i = 0; i < series.length; ++i) {\n                var sc = series[i].color;\n                if (sc != null) {\n                    neededColors--;\n                    if (typeof sc == \"number\" && sc > maxIndex) {\n                        maxIndex = sc;\n                    }\n                }\n            }\n\n            // If any of the series have fixed color indexes, then we need to\n            // generate at least as many colors as the highest index.\n\n            if (neededColors <= maxIndex) {\n                neededColors = maxIndex + 1;\n            }\n\n            // Generate all the colors, using first the option colors and then\n            // variations on those colors once they're exhausted.\n\n            var c, colors = [], colorPool = options.colors,\n                colorPoolSize = colorPool.length, variation = 0;\n\n            for (i = 0; i < neededColors; i++) {\n\n                c = $.color.parse(colorPool[i % colorPoolSize] || \"#666\");\n\n                // Each time we exhaust the colors in the pool we adjust\n                // a scaling factor used to produce more variations on\n                // those colors. The factor alternates negative/positive\n                // to produce lighter/darker colors.\n\n                // Reset the variation after every few cycles, or else\n                // it will end up producing only white or black colors.\n\n                if (i % colorPoolSize == 0 && i) {\n                    if (variation >= 0) {\n                        if (variation < 0.5) {\n                            variation = -variation - 0.2;\n                        } else variation = 0;\n                    } else variation = -variation;\n                }\n\n                colors[i] = c.scale('rgb', 1 + variation);\n            }\n\n            // Finalize the series options, filling in their colors\n\n            var colori = 0, s;\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                // assign colors\n                if (s.color == null) {\n                    s.color = colors[colori].toString();\n                    ++colori;\n                }\n                else if (typeof s.color == \"number\")\n                    s.color = colors[s.color].toString();\n\n                // turn on lines automatically in case nothing is set\n                if (s.lines.show == null) {\n                    var v, show = true;\n                    for (v in s)\n                        if (s[v] && s[v].show) {\n                            show = false;\n                            break;\n                        }\n                    if (show)\n                        s.lines.show = true;\n                }\n\n                // If nothing was provided for lines.zero, default it to match\n                // lines.fill, since areas by default should extend to zero.\n\n                if (s.lines.zero == null) {\n                    s.lines.zero = !!s.lines.fill;\n                }\n\n                // setup axes\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n            }\n        }\n\n        function processData() {\n            var topSentry = Number.POSITIVE_INFINITY,\n                bottomSentry = Number.NEGATIVE_INFINITY,\n                fakeInfinity = Number.MAX_VALUE,\n                i, j, k, m, length,\n                s, points, ps, x, y, axis, val, f, p,\n                data, format;\n\n            function updateAxis(axis, min, max) {\n                if (min < axis.datamin && min != -fakeInfinity)\n                    axis.datamin = min;\n                if (max > axis.datamax && max != fakeInfinity)\n                    axis.datamax = max;\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                // init axis\n                axis.datamin = topSentry;\n                axis.datamax = bottomSentry;\n                axis.used = false;\n            });\n\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                s.datapoints = { points: [] };\n\n                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\n            }\n\n            // first pass: clean and copy data\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                data = s.data;\n                format = s.datapoints.format;\n\n                if (!format) {\n                    format = [];\n                    // find out how to copy\n                    format.push({ x: true, number: true, required: true });\n                    format.push({ y: true, number: true, required: true });\n\n                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\n                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\n                        if (s.bars.horizontal) {\n                            delete format[format.length - 1].y;\n                            format[format.length - 1].x = true;\n                        }\n                    }\n\n                    s.datapoints.format = format;\n                }\n\n                if (s.datapoints.pointsize != null)\n                    continue; // already filled in\n\n                s.datapoints.pointsize = format.length;\n\n                ps = s.datapoints.pointsize;\n                points = s.datapoints.points;\n\n                var insertSteps = s.lines.show && s.lines.steps;\n                s.xaxis.used = s.yaxis.used = true;\n\n                for (j = k = 0; j < data.length; ++j, k += ps) {\n                    p = data[j];\n\n                    var nullify = p == null;\n                    if (!nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = p[m];\n                            f = format[m];\n\n                            if (f) {\n                                if (f.number && val != null) {\n                                    val = +val; // convert to number\n                                    if (isNaN(val))\n                                        val = null;\n                                    else if (val == Infinity)\n                                        val = fakeInfinity;\n                                    else if (val == -Infinity)\n                                        val = -fakeInfinity;\n                                }\n\n                                if (val == null) {\n                                    if (f.required)\n                                        nullify = true;\n\n                                    if (f.defaultValue != null)\n                                        val = f.defaultValue;\n                                }\n                            }\n\n                            points[k + m] = val;\n                        }\n                    }\n\n                    if (nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = points[k + m];\n                            if (val != null) {\n                                f = format[m];\n                                // extract min/max info\n                                if (f.autoscale !== false) {\n                                    if (f.x) {\n                                        updateAxis(s.xaxis, val, val);\n                                    }\n                                    if (f.y) {\n                                        updateAxis(s.yaxis, val, val);\n                                    }\n                                }\n                            }\n                            points[k + m] = null;\n                        }\n                    }\n                    else {\n                        // a little bit of line specific stuff that\n                        // perhaps shouldn't be here, but lacking\n                        // better means...\n                        if (insertSteps && k > 0\n                            && points[k - ps] != null\n                            && points[k - ps] != points[k]\n                            && points[k - ps + 1] != points[k + 1]) {\n                            // copy the point to make room for a middle point\n                            for (m = 0; m < ps; ++m)\n                                points[k + ps + m] = points[k + m];\n\n                            // middle point has same y\n                            points[k + 1] = points[k - ps + 1];\n\n                            // we've added a point, better reflect that\n                            k += ps;\n                        }\n                    }\n                }\n            }\n\n            // give the hooks a chance to run\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\n            }\n\n            // second pass: find datamax/datamin for auto-scaling\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points;\n                ps = s.datapoints.pointsize;\n                format = s.datapoints.format;\n\n                var xmin = topSentry, ymin = topSentry,\n                    xmax = bottomSentry, ymax = bottomSentry;\n\n                for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                    for (m = 0; m < ps; ++m) {\n                        val = points[j + m];\n                        f = format[m];\n                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\n                            continue;\n\n                        if (f.x) {\n                            if (val < xmin)\n                                xmin = val;\n                            if (val > xmax)\n                                xmax = val;\n                        }\n                        if (f.y) {\n                            if (val < ymin)\n                                ymin = val;\n                            if (val > ymax)\n                                ymax = val;\n                        }\n                    }\n                }\n\n                if (s.bars.show) {\n                    // make sure we got room for the bar on the dancing floor\n                    var delta;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            delta = 0;\n                            break;\n                        case \"right\":\n                            delta = -s.bars.barWidth;\n                            break;\n                        default:\n                            delta = -s.bars.barWidth / 2;\n                    }\n\n                    if (s.bars.horizontal) {\n                        ymin += delta;\n                        ymax += delta + s.bars.barWidth;\n                    }\n                    else {\n                        xmin += delta;\n                        xmax += delta + s.bars.barWidth;\n                    }\n                }\n\n                updateAxis(s.xaxis, xmin, xmax);\n                updateAxis(s.yaxis, ymin, ymax);\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                if (axis.datamin == topSentry)\n                    axis.datamin = null;\n                if (axis.datamax == bottomSentry)\n                    axis.datamax = null;\n            });\n        }\n\n        function setupCanvases() {\n\n            // Make sure the placeholder is clear of everything except canvases\n            // from a previous plot in this container that we'll try to re-use.\n\n            placeholder.css(\"padding\", 0) // padding messes up the positioning\n                .children().filter(function(){\n                    return !$(this).hasClass(\"flot-overlay\") && !$(this).hasClass('flot-base');\n                }).remove();\n\n            if (placeholder.css(\"position\") == 'static')\n                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n\n            surface = new Canvas(\"flot-base\", placeholder);\n            overlay = new Canvas(\"flot-overlay\", placeholder); // overlay canvas for interactive features\n\n            ctx = surface.context;\n            octx = overlay.context;\n\n            // define which element we're listening for events on\n            eventHolder = $(overlay.element).unbind();\n\n            // If we're re-using a plot object, shut down the old one\n\n            var existing = placeholder.data(\"plot\");\n\n            if (existing) {\n                existing.shutdown();\n                overlay.clear();\n            }\n\n            // save in case we get replotted\n            placeholder.data(\"plot\", plot);\n        }\n\n        function bindEvents() {\n            // bind events\n            if (options.grid.hoverable) {\n                eventHolder.mousemove(onMouseMove);\n\n                // Use bind, rather than .mouseleave, because we officially\n                // still support jQuery 1.2.6, which doesn't define a shortcut\n                // for mouseenter or mouseleave.  This was a bug/oversight that\n                // was fixed somewhere around 1.3.x.  We can return to using\n                // .mouseleave when we drop support for 1.2.6.\n\n                eventHolder.bind(\"mouseleave\", onMouseLeave);\n            }\n\n            if (options.grid.clickable)\n                eventHolder.click(onClick);\n\n            executeHooks(hooks.bindEvents, [eventHolder]);\n        }\n\n        function shutdown() {\n            if (redrawTimeout)\n                clearTimeout(redrawTimeout);\n\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n            eventHolder.unbind(\"click\", onClick);\n\n            executeHooks(hooks.shutdown, [eventHolder]);\n        }\n\n        function setTransformationHelpers(axis) {\n            // set helper functions on the axis, assumes plot area\n            // has been computed already\n\n            function identity(x) { return x; }\n\n            var s, m, t = axis.options.transform || identity,\n                it = axis.options.inverseTransform;\n\n            // precompute how much the axis is scaling a point\n            // in canvas space\n            if (axis.direction == \"x\") {\n                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n                m = Math.min(t(axis.max), t(axis.min));\n            }\n            else {\n                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n                s = -s;\n                m = Math.max(t(axis.max), t(axis.min));\n            }\n\n            // data point to canvas coordinate\n            if (t == identity) // slight optimization\n                axis.p2c = function (p) { return (p - m) * s; };\n            else\n                axis.p2c = function (p) { return (t(p) - m) * s; };\n            // canvas coordinate to data point\n            if (!it)\n                axis.c2p = function (c) { return m + c / s; };\n            else\n                axis.c2p = function (c) { return it(m + c / s); };\n        }\n\n        function measureTickLabels(axis) {\n\n            var opts = axis.options,\n                ticks = axis.ticks || [],\n                labelWidth = opts.labelWidth || 0,\n                labelHeight = opts.labelHeight || 0,\n                maxWidth = labelWidth || (axis.direction == \"x\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\n                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                font = opts.font || \"flot-tick-label tickLabel\";\n\n            for (var i = 0; i < ticks.length; ++i) {\n\n                var t = ticks[i];\n\n                if (!t.label)\n                    continue;\n\n                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\n\n                labelWidth = Math.max(labelWidth, info.width);\n                labelHeight = Math.max(labelHeight, info.height);\n            }\n\n            axis.labelWidth = opts.labelWidth || labelWidth;\n            axis.labelHeight = opts.labelHeight || labelHeight;\n        }\n\n        function allocateAxisBoxFirstPhase(axis) {\n            // find the bounding box of the axis by looking at label\n            // widths/heights and ticks, make room by diminishing the\n            // plotOffset; this first phase only looks at one\n            // dimension per axis, the other dimension depends on the\n            // other axes so will have to wait\n\n            var lw = axis.labelWidth,\n                lh = axis.labelHeight,\n                pos = axis.options.position,\n                isXAxis = axis.direction === \"x\",\n                tickLength = axis.options.tickLength,\n                axisMargin = options.grid.axisMargin,\n                padding = options.grid.labelMargin,\n                innermost = true,\n                outermost = true,\n                first = true,\n                found = false;\n\n            // Determine the axis's position in its direction and on its side\n\n            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\n                if (a && (a.show || a.reserveSpace)) {\n                    if (a === axis) {\n                        found = true;\n                    } else if (a.options.position === pos) {\n                        if (found) {\n                            outermost = false;\n                        } else {\n                            innermost = false;\n                        }\n                    }\n                    if (!found) {\n                        first = false;\n                    }\n                }\n            });\n\n            // The outermost axis on each side has no margin\n\n            if (outermost) {\n                axisMargin = 0;\n            }\n\n            // The ticks for the first axis in each direction stretch across\n\n            if (tickLength == null) {\n                tickLength = first ? \"full\" : 5;\n            }\n\n            if (!isNaN(+tickLength))\n                padding += +tickLength;\n\n            if (isXAxis) {\n                lh += padding;\n\n                if (pos == \"bottom\") {\n                    plotOffset.bottom += lh + axisMargin;\n                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };\n                }\n                else {\n                    axis.box = { top: plotOffset.top + axisMargin, height: lh };\n                    plotOffset.top += lh + axisMargin;\n                }\n            }\n            else {\n                lw += padding;\n\n                if (pos == \"left\") {\n                    axis.box = { left: plotOffset.left + axisMargin, width: lw };\n                    plotOffset.left += lw + axisMargin;\n                }\n                else {\n                    plotOffset.right += lw + axisMargin;\n                    axis.box = { left: surface.width - plotOffset.right, width: lw };\n                }\n            }\n\n             // save for future reference\n            axis.position = pos;\n            axis.tickLength = tickLength;\n            axis.box.padding = padding;\n            axis.innermost = innermost;\n        }\n\n        function allocateAxisBoxSecondPhase(axis) {\n            // now that all axis boxes have been placed in one\n            // dimension, we can set the remaining dimension coordinates\n            if (axis.direction == \"x\") {\n                axis.box.left = plotOffset.left - axis.labelWidth / 2;\n                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\n            }\n            else {\n                axis.box.top = plotOffset.top - axis.labelHeight / 2;\n                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\n            }\n        }\n\n        function adjustLayoutForThingsStickingOut() {\n            // possibly adjust plot offset to ensure everything stays\n            // inside the canvas and isn't clipped off\n\n            var minMargin = options.grid.minBorderMargin,\n                axis, i;\n\n            // check stuff from the plot (FIXME: this should just read\n            // a value from the series, otherwise it's impossible to\n            // customize)\n            if (minMargin == null) {\n                minMargin = 0;\n                for (i = 0; i < series.length; ++i)\n                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth/2));\n            }\n\n            var margins = {\n                left: minMargin,\n                right: minMargin,\n                top: minMargin,\n                bottom: minMargin\n            };\n\n            // check axis labels, note we don't check the actual\n            // labels but instead use the overall width/height to not\n            // jump as much around with replots\n            $.each(allAxes(), function (_, axis) {\n                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\n                    if (axis.direction === \"x\") {\n                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\n                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\n                    } else {\n                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\n                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\n                    }\n                }\n            });\n\n            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\n            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\n            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\n            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\n        }\n\n        function setupGrid() {\n            var i, axes = allAxes(), showGrid = options.grid.show;\n\n            // Initialize the plot's offset from the edge of the canvas\n\n            for (var a in plotOffset) {\n                var margin = options.grid.margin || 0;\n                plotOffset[a] = typeof margin == \"number\" ? margin : margin[a] || 0;\n            }\n\n            executeHooks(hooks.processOffset, [plotOffset]);\n\n            // If the grid is visible, add its border width to the offset\n\n            for (var a in plotOffset) {\n                if(typeof(options.grid.borderWidth) == \"object\") {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\n                }\n                else {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\n                }\n            }\n\n            $.each(axes, function (_, axis) {\n                var axisOpts = axis.options;\n                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\n                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\n                setRange(axis);\n            });\n\n            if (showGrid) {\n\n                var allocatedAxes = $.grep(axes, function (axis) {\n                    return axis.show || axis.reserveSpace;\n                });\n\n                $.each(allocatedAxes, function (_, axis) {\n                    // make the ticks\n                    setupTickGeneration(axis);\n                    setTicks(axis);\n                    snapRangeToTicks(axis, axis.ticks);\n                    // find labelWidth/Height for axis\n                    measureTickLabels(axis);\n                });\n\n                // with all dimensions calculated, we can compute the\n                // axis bounding boxes, start from the outside\n                // (reverse order)\n                for (i = allocatedAxes.length - 1; i >= 0; --i)\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n\n                // make sure we've got enough space for things that\n                // might stick out\n                adjustLayoutForThingsStickingOut();\n\n                $.each(allocatedAxes, function (_, axis) {\n                    allocateAxisBoxSecondPhase(axis);\n                });\n            }\n\n            plotWidth = surface.width - plotOffset.left - plotOffset.right;\n            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\n            // now we got the proper plot dimensions, we can compute the scaling\n            $.each(axes, function (_, axis) {\n                setTransformationHelpers(axis);\n            });\n\n            if (showGrid) {\n                drawAxisLabels();\n            }\n\n            insertLegend();\n        }\n\n        function setRange(axis) {\n            var opts = axis.options,\n                min = +(opts.min != null ? opts.min : axis.datamin),\n                max = +(opts.max != null ? opts.max : axis.datamax),\n                delta = max - min;\n\n            if (delta == 0.0) {\n                // degenerate case\n                var widen = max == 0 ? 1 : 0.01;\n\n                if (opts.min == null)\n                    min -= widen;\n                // always widen max if we couldn't widen min to ensure we\n                // don't fall into min == max which doesn't work\n                if (opts.max == null || opts.min != null)\n                    max += widen;\n            }\n            else {\n                // consider autoscaling\n                var margin = opts.autoscaleMargin;\n                if (margin != null) {\n                    if (opts.min == null) {\n                        min -= delta * margin;\n                        // make sure we don't go below zero if all values\n                        // are positive\n                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\n                            min = 0;\n                    }\n                    if (opts.max == null) {\n                        max += delta * margin;\n                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\n                            max = 0;\n                    }\n                }\n            }\n            axis.min = min;\n            axis.max = max;\n        }\n\n        function setupTickGeneration(axis) {\n            var opts = axis.options;\n\n            // estimate number of ticks\n            var noTicks;\n            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\n                noTicks = opts.ticks;\n            else\n                // heuristic based on the model a*sqrt(x) fitted to\n                // some data points that seemed reasonable\n                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? surface.width : surface.height);\n\n            var delta = (axis.max - axis.min) / noTicks,\n                dec = -Math.floor(Math.log(delta) / Math.LN10),\n                maxDec = opts.tickDecimals;\n\n            if (maxDec != null && dec > maxDec) {\n                dec = maxDec;\n            }\n\n            var magn = Math.pow(10, -dec),\n                norm = delta / magn, // norm is between 1.0 and 10.0\n                size;\n\n            if (norm < 1.5) {\n                size = 1;\n            } else if (norm < 3) {\n                size = 2;\n                // special case for 2.5, requires an extra decimal\n                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n                    size = 2.5;\n                    ++dec;\n                }\n            } else if (norm < 7.5) {\n                size = 5;\n            } else {\n                size = 10;\n            }\n\n            size *= magn;\n\n            if (opts.minTickSize != null && size < opts.minTickSize) {\n                size = opts.minTickSize;\n            }\n\n            axis.delta = delta;\n            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\n            axis.tickSize = opts.tickSize || size;\n\n            // Time mode was moved to a plug-in in 0.8, and since so many people use it\n            // we'll add an especially friendly reminder to make sure they included it.\n\n            if (opts.mode == \"time\" && !axis.tickGenerator) {\n                throw new Error(\"Time mode requires the flot.time plugin.\");\n            }\n\n            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\n            // like flot.time.js.\n\n            if (!axis.tickGenerator) {\n\n                axis.tickGenerator = function (axis) {\n\n                    var ticks = [],\n                        start = floorInBase(axis.min, axis.tickSize),\n                        i = 0,\n                        v = Number.NaN,\n                        prev;\n\n                    do {\n                        prev = v;\n                        v = start + i * axis.tickSize;\n                        ticks.push(v);\n                        ++i;\n                    } while (v < axis.max && v != prev);\n                    return ticks;\n                };\n\n\t\t\t\taxis.tickFormatter = function (value, axis) {\n\n\t\t\t\t\tvar factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\n\t\t\t\t\tvar formatted = \"\" + Math.round(value * factor) / factor;\n\n\t\t\t\t\t// If tickDecimals was specified, ensure that we have exactly that\n\t\t\t\t\t// much precision; otherwise default to the value's own precision.\n\n\t\t\t\t\tif (axis.tickDecimals != null) {\n\t\t\t\t\t\tvar decimal = formatted.indexOf(\".\");\n\t\t\t\t\t\tvar precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\n\t\t\t\t\t\tif (precision < axis.tickDecimals) {\n\t\t\t\t\t\t\treturn (precision ? formatted : formatted + \".\") + (\"\" + factor).substr(1, axis.tickDecimals - precision);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n                    return formatted;\n                };\n            }\n\n            if ($.isFunction(opts.tickFormatter))\n                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\n\n            if (opts.alignTicksWithAxis != null) {\n                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n                if (otherAxis && otherAxis.used && otherAxis != axis) {\n                    // consider snapping min/max to outermost nice ticks\n                    var niceTicks = axis.tickGenerator(axis);\n                    if (niceTicks.length > 0) {\n                        if (opts.min == null)\n                            axis.min = Math.min(axis.min, niceTicks[0]);\n                        if (opts.max == null && niceTicks.length > 1)\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n                    }\n\n                    axis.tickGenerator = function (axis) {\n                        // copy ticks, scaled to this axis\n                        var ticks = [], v, i;\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n                            v = axis.min + v * (axis.max - axis.min);\n                            ticks.push(v);\n                        }\n                        return ticks;\n                    };\n\n                    // we might need an extra decimal since forced\n                    // ticks don't necessarily fit naturally\n                    if (!axis.mode && opts.tickDecimals == null) {\n                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\n                            ts = axis.tickGenerator(axis);\n\n                        // only proceed if the tick interval rounded\n                        // with an extra decimal doesn't give us a\n                        // zero at end\n                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\n                            axis.tickDecimals = extraDec;\n                    }\n                }\n            }\n        }\n\n        function setTicks(axis) {\n            var oticks = axis.options.ticks, ticks = [];\n            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\n                ticks = axis.tickGenerator(axis);\n            else if (oticks) {\n                if ($.isFunction(oticks))\n                    // generate the ticks\n                    ticks = oticks(axis);\n                else\n                    ticks = oticks;\n            }\n\n            // clean up/labelify the supplied ticks, copy them over\n            var i, v;\n            axis.ticks = [];\n            for (i = 0; i < ticks.length; ++i) {\n                var label = null;\n                var t = ticks[i];\n                if (typeof t == \"object\") {\n                    v = +t[0];\n                    if (t.length > 1)\n                        label = t[1];\n                }\n                else\n                    v = +t;\n                if (label == null)\n                    label = axis.tickFormatter(v, axis);\n                if (!isNaN(v))\n                    axis.ticks.push({ v: v, label: label });\n            }\n        }\n\n        function snapRangeToTicks(axis, ticks) {\n            if (axis.options.autoscaleMargin && ticks.length > 0) {\n                // snap to ticks\n                if (axis.options.min == null)\n                    axis.min = Math.min(axis.min, ticks[0].v);\n                if (axis.options.max == null && ticks.length > 1)\n                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n            }\n        }\n\n        function draw() {\n\n            surface.clear();\n\n            executeHooks(hooks.drawBackground, [ctx]);\n\n            var grid = options.grid;\n\n            // draw background, if any\n            if (grid.show && grid.backgroundColor)\n                drawBackground();\n\n            if (grid.show && !grid.aboveData) {\n                drawGrid();\n            }\n\n            for (var i = 0; i < series.length; ++i) {\n                executeHooks(hooks.drawSeries, [ctx, series[i]]);\n                drawSeries(series[i]);\n            }\n\n            executeHooks(hooks.draw, [ctx]);\n\n            if (grid.show && grid.aboveData) {\n                drawGrid();\n            }\n\n            surface.render();\n\n            // A draw implies that either the axes or data have changed, so we\n            // should probably update the overlay highlights as well.\n\n            triggerRedrawOverlay();\n        }\n\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = allAxes();\n\n            for (var i = 0; i < axes.length; ++i) {\n                axis = axes[i];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return { from: from, to: to, axis: axis };\n        }\n\n        function drawBackground() {\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\n            ctx.restore();\n        }\n\n        function drawGrid() {\n            var i, axes, bw, bc;\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // draw markings\n            var markings = options.grid.markings;\n            if (markings) {\n                if ($.isFunction(markings)) {\n                    axes = plot.getAxes();\n                    // xmin etc. is backwards compatibility, to be\n                    // removed in the future\n                    axes.xmin = axes.xaxis.min;\n                    axes.xmax = axes.xaxis.max;\n                    axes.ymin = axes.yaxis.min;\n                    axes.ymax = axes.yaxis.max;\n\n                    markings = markings(axes);\n                }\n\n                for (i = 0; i < markings.length; ++i) {\n                    var m = markings[i],\n                        xrange = extractRange(m, \"x\"),\n                        yrange = extractRange(m, \"y\");\n\n                    // fill in missing\n                    if (xrange.from == null)\n                        xrange.from = xrange.axis.min;\n                    if (xrange.to == null)\n                        xrange.to = xrange.axis.max;\n                    if (yrange.from == null)\n                        yrange.from = yrange.axis.min;\n                    if (yrange.to == null)\n                        yrange.to = yrange.axis.max;\n\n                    // clip\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\n                        continue;\n\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\n                    var xequal = xrange.from === xrange.to,\n                        yequal = yrange.from === yrange.to;\n\n                    if (xequal && yequal) {\n                        continue;\n                    }\n\n                    // then draw\n                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\n                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\n                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\n                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\n\n                    if (xequal || yequal) {\n                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\n                            subPixel = lineWidth % 2 ? 0.5 : 0;\n                        ctx.beginPath();\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n                        ctx.lineWidth = lineWidth;\n                        if (xequal) {\n                            ctx.moveTo(xrange.to + subPixel, yrange.from);\n                            ctx.lineTo(xrange.to + subPixel, yrange.to);\n                        } else {\n                            ctx.moveTo(xrange.from, yrange.to + subPixel);\n                            ctx.lineTo(xrange.to, yrange.to + subPixel);                            \n                        }\n                        ctx.stroke();\n                    } else {\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\n                        ctx.fillRect(xrange.from, yrange.to,\n                                     xrange.to - xrange.from,\n                                     yrange.from - yrange.to);\n                    }\n                }\n            }\n\n            // draw the ticks\n            axes = allAxes();\n            bw = options.grid.borderWidth;\n\n            for (var j = 0; j < axes.length; ++j) {\n                var axis = axes[j], box = axis.box,\n                    t = axis.tickLength, x, y, xoff, yoff;\n                if (!axis.show || axis.ticks.length == 0)\n                    continue;\n\n                ctx.lineWidth = 1;\n\n                // find the edges\n                if (axis.direction == \"x\") {\n                    x = 0;\n                    if (t == \"full\")\n                        y = (axis.position == \"top\" ? 0 : plotHeight);\n                    else\n                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\n                }\n                else {\n                    y = 0;\n                    if (t == \"full\")\n                        x = (axis.position == \"left\" ? 0 : plotWidth);\n                    else\n                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\n                }\n\n                // draw tick bar\n                if (!axis.innermost) {\n                    ctx.strokeStyle = axis.options.color;\n                    ctx.beginPath();\n                    xoff = yoff = 0;\n                    if (axis.direction == \"x\")\n                        xoff = plotWidth + 1;\n                    else\n                        yoff = plotHeight + 1;\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\") {\n                            y = Math.floor(y) + 0.5;\n                        } else {\n                            x = Math.floor(x) + 0.5;\n                        }\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                    ctx.stroke();\n                }\n\n                // draw ticks\n\n                ctx.strokeStyle = axis.options.tickColor;\n\n                ctx.beginPath();\n                for (i = 0; i < axis.ticks.length; ++i) {\n                    var v = axis.ticks[i].v;\n\n                    xoff = yoff = 0;\n\n                    if (isNaN(v) || v < axis.min || v > axis.max\n                        // skip those lying on the axes if we got a border\n                        || (t == \"full\"\n                            && ((typeof bw == \"object\" && bw[axis.position] > 0) || bw > 0)\n                            && (v == axis.min || v == axis.max)))\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        x = axis.p2c(v);\n                        yoff = t == \"full\" ? -plotHeight : t;\n\n                        if (axis.position == \"top\")\n                            yoff = -yoff;\n                    }\n                    else {\n                        y = axis.p2c(v);\n                        xoff = t == \"full\" ? -plotWidth : t;\n\n                        if (axis.position == \"left\")\n                            xoff = -xoff;\n                    }\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\")\n                            x = Math.floor(x) + 0.5;\n                        else\n                            y = Math.floor(y) + 0.5;\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                }\n\n                ctx.stroke();\n            }\n\n\n            // draw border\n            if (bw) {\n                // If either borderWidth or borderColor is an object, then draw the border\n                // line by line instead of as one rectangle\n                bc = options.grid.borderColor;\n                if(typeof bw == \"object\" || typeof bc == \"object\") {\n                    if (typeof bw !== \"object\") {\n                        bw = {top: bw, right: bw, bottom: bw, left: bw};\n                    }\n                    if (typeof bc !== \"object\") {\n                        bc = {top: bc, right: bc, bottom: bc, left: bc};\n                    }\n\n                    if (bw.top > 0) {\n                        ctx.strokeStyle = bc.top;\n                        ctx.lineWidth = bw.top;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left, 0 - bw.top/2);\n                        ctx.lineTo(plotWidth, 0 - bw.top/2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.right > 0) {\n                        ctx.strokeStyle = bc.right;\n                        ctx.lineWidth = bw.right;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\n                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\n                        ctx.stroke();\n                    }\n\n                    if (bw.bottom > 0) {\n                        ctx.strokeStyle = bc.bottom;\n                        ctx.lineWidth = bw.bottom;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\n                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.left > 0) {\n                        ctx.strokeStyle = bc.left;\n                        ctx.lineWidth = bw.left;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left/2, plotHeight + bw.bottom);\n                        ctx.lineTo(0- bw.left/2, 0);\n                        ctx.stroke();\n                    }\n                }\n                else {\n                    ctx.lineWidth = bw;\n                    ctx.strokeStyle = options.grid.borderColor;\n                    ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\n                }\n            }\n\n            ctx.restore();\n        }\n\n        function drawAxisLabels() {\n\n            $.each(allAxes(), function (_, axis) {\n                var box = axis.box,\n                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                    font = axis.options.font || \"flot-tick-label tickLabel\",\n                    tick, x, y, halign, valign;\n\n                // Remove text before checking for axis.show and ticks.length;\n                // otherwise plugins, like flot-tickrotor, that draw their own\n                // tick labels will end up with both theirs and the defaults.\n\n                surface.removeText(layer);\n\n                if (!axis.show || axis.ticks.length == 0)\n                    return;\n\n                for (var i = 0; i < axis.ticks.length; ++i) {\n\n                    tick = axis.ticks[i];\n                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        halign = \"center\";\n                        x = plotOffset.left + axis.p2c(tick.v);\n                        if (axis.position == \"bottom\") {\n                            y = box.top + box.padding;\n                        } else {\n                            y = box.top + box.height - box.padding;\n                            valign = \"bottom\";\n                        }\n                    } else {\n                        valign = \"middle\";\n                        y = plotOffset.top + axis.p2c(tick.v);\n                        if (axis.position == \"left\") {\n                            x = box.left + box.width - box.padding;\n                            halign = \"right\";\n                        } else {\n                            x = box.left + box.padding;\n                        }\n                    }\n\n                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\n                }\n            });\n        }\n\n        function drawSeries(series) {\n            if (series.lines.show)\n                drawSeriesLines(series);\n            if (series.bars.show)\n                drawSeriesBars(series);\n            if (series.points.show)\n                drawSeriesPoints(series);\n        }\n\n        function drawSeriesLines(series) {\n            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    prevx = null, prevy = null;\n\n                ctx.beginPath();\n                for (var i = ps; i < points.length; i += ps) {\n                    var x1 = points[i - ps], y1 = points[i - ps + 1],\n                        x2 = points[i], y2 = points[i + 1];\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min) {\n                        if (y2 < axisy.min)\n                            continue;   // line segment is outside\n                        // compute new intersection point\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min) {\n                        if (y1 < axisy.min)\n                            continue;\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max) {\n                        if (y2 > axisy.max)\n                            continue;\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max) {\n                        if (y1 > axisy.max)\n                            continue;\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (x1 != prevx || y1 != prevy)\n                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n\n                    prevx = x2;\n                    prevy = y2;\n                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n                }\n                ctx.stroke();\n            }\n\n            function plotLineArea(datapoints, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\n                    i = 0, top, areaOpen = false,\n                    ypos = 1, segmentStart = 0, segmentEnd = 0;\n\n                // we process each segment in two turns, first forward\n                // direction to sketch out top, then once we hit the\n                // end we go backwards to sketch the bottom\n                while (true) {\n                    if (ps > 0 && i > points.length + ps)\n                        break;\n\n                    i += ps; // ps is negative if going backwards\n\n                    var x1 = points[i - ps],\n                        y1 = points[i - ps + ypos],\n                        x2 = points[i], y2 = points[i + ypos];\n\n                    if (areaOpen) {\n                        if (ps > 0 && x1 != null && x2 == null) {\n                            // at turning point\n                            segmentEnd = i;\n                            ps = -ps;\n                            ypos = 2;\n                            continue;\n                        }\n\n                        if (ps < 0 && i == segmentStart + ps) {\n                            // done with the reverse sweep\n                            ctx.fill();\n                            areaOpen = false;\n                            ps = -ps;\n                            ypos = 1;\n                            i = segmentStart = segmentEnd + ps;\n                            continue;\n                        }\n                    }\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip x values\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (!areaOpen) {\n                        // open area\n                        ctx.beginPath();\n                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n                        areaOpen = true;\n                    }\n\n                    // now first check the case where both is outside\n                    if (y1 >= axisy.max && y2 >= axisy.max) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n                        continue;\n                    }\n                    else if (y1 <= axisy.min && y2 <= axisy.min) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n                        continue;\n                    }\n\n                    // else it's a bit more complicated, there might\n                    // be a flat maxed out rectangle first, then a\n                    // triangular cutout or reverse; to find these\n                    // keep track of the current x values\n                    var x1old = x1, x2old = x2;\n\n                    // clip the y values, without shortcutting, we\n                    // go through all cases in turn\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // if the x value was changed we got a rectangle\n                    // to fill\n                    if (x1 != x1old) {\n                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n                        // it goes to (x1, y1), but we fill that below\n                    }\n\n                    // fill triangular section, this sometimes result\n                    // in redundant points if (x1, y1) hasn't changed\n                    // from previous line to, but we just ignore that\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\n                    // fill the other rectangle if it's there\n                    if (x2 != x2old) {\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n                    }\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n            ctx.lineJoin = \"round\";\n\n            var lw = series.lines.lineWidth,\n                sw = series.shadowSize;\n            // FIXME: consider another form of shadow when filling is turned on\n            if (lw > 0 && sw > 0) {\n                // draw shadow as a thick and thin line with transparency\n                ctx.lineWidth = sw;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                // position shadow at angle from the mid of line\n                var angle = Math.PI/18;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\n                ctx.lineWidth = sw/2;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\n            if (fillStyle) {\n                ctx.fillStyle = fillStyle;\n                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\n            }\n\n            if (lw > 0)\n                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function drawSeriesPoints(series) {\n            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    var x = points[i], y = points[i + 1];\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                        continue;\n\n                    ctx.beginPath();\n                    x = axisx.p2c(x);\n                    y = axisy.p2c(y) + offset;\n                    if (symbol == \"circle\")\n                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n                    else\n                        symbol(ctx, x, y, radius, shadow);\n                    ctx.closePath();\n\n                    if (fillStyle) {\n                        ctx.fillStyle = fillStyle;\n                        ctx.fill();\n                    }\n                    ctx.stroke();\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            var lw = series.points.lineWidth,\n                sw = series.shadowSize,\n                radius = series.points.radius,\n                symbol = series.points.symbol;\n\n            // If the user sets the line width to 0, we change it to a very \n            // small value. A line width of 0 seems to force the default of 1.\n            // Doing the conditional here allows the shadow setting to still be \n            // optional even with a lineWidth of 0.\n\n            if( lw == 0 )\n                lw = 0.0001;\n\n            if (lw > 0 && sw > 0) {\n                // draw shadow in two steps\n                var w = sw / 2;\n                ctx.lineWidth = w;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                plotPoints(series.datapoints, radius, null, w + w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n\n                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n                plotPoints(series.datapoints, radius, null, w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            plotPoints(series.datapoints, radius,\n                       getFillStyle(series.points, series.color), 0, false,\n                       series.xaxis, series.yaxis, symbol);\n            ctx.restore();\n        }\n\n        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n            var left, right, bottom, top,\n                drawLeft, drawRight, drawTop, drawBottom,\n                tmp;\n\n            // in horizontal mode, we start the bar from the left\n            // instead of from the bottom so it appears to be\n            // horizontal rather than vertical\n            if (horizontal) {\n                drawBottom = drawRight = drawTop = true;\n                drawLeft = false;\n                left = b;\n                right = x;\n                top = y + barLeft;\n                bottom = y + barRight;\n\n                // account for negative bars\n                if (right < left) {\n                    tmp = right;\n                    right = left;\n                    left = tmp;\n                    drawLeft = true;\n                    drawRight = false;\n                }\n            }\n            else {\n                drawLeft = drawRight = drawTop = true;\n                drawBottom = false;\n                left = x + barLeft;\n                right = x + barRight;\n                bottom = b;\n                top = y;\n\n                // account for negative bars\n                if (top < bottom) {\n                    tmp = top;\n                    top = bottom;\n                    bottom = tmp;\n                    drawBottom = true;\n                    drawTop = false;\n                }\n            }\n\n            // clip\n            if (right < axisx.min || left > axisx.max ||\n                top < axisy.min || bottom > axisy.max)\n                return;\n\n            if (left < axisx.min) {\n                left = axisx.min;\n                drawLeft = false;\n            }\n\n            if (right > axisx.max) {\n                right = axisx.max;\n                drawRight = false;\n            }\n\n            if (bottom < axisy.min) {\n                bottom = axisy.min;\n                drawBottom = false;\n            }\n\n            if (top > axisy.max) {\n                top = axisy.max;\n                drawTop = false;\n            }\n\n            left = axisx.p2c(left);\n            bottom = axisy.p2c(bottom);\n            right = axisx.p2c(right);\n            top = axisy.p2c(top);\n\n            // fill the bar\n            if (fillStyleCallback) {\n                c.fillStyle = fillStyleCallback(bottom, top);\n                c.fillRect(left, top, right - left, bottom - top)\n            }\n\n            // draw outline\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n                c.beginPath();\n\n                // FIXME: inline moveTo is buggy with excanvas\n                c.moveTo(left, bottom);\n                if (drawLeft)\n                    c.lineTo(left, top);\n                else\n                    c.moveTo(left, top);\n                if (drawTop)\n                    c.lineTo(right, top);\n                else\n                    c.moveTo(right, top);\n                if (drawRight)\n                    c.lineTo(right, bottom);\n                else\n                    c.moveTo(right, bottom);\n                if (drawBottom)\n                    c.lineTo(left, bottom);\n                else\n                    c.moveTo(left, bottom);\n                c.stroke();\n            }\n        }\n\n        function drawSeriesBars(series) {\n            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    if (points[i] == null)\n                        continue;\n                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // FIXME: figure out a way to add shadows (for instance along the right edge)\n            ctx.lineWidth = series.bars.lineWidth;\n            ctx.strokeStyle = series.color;\n\n            var barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\n            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function getFillStyle(filloptions, seriesColor, bottom, top) {\n            var fill = filloptions.fill;\n            if (!fill)\n                return null;\n\n            if (filloptions.fillColor)\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n\n            var c = $.color.parse(seriesColor);\n            c.a = typeof fill == \"number\" ? fill : 0.4;\n            c.normalize();\n            return c.toString();\n        }\n\n        function insertLegend() {\n\n            if (options.legend.container != null) {\n                $(options.legend.container).html(\"\");\n            } else {\n                placeholder.find(\".legend\").remove();\n            }\n\n            if (!options.legend.show) {\n                return;\n            }\n\n            var fragments = [], entries = [], rowStarted = false,\n                lf = options.legend.labelFormatter, s, label;\n\n            // Build a list of legend entries, with each having a label and a color\n\n            for (var i = 0; i < series.length; ++i) {\n                s = series[i];\n                if (s.label) {\n                    label = lf ? lf(s.label, s) : s.label;\n                    if (label) {\n                        entries.push({\n                            label: label,\n                            color: s.color\n                        });\n                    }\n                }\n            }\n\n            // Sort the legend using either the default or a custom comparator\n\n            if (options.legend.sorted) {\n                if ($.isFunction(options.legend.sorted)) {\n                    entries.sort(options.legend.sorted);\n                } else if (options.legend.sorted == \"reverse\") {\n                \tentries.reverse();\n                } else {\n                    var ascending = options.legend.sorted != \"descending\";\n                    entries.sort(function(a, b) {\n                        return a.label == b.label ? 0 : (\n                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\n                        );\n                    });\n                }\n            }\n\n            // Generate markup for the list of entries, in their final order\n\n            for (var i = 0; i < entries.length; ++i) {\n\n                var entry = entries[i];\n\n                if (i % options.legend.noColumns == 0) {\n                    if (rowStarted)\n                        fragments.push('</tr>');\n                    fragments.push('<tr>');\n                    rowStarted = true;\n                }\n\n                fragments.push(\n                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\"></div></div></td>' +\n                    '<td class=\"legendLabel\">' + entry.label + '</td>'\n                );\n            }\n\n            if (rowStarted)\n                fragments.push('</tr>');\n\n            if (fragments.length == 0)\n                return;\n\n            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\n            if (options.legend.container != null)\n                $(options.legend.container).html(table);\n            else {\n                var pos = \"\",\n                    p = options.legend.position,\n                    m = options.legend.margin;\n                if (m[0] == null)\n                    m = [m, m];\n                if (p.charAt(0) == \"n\")\n                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n                else if (p.charAt(0) == \"s\")\n                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n                if (p.charAt(1) == \"e\")\n                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n                else if (p.charAt(1) == \"w\")\n                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\n                if (options.legend.backgroundOpacity != 0.0) {\n                    // put in the transparent background\n                    // separately to avoid blended labels and\n                    // label boxes\n                    var c = options.legend.backgroundColor;\n                    if (c == null) {\n                        c = options.grid.backgroundColor;\n                        if (c && typeof c == \"string\")\n                            c = $.color.parse(c);\n                        else\n                            c = $.color.extract(legend, 'background-color');\n                        c.a = 1;\n                        c = c.toString();\n                    }\n                    var div = legend.children();\n                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\n                }\n            }\n        }\n\n\n        // interactive features\n\n        var highlights = [],\n            redrawTimeout = null;\n\n        // returns the data item the mouse is over, or null if none is found\n        function findNearbyItem(mouseX, mouseY, seriesFilter) {\n            var maxDistance = options.grid.mouseActiveRadius,\n                smallestDistance = maxDistance * maxDistance + 1,\n                item = null, foundPoint = false, i, j, ps;\n\n            for (i = series.length - 1; i >= 0; --i) {\n                if (!seriesFilter(series[i]))\n                    continue;\n\n                var s = series[i],\n                    axisx = s.xaxis,\n                    axisy = s.yaxis,\n                    points = s.datapoints.points,\n                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\n                    my = axisy.c2p(mouseY),\n                    maxx = maxDistance / axisx.scale,\n                    maxy = maxDistance / axisy.scale;\n\n                ps = s.datapoints.pointsize;\n                // with inverse transforms, we can't use the maxx/maxy\n                // optimization, sadly\n                if (axisx.options.inverseTransform)\n                    maxx = Number.MAX_VALUE;\n                if (axisy.options.inverseTransform)\n                    maxy = Number.MAX_VALUE;\n\n                if (s.lines.show || s.points.show) {\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1];\n                        if (x == null)\n                            continue;\n\n                        // For points and lines, the cursor must be within a\n                        // certain distance to the data point\n                        if (x - mx > maxx || x - mx < -maxx ||\n                            y - my > maxy || y - my < -maxy)\n                            continue;\n\n                        // We have to calculate distances in pixels, not in\n                        // data units, because the scales of the axes may be different\n                        var dx = Math.abs(axisx.p2c(x) - mouseX),\n                            dy = Math.abs(axisy.p2c(y) - mouseY),\n                            dist = dx * dx + dy * dy; // we save the sqrt\n\n                        // use <= to ensure last point takes precedence\n                        // (last generally means on top of)\n                        if (dist < smallestDistance) {\n                            smallestDistance = dist;\n                            item = [i, j / ps];\n                        }\n                    }\n                }\n\n                if (s.bars.show && !item) { // no other point can be nearby\n\n                    var barLeft, barRight;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            barLeft = 0;\n                            break;\n                        case \"right\":\n                            barLeft = -s.bars.barWidth;\n                            break;\n                        default:\n                            barLeft = -s.bars.barWidth / 2;\n                    }\n\n                    barRight = barLeft + s.bars.barWidth;\n\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1], b = points[j + 2];\n                        if (x == null)\n                            continue;\n\n                        // for a bar graph, the cursor must be inside the bar\n                        if (series[i].bars.horizontal ?\n                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\n                             my >= y + barLeft && my <= y + barRight) :\n                            (mx >= x + barLeft && mx <= x + barRight &&\n                             my >= Math.min(b, y) && my <= Math.max(b, y)))\n                                item = [i, j / ps];\n                    }\n                }\n            }\n\n            if (item) {\n                i = item[0];\n                j = item[1];\n                ps = series[i].datapoints.pointsize;\n\n                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\n                         dataIndex: j,\n                         series: series[i],\n                         seriesIndex: i };\n            }\n\n            return null;\n        }\n\n        function onMouseMove(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return s[\"hoverable\"] != false; });\n        }\n\n        function onMouseLeave(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return false; });\n        }\n\n        function onClick(e) {\n            triggerClickHoverEvent(\"plotclick\", e,\n                                   function (s) { return s[\"clickable\"] != false; });\n        }\n\n        // trigger click or hover event (they send the same parameters\n        // so we share their code)\n        function triggerClickHoverEvent(eventname, event, seriesFilter) {\n            var offset = eventHolder.offset(),\n                canvasX = event.pageX - offset.left - plotOffset.left,\n                canvasY = event.pageY - offset.top - plotOffset.top,\n            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\n\n            pos.pageX = event.pageX;\n            pos.pageY = event.pageY;\n\n            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\n\n            if (item) {\n                // fill in mouse pos for any listeners out there\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\n            }\n\n            if (options.grid.autoHighlight) {\n                // clear auto-highlights\n                for (var i = 0; i < highlights.length; ++i) {\n                    var h = highlights[i];\n                    if (h.auto == eventname &&\n                        !(item && h.series == item.series &&\n                          h.point[0] == item.datapoint[0] &&\n                          h.point[1] == item.datapoint[1]))\n                        unhighlight(h.series, h.point);\n                }\n\n                if (item)\n                    highlight(item.series, item.datapoint, eventname);\n            }\n\n            placeholder.trigger(eventname, [ pos, item ]);\n        }\n\n        function triggerRedrawOverlay() {\n            var t = options.interaction.redrawOverlayInterval;\n            if (t == -1) {      // skip event queue\n                drawOverlay();\n                return;\n            }\n\n            if (!redrawTimeout)\n                redrawTimeout = setTimeout(drawOverlay, t);\n        }\n\n        function drawOverlay() {\n            redrawTimeout = null;\n\n            // draw highlights\n            octx.save();\n            overlay.clear();\n            octx.translate(plotOffset.left, plotOffset.top);\n\n            var i, hi;\n            for (i = 0; i < highlights.length; ++i) {\n                hi = highlights[i];\n\n                if (hi.series.bars.show)\n                    drawBarHighlight(hi.series, hi.point);\n                else\n                    drawPointHighlight(hi.series, hi.point);\n            }\n            octx.restore();\n\n            executeHooks(hooks.drawOverlay, [octx]);\n        }\n\n        function highlight(s, point, auto) {\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i == -1) {\n                highlights.push({ series: s, point: point, auto: auto });\n\n                triggerRedrawOverlay();\n            }\n            else if (!auto)\n                highlights[i].auto = false;\n        }\n\n        function unhighlight(s, point) {\n            if (s == null && point == null) {\n                highlights = [];\n                triggerRedrawOverlay();\n                return;\n            }\n\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i != -1) {\n                highlights.splice(i, 1);\n\n                triggerRedrawOverlay();\n            }\n        }\n\n        function indexOfHighlight(s, p) {\n            for (var i = 0; i < highlights.length; ++i) {\n                var h = highlights[i];\n                if (h.series == s && h.point[0] == p[0]\n                    && h.point[1] == p[1])\n                    return i;\n            }\n            return -1;\n        }\n\n        function drawPointHighlight(series, point) {\n            var x = point[0], y = point[1],\n                axisx = series.xaxis, axisy = series.yaxis,\n                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\n\n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                return;\n\n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n            octx.lineWidth = pointRadius;\n            octx.strokeStyle = highlightColor;\n            var radius = 1.5 * pointRadius;\n            x = axisx.p2c(x);\n            y = axisy.p2c(y);\n\n            octx.beginPath();\n            if (series.points.symbol == \"circle\")\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            else\n                series.points.symbol(octx, x, y, radius, false);\n            octx.closePath();\n            octx.stroke();\n        }\n\n        function drawBarHighlight(series, point) {\n            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\n                fillStyle = highlightColor,\n                barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            octx.lineWidth = series.bars.lineWidth;\n            octx.strokeStyle = highlightColor;\n\n            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\n                    function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n        }\n\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\n            if (typeof spec == \"string\")\n                return spec;\n            else {\n                // assume this is a gradient spec; IE currently only\n                // supports a simple vertical gradient properly, so that's\n                // what we support too\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n\n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n                    var c = spec.colors[i];\n                    if (typeof c != \"string\") {\n                        var co = $.color.parse(defaultColor);\n                        if (c.brightness != null)\n                            co = co.scale('rgb', c.brightness);\n                        if (c.opacity != null)\n                            co.a *= c.opacity;\n                        c = co.toString();\n                    }\n                    gradient.addColorStop(i / (l - 1), c);\n                }\n\n                return gradient;\n            }\n        }\n    }\n\n    // Add the plot function to the top level of the jQuery object\n\n    $.plot = function(placeholder, data, options) {\n        //var t0 = new Date();\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\n        return plot;\n    };\n\n    $.plot.version = \"0.8.3\";\n\n    $.plot.plugins = [];\n\n    // Also add the plot function as a chainable property\n\n    $.fn.plot = function(data, options) {\n        return this.each(function() {\n            $.plot(this, data, options);\n        });\n    };\n\n    // round to nearby lower multiple of base\n    function floorInBase(n, base) {\n        return base * Math.floor(n / base);\n    }\n\n})(jQuery);\n","/* Flot plugin for rendering pie charts.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin assumes that each series has a single data value, and that each\nvalue is a positive integer or zero.  Negative numbers don't make sense for a\npie chart, and have unpredictable results.  The values do NOT need to be\npassed in as percentages; the plugin will calculate the total and per-slice\npercentages internally.\n\n* Created by Brian Medendorp\n\n* Updated with contributions from btburnett3, Anthony Aragues and Xavi Ivars\n\nThe plugin supports these options:\n\n\tseries: {\n\t\tpie: {\n\t\t\tshow: true/false\n\t\t\tradius: 0-1 for percentage of fullsize, or a specified pixel length, or 'auto'\n\t\t\tinnerRadius: 0-1 for percentage of fullsize or a specified pixel length, for creating a donut effect\n\t\t\tstartAngle: 0-2 factor of PI used for starting angle (in radians) i.e 3/2 starts at the top, 0 and 2 have the same result\n\t\t\ttilt: 0-1 for percentage to tilt the pie, where 1 is no tilt, and 0 is completely flat (nothing will show)\n\t\t\toffset: {\n\t\t\t\ttop: integer value to move the pie up or down\n\t\t\t\tleft: integer value to move the pie left or right, or 'auto'\n\t\t\t},\n\t\t\tstroke: {\n\t\t\t\tcolor: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#FFF')\n\t\t\t\twidth: integer pixel width of the stroke\n\t\t\t},\n\t\t\tlabel: {\n\t\t\t\tshow: true/false, or 'auto'\n\t\t\t\tformatter:  a user-defined function that modifies the text/style of the label text\n\t\t\t\tradius: 0-1 for percentage of fullsize, or a specified pixel length\n\t\t\t\tbackground: {\n\t\t\t\t\tcolor: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#000')\n\t\t\t\t\topacity: 0-1\n\t\t\t\t},\n\t\t\t\tthreshold: 0-1 for the percentage value at which to hide labels (if they're too small)\n\t\t\t},\n\t\t\tcombine: {\n\t\t\t\tthreshold: 0-1 for the percentage value at which to combine slices (if they're too small)\n\t\t\t\tcolor: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#CCC'), if null, the plugin will automatically use the color of the first slice to be combined\n\t\t\t\tlabel: any text value of what the combined slice should be labeled\n\t\t\t}\n\t\t\thighlight: {\n\t\t\t\topacity: 0-1\n\t\t\t}\n\t\t}\n\t}\n\nMore detail and specific examples can be found in the included HTML file.\n\n*/\n\n(function($) {\n\n\t// Maximum redraw attempts when fitting labels within the plot\n\n\tvar REDRAW_ATTEMPTS = 10;\n\n\t// Factor by which to shrink the pie when fitting labels within the plot\n\n\tvar REDRAW_SHRINK = 0.95;\n\n\tfunction init(plot) {\n\n\t\tvar canvas = null,\n\t\t\ttarget = null,\n\t\t\toptions = null,\n\t\t\tmaxRadius = null,\n\t\t\tcenterLeft = null,\n\t\t\tcenterTop = null,\n\t\t\tprocessed = false,\n\t\t\tctx = null;\n\n\t\t// interactive variables\n\n\t\tvar highlights = [];\n\n\t\t// add hook to determine if pie plugin in enabled, and then perform necessary operations\n\n\t\tplot.hooks.processOptions.push(function(plot, options) {\n\t\t\tif (options.series.pie.show) {\n\n\t\t\t\toptions.grid.show = false;\n\n\t\t\t\t// set labels.show\n\n\t\t\t\tif (options.series.pie.label.show == \"auto\") {\n\t\t\t\t\tif (options.legend.show) {\n\t\t\t\t\t\toptions.series.pie.label.show = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.series.pie.label.show = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// set radius\n\n\t\t\t\tif (options.series.pie.radius == \"auto\") {\n\t\t\t\t\tif (options.series.pie.label.show) {\n\t\t\t\t\t\toptions.series.pie.radius = 3/4;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.series.pie.radius = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ensure sane tilt\n\n\t\t\t\tif (options.series.pie.tilt > 1) {\n\t\t\t\t\toptions.series.pie.tilt = 1;\n\t\t\t\t} else if (options.series.pie.tilt < 0) {\n\t\t\t\t\toptions.series.pie.tilt = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tplot.hooks.bindEvents.push(function(plot, eventHolder) {\n\t\t\tvar options = plot.getOptions();\n\t\t\tif (options.series.pie.show) {\n\t\t\t\tif (options.grid.hoverable) {\n\t\t\t\t\teventHolder.unbind(\"mousemove\").mousemove(onMouseMove);\n\t\t\t\t}\n\t\t\t\tif (options.grid.clickable) {\n\t\t\t\t\teventHolder.unbind(\"click\").click(onClick);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tplot.hooks.processDatapoints.push(function(plot, series, data, datapoints) {\n\t\t\tvar options = plot.getOptions();\n\t\t\tif (options.series.pie.show) {\n\t\t\t\tprocessDatapoints(plot, series, data, datapoints);\n\t\t\t}\n\t\t});\n\n\t\tplot.hooks.drawOverlay.push(function(plot, octx) {\n\t\t\tvar options = plot.getOptions();\n\t\t\tif (options.series.pie.show) {\n\t\t\t\tdrawOverlay(plot, octx);\n\t\t\t}\n\t\t});\n\n\t\tplot.hooks.draw.push(function(plot, newCtx) {\n\t\t\tvar options = plot.getOptions();\n\t\t\tif (options.series.pie.show) {\n\t\t\t\tdraw(plot, newCtx);\n\t\t\t}\n\t\t});\n\n\t\tfunction processDatapoints(plot, series, datapoints) {\n\t\t\tif (!processed)\t{\n\t\t\t\tprocessed = true;\n\t\t\t\tcanvas = plot.getCanvas();\n\t\t\t\ttarget = $(canvas).parent();\n\t\t\t\toptions = plot.getOptions();\n\t\t\t\tplot.setData(combine(plot.getData()));\n\t\t\t}\n\t\t}\n\n\t\tfunction combine(data) {\n\n\t\t\tvar total = 0,\n\t\t\t\tcombined = 0,\n\t\t\t\tnumCombined = 0,\n\t\t\t\tcolor = options.series.pie.combine.color,\n\t\t\t\tnewdata = [];\n\n\t\t\t// Fix up the raw data from Flot, ensuring the data is numeric\n\n\t\t\tfor (var i = 0; i < data.length; ++i) {\n\n\t\t\t\tvar value = data[i].data;\n\n\t\t\t\t// If the data is an array, we'll assume that it's a standard\n\t\t\t\t// Flot x-y pair, and are concerned only with the second value.\n\n\t\t\t\t// Note how we use the original array, rather than creating a\n\t\t\t\t// new one; this is more efficient and preserves any extra data\n\t\t\t\t// that the user may have stored in higher indexes.\n\n\t\t\t\tif ($.isArray(value) && value.length == 1) {\n    \t\t\t\tvalue = value[0];\n\t\t\t\t}\n\n\t\t\t\tif ($.isArray(value)) {\n\t\t\t\t\t// Equivalent to $.isNumeric() but compatible with jQuery < 1.7\n\t\t\t\t\tif (!isNaN(parseFloat(value[1])) && isFinite(value[1])) {\n\t\t\t\t\t\tvalue[1] = +value[1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue[1] = 0;\n\t\t\t\t\t}\n\t\t\t\t} else if (!isNaN(parseFloat(value)) && isFinite(value)) {\n\t\t\t\t\tvalue = [1, +value];\n\t\t\t\t} else {\n\t\t\t\t\tvalue = [1, 0];\n\t\t\t\t}\n\n\t\t\t\tdata[i].data = [value];\n\t\t\t}\n\n\t\t\t// Sum up all the slices, so we can calculate percentages for each\n\n\t\t\tfor (var i = 0; i < data.length; ++i) {\n\t\t\t\ttotal += data[i].data[0][1];\n\t\t\t}\n\n\t\t\t// Count the number of slices with percentages below the combine\n\t\t\t// threshold; if it turns out to be just one, we won't combine.\n\n\t\t\tfor (var i = 0; i < data.length; ++i) {\n\t\t\t\tvar value = data[i].data[0][1];\n\t\t\t\tif (value / total <= options.series.pie.combine.threshold) {\n\t\t\t\t\tcombined += value;\n\t\t\t\t\tnumCombined++;\n\t\t\t\t\tif (!color) {\n\t\t\t\t\t\tcolor = data[i].color;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < data.length; ++i) {\n\t\t\t\tvar value = data[i].data[0][1];\n\t\t\t\tif (numCombined < 2 || value / total > options.series.pie.combine.threshold) {\n\t\t\t\t\tnewdata.push(\n\t\t\t\t\t\t$.extend(data[i], {     /* extend to allow keeping all other original data values\n\t\t\t\t\t\t                           and using them e.g. in labelFormatter. */\n\t\t\t\t\t\t\tdata: [[1, value]],\n\t\t\t\t\t\t\tcolor: data[i].color,\n\t\t\t\t\t\t\tlabel: data[i].label,\n\t\t\t\t\t\t\tangle: value * Math.PI * 2 / total,\n\t\t\t\t\t\t\tpercent: value / (total / 100)\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (numCombined > 1) {\n\t\t\t\tnewdata.push({\n\t\t\t\t\tdata: [[1, combined]],\n\t\t\t\t\tcolor: color,\n\t\t\t\t\tlabel: options.series.pie.combine.label,\n\t\t\t\t\tangle: combined * Math.PI * 2 / total,\n\t\t\t\t\tpercent: combined / (total / 100)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn newdata;\n\t\t}\n\n\t\tfunction draw(plot, newCtx) {\n\n\t\t\tif (!target) {\n\t\t\t\treturn; // if no series were passed\n\t\t\t}\n\n\t\t\tvar canvasWidth = plot.getPlaceholder().width(),\n\t\t\t\tcanvasHeight = plot.getPlaceholder().height(),\n\t\t\t\tlegendWidth = target.children().filter(\".legend\").children().width() || 0;\n\n\t\t\tctx = newCtx;\n\n\t\t\t// WARNING: HACK! REWRITE THIS CODE AS SOON AS POSSIBLE!\n\n\t\t\t// When combining smaller slices into an 'other' slice, we need to\n\t\t\t// add a new series.  Since Flot gives plugins no way to modify the\n\t\t\t// list of series, the pie plugin uses a hack where the first call\n\t\t\t// to processDatapoints results in a call to setData with the new\n\t\t\t// list of series, then subsequent processDatapoints do nothing.\n\n\t\t\t// The plugin-global 'processed' flag is used to control this hack;\n\t\t\t// it starts out false, and is set to true after the first call to\n\t\t\t// processDatapoints.\n\n\t\t\t// Unfortunately this turns future setData calls into no-ops; they\n\t\t\t// call processDatapoints, the flag is true, and nothing happens.\n\n\t\t\t// To fix this we'll set the flag back to false here in draw, when\n\t\t\t// all series have been processed, so the next sequence of calls to\n\t\t\t// processDatapoints once again starts out with a slice-combine.\n\t\t\t// This is really a hack; in 0.9 we need to give plugins a proper\n\t\t\t// way to modify series before any processing begins.\n\n\t\t\tprocessed = false;\n\n\t\t\t// calculate maximum radius and center point\n\n\t\t\tmaxRadius =  Math.min(canvasWidth, canvasHeight / options.series.pie.tilt) / 2;\n\t\t\tcenterTop = canvasHeight / 2 + options.series.pie.offset.top;\n\t\t\tcenterLeft = canvasWidth / 2;\n\n\t\t\tif (options.series.pie.offset.left == \"auto\") {\n\t\t\t\tif (options.legend.position.match(\"w\")) {\n\t\t\t\t\tcenterLeft += legendWidth / 2;\n\t\t\t\t} else {\n\t\t\t\t\tcenterLeft -= legendWidth / 2;\n\t\t\t\t}\n\t\t\t\tif (centerLeft < maxRadius) {\n\t\t\t\t\tcenterLeft = maxRadius;\n\t\t\t\t} else if (centerLeft > canvasWidth - maxRadius) {\n\t\t\t\t\tcenterLeft = canvasWidth - maxRadius;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcenterLeft += options.series.pie.offset.left;\n\t\t\t}\n\n\t\t\tvar slices = plot.getData(),\n\t\t\t\tattempts = 0;\n\n\t\t\t// Keep shrinking the pie's radius until drawPie returns true,\n\t\t\t// indicating that all the labels fit, or we try too many times.\n\n\t\t\tdo {\n\t\t\t\tif (attempts > 0) {\n\t\t\t\t\tmaxRadius *= REDRAW_SHRINK;\n\t\t\t\t}\n\t\t\t\tattempts += 1;\n\t\t\t\tclear();\n\t\t\t\tif (options.series.pie.tilt <= 0.8) {\n\t\t\t\t\tdrawShadow();\n\t\t\t\t}\n\t\t\t} while (!drawPie() && attempts < REDRAW_ATTEMPTS)\n\n\t\t\tif (attempts >= REDRAW_ATTEMPTS) {\n\t\t\t\tclear();\n\t\t\t\ttarget.prepend(\"<div class='error'>Could not draw pie with labels contained inside canvas</div>\");\n\t\t\t}\n\n\t\t\tif (plot.setSeries && plot.insertLegend) {\n\t\t\t\tplot.setSeries(slices);\n\t\t\t\tplot.insertLegend();\n\t\t\t}\n\n\t\t\t// we're actually done at this point, just defining internal functions at this point\n\n\t\t\tfunction clear() {\n\t\t\t\tctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t\ttarget.children().filter(\".pieLabel, .pieLabelBackground\").remove();\n\t\t\t}\n\n\t\t\tfunction drawShadow() {\n\n\t\t\t\tvar shadowLeft = options.series.pie.shadow.left;\n\t\t\t\tvar shadowTop = options.series.pie.shadow.top;\n\t\t\t\tvar edge = 10;\n\t\t\t\tvar alpha = options.series.pie.shadow.alpha;\n\t\t\t\tvar radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;\n\n\t\t\t\tif (radius >= canvasWidth / 2 - shadowLeft || radius * options.series.pie.tilt >= canvasHeight / 2 - shadowTop || radius <= edge) {\n\t\t\t\t\treturn;\t// shadow would be outside canvas, so don't draw it\n\t\t\t\t}\n\n\t\t\t\tctx.save();\n\t\t\t\tctx.translate(shadowLeft,shadowTop);\n\t\t\t\tctx.globalAlpha = alpha;\n\t\t\t\tctx.fillStyle = \"#000\";\n\n\t\t\t\t// center and rotate to starting position\n\n\t\t\t\tctx.translate(centerLeft,centerTop);\n\t\t\t\tctx.scale(1, options.series.pie.tilt);\n\n\t\t\t\t//radius -= edge;\n\n\t\t\t\tfor (var i = 1; i <= edge; i++) {\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, false);\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tradius -= i;\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\tfunction drawPie() {\n\n\t\t\t\tvar startAngle = Math.PI * options.series.pie.startAngle;\n\t\t\t\tvar radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;\n\n\t\t\t\t// center and rotate to starting position\n\n\t\t\t\tctx.save();\n\t\t\t\tctx.translate(centerLeft,centerTop);\n\t\t\t\tctx.scale(1, options.series.pie.tilt);\n\t\t\t\t//ctx.rotate(startAngle); // start at top; -- This doesn't work properly in Opera\n\n\t\t\t\t// draw slices\n\n\t\t\t\tctx.save();\n\t\t\t\tvar currentAngle = startAngle;\n\t\t\t\tfor (var i = 0; i < slices.length; ++i) {\n\t\t\t\t\tslices[i].startAngle = currentAngle;\n\t\t\t\t\tdrawSlice(slices[i].angle, slices[i].color, true);\n\t\t\t\t}\n\t\t\t\tctx.restore();\n\n\t\t\t\t// draw slice outlines\n\n\t\t\t\tif (options.series.pie.stroke.width > 0) {\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.lineWidth = options.series.pie.stroke.width;\n\t\t\t\t\tcurrentAngle = startAngle;\n\t\t\t\t\tfor (var i = 0; i < slices.length; ++i) {\n\t\t\t\t\t\tdrawSlice(slices[i].angle, options.series.pie.stroke.color, false);\n\t\t\t\t\t}\n\t\t\t\t\tctx.restore();\n\t\t\t\t}\n\n\t\t\t\t// draw donut hole\n\n\t\t\t\tdrawDonutHole(ctx);\n\n\t\t\t\tctx.restore();\n\n\t\t\t\t// Draw the labels, returning true if they fit within the plot\n\n\t\t\t\tif (options.series.pie.label.show) {\n\t\t\t\t\treturn drawLabels();\n\t\t\t\t} else return true;\n\n\t\t\t\tfunction drawSlice(angle, color, fill) {\n\n\t\t\t\t\tif (angle <= 0 || isNaN(angle)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (fill) {\n\t\t\t\t\t\tctx.fillStyle = color;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.strokeStyle = color;\n\t\t\t\t\t\tctx.lineJoin = \"round\";\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tif (Math.abs(angle - Math.PI * 2) > 0.000000001) {\n\t\t\t\t\t\tctx.moveTo(0, 0); // Center of the pie\n\t\t\t\t\t}\n\n\t\t\t\t\t//ctx.arc(0, 0, radius, 0, angle, false); // This doesn't work properly in Opera\n\t\t\t\t\tctx.arc(0, 0, radius,currentAngle, currentAngle + angle / 2, false);\n\t\t\t\t\tctx.arc(0, 0, radius,currentAngle + angle / 2, currentAngle + angle, false);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\t//ctx.rotate(angle); // This doesn't work properly in Opera\n\t\t\t\t\tcurrentAngle += angle;\n\n\t\t\t\t\tif (fill) {\n\t\t\t\t\t\tctx.fill();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction drawLabels() {\n\n\t\t\t\t\tvar currentAngle = startAngle;\n\t\t\t\t\tvar radius = options.series.pie.label.radius > 1 ? options.series.pie.label.radius : maxRadius * options.series.pie.label.radius;\n\n\t\t\t\t\tfor (var i = 0; i < slices.length; ++i) {\n\t\t\t\t\t\tif (slices[i].percent >= options.series.pie.label.threshold * 100) {\n\t\t\t\t\t\t\tif (!drawLabel(slices[i], currentAngle, i)) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentAngle += slices[i].angle;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t\tfunction drawLabel(slice, startAngle, index) {\n\n\t\t\t\t\t\tif (slice.data[0][1] == 0) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// format label text\n\n\t\t\t\t\t\tvar lf = options.legend.labelFormatter, text, plf = options.series.pie.label.formatter;\n\n\t\t\t\t\t\tif (lf) {\n\t\t\t\t\t\t\ttext = lf(slice.label, slice);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttext = slice.label;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (plf) {\n\t\t\t\t\t\t\ttext = plf(text, slice);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar halfAngle = ((startAngle + slice.angle) + startAngle) / 2;\n\t\t\t\t\t\tvar x = centerLeft + Math.round(Math.cos(halfAngle) * radius);\n\t\t\t\t\t\tvar y = centerTop + Math.round(Math.sin(halfAngle) * radius) * options.series.pie.tilt;\n\n\t\t\t\t\t\tvar html = \"<span class='pieLabel' id='pieLabel\" + index + \"' style='position:absolute;top:\" + y + \"px;left:\" + x + \"px;'>\" + text + \"</span>\";\n\t\t\t\t\t\ttarget.append(html);\n\n\t\t\t\t\t\tvar label = target.children(\"#pieLabel\" + index);\n\t\t\t\t\t\tvar labelTop = (y - label.height() / 2);\n\t\t\t\t\t\tvar labelLeft = (x - label.width() / 2);\n\n\t\t\t\t\t\tlabel.css(\"top\", labelTop);\n\t\t\t\t\t\tlabel.css(\"left\", labelLeft);\n\n\t\t\t\t\t\t// check to make sure that the label is not outside the canvas\n\n\t\t\t\t\t\tif (0 - labelTop > 0 || 0 - labelLeft > 0 || canvasHeight - (labelTop + label.height()) < 0 || canvasWidth - (labelLeft + label.width()) < 0) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.series.pie.label.background.opacity != 0) {\n\n\t\t\t\t\t\t\t// put in the transparent background separately to avoid blended labels and label boxes\n\n\t\t\t\t\t\t\tvar c = options.series.pie.label.background.color;\n\n\t\t\t\t\t\t\tif (c == null) {\n\t\t\t\t\t\t\t\tc = slice.color;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar pos = \"top:\" + labelTop + \"px;left:\" + labelLeft + \"px;\";\n\t\t\t\t\t\t\t$(\"<div class='pieLabelBackground' style='position:absolute;width:\" + label.width() + \"px;height:\" + label.height() + \"px;\" + pos + \"background-color:\" + c + \";'></div>\")\n\t\t\t\t\t\t\t\t.css(\"opacity\", options.series.pie.label.background.opacity)\n\t\t\t\t\t\t\t\t.insertBefore(label);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} // end individual label function\n\t\t\t\t} // end drawLabels function\n\t\t\t} // end drawPie function\n\t\t} // end draw function\n\n\t\t// Placed here because it needs to be accessed from multiple locations\n\n\t\tfunction drawDonutHole(layer) {\n\t\t\tif (options.series.pie.innerRadius > 0) {\n\n\t\t\t\t// subtract the center\n\n\t\t\t\tlayer.save();\n\t\t\t\tvar innerRadius = options.series.pie.innerRadius > 1 ? options.series.pie.innerRadius : maxRadius * options.series.pie.innerRadius;\n\t\t\t\tlayer.globalCompositeOperation = \"destination-out\"; // this does not work with excanvas, but it will fall back to using the stroke color\n\t\t\t\tlayer.beginPath();\n\t\t\t\tlayer.fillStyle = options.series.pie.stroke.color;\n\t\t\t\tlayer.arc(0, 0, innerRadius, 0, Math.PI * 2, false);\n\t\t\t\tlayer.fill();\n\t\t\t\tlayer.closePath();\n\t\t\t\tlayer.restore();\n\n\t\t\t\t// add inner stroke\n\n\t\t\t\tlayer.save();\n\t\t\t\tlayer.beginPath();\n\t\t\t\tlayer.strokeStyle = options.series.pie.stroke.color;\n\t\t\t\tlayer.arc(0, 0, innerRadius, 0, Math.PI * 2, false);\n\t\t\t\tlayer.stroke();\n\t\t\t\tlayer.closePath();\n\t\t\t\tlayer.restore();\n\n\t\t\t\t// TODO: add extra shadow inside hole (with a mask) if the pie is tilted.\n\t\t\t}\n\t\t}\n\n\t\t//-- Additional Interactive related functions --\n\n\t\tfunction isPointInPoly(poly, pt) {\n\t\t\tfor(var c = false, i = -1, l = poly.length, j = l - 1; ++i < l; j = i)\n\t\t\t\t((poly[i][1] <= pt[1] && pt[1] < poly[j][1]) || (poly[j][1] <= pt[1] && pt[1]< poly[i][1]))\n\t\t\t\t&& (pt[0] < (poly[j][0] - poly[i][0]) * (pt[1] - poly[i][1]) / (poly[j][1] - poly[i][1]) + poly[i][0])\n\t\t\t\t&& (c = !c);\n\t\t\treturn c;\n\t\t}\n\n\t\tfunction findNearbySlice(mouseX, mouseY) {\n\n\t\t\tvar slices = plot.getData(),\n\t\t\t\toptions = plot.getOptions(),\n\t\t\t\tradius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius,\n\t\t\t\tx, y;\n\n\t\t\tfor (var i = 0; i < slices.length; ++i) {\n\n\t\t\t\tvar s = slices[i];\n\n\t\t\t\tif (s.pie.show) {\n\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(0, 0); // Center of the pie\n\t\t\t\t\t//ctx.scale(1, options.series.pie.tilt);\t// this actually seems to break everything when here.\n\t\t\t\t\tctx.arc(0, 0, radius, s.startAngle, s.startAngle + s.angle / 2, false);\n\t\t\t\t\tctx.arc(0, 0, radius, s.startAngle + s.angle / 2, s.startAngle + s.angle, false);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tx = mouseX - centerLeft;\n\t\t\t\t\ty = mouseY - centerTop;\n\n\t\t\t\t\tif (ctx.isPointInPath) {\n\t\t\t\t\t\tif (ctx.isPointInPath(mouseX - centerLeft, mouseY - centerTop)) {\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tdatapoint: [s.percent, s.data],\n\t\t\t\t\t\t\t\tdataIndex: 0,\n\t\t\t\t\t\t\t\tseries: s,\n\t\t\t\t\t\t\t\tseriesIndex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// excanvas for IE doesn;t support isPointInPath, this is a workaround.\n\n\t\t\t\t\t\tvar p1X = radius * Math.cos(s.startAngle),\n\t\t\t\t\t\t\tp1Y = radius * Math.sin(s.startAngle),\n\t\t\t\t\t\t\tp2X = radius * Math.cos(s.startAngle + s.angle / 4),\n\t\t\t\t\t\t\tp2Y = radius * Math.sin(s.startAngle + s.angle / 4),\n\t\t\t\t\t\t\tp3X = radius * Math.cos(s.startAngle + s.angle / 2),\n\t\t\t\t\t\t\tp3Y = radius * Math.sin(s.startAngle + s.angle / 2),\n\t\t\t\t\t\t\tp4X = radius * Math.cos(s.startAngle + s.angle / 1.5),\n\t\t\t\t\t\t\tp4Y = radius * Math.sin(s.startAngle + s.angle / 1.5),\n\t\t\t\t\t\t\tp5X = radius * Math.cos(s.startAngle + s.angle),\n\t\t\t\t\t\t\tp5Y = radius * Math.sin(s.startAngle + s.angle),\n\t\t\t\t\t\t\tarrPoly = [[0, 0], [p1X, p1Y], [p2X, p2Y], [p3X, p3Y], [p4X, p4Y], [p5X, p5Y]],\n\t\t\t\t\t\t\tarrPoint = [x, y];\n\n\t\t\t\t\t\t// TODO: perhaps do some mathmatical trickery here with the Y-coordinate to compensate for pie tilt?\n\n\t\t\t\t\t\tif (isPointInPoly(arrPoly, arrPoint)) {\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tdatapoint: [s.percent, s.data],\n\t\t\t\t\t\t\t\tdataIndex: 0,\n\t\t\t\t\t\t\t\tseries: s,\n\t\t\t\t\t\t\t\tseriesIndex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.restore();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tfunction onMouseMove(e) {\n\t\t\ttriggerClickHoverEvent(\"plothover\", e);\n\t\t}\n\n\t\tfunction onClick(e) {\n\t\t\ttriggerClickHoverEvent(\"plotclick\", e);\n\t\t}\n\n\t\t// trigger click or hover event (they send the same parameters so we share their code)\n\n\t\tfunction triggerClickHoverEvent(eventname, e) {\n\n\t\t\tvar offset = plot.offset();\n\t\t\tvar canvasX = parseInt(e.pageX - offset.left);\n\t\t\tvar canvasY =  parseInt(e.pageY - offset.top);\n\t\t\tvar item = findNearbySlice(canvasX, canvasY);\n\n\t\t\tif (options.grid.autoHighlight) {\n\n\t\t\t\t// clear auto-highlights\n\n\t\t\t\tfor (var i = 0; i < highlights.length; ++i) {\n\t\t\t\t\tvar h = highlights[i];\n\t\t\t\t\tif (h.auto == eventname && !(item && h.series == item.series)) {\n\t\t\t\t\t\tunhighlight(h.series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// highlight the slice\n\n\t\t\tif (item) {\n\t\t\t\thighlight(item.series, eventname);\n\t\t\t}\n\n\t\t\t// trigger any hover bind events\n\n\t\t\tvar pos = { pageX: e.pageX, pageY: e.pageY };\n\t\t\ttarget.trigger(eventname, [pos, item]);\n\t\t}\n\n\t\tfunction highlight(s, auto) {\n\t\t\t//if (typeof s == \"number\") {\n\t\t\t//\ts = series[s];\n\t\t\t//}\n\n\t\t\tvar i = indexOfHighlight(s);\n\n\t\t\tif (i == -1) {\n\t\t\t\thighlights.push({ series: s, auto: auto });\n\t\t\t\tplot.triggerRedrawOverlay();\n\t\t\t} else if (!auto) {\n\t\t\t\thighlights[i].auto = false;\n\t\t\t}\n\t\t}\n\n\t\tfunction unhighlight(s) {\n\t\t\tif (s == null) {\n\t\t\t\thighlights = [];\n\t\t\t\tplot.triggerRedrawOverlay();\n\t\t\t}\n\n\t\t\t//if (typeof s == \"number\") {\n\t\t\t//\ts = series[s];\n\t\t\t//}\n\n\t\t\tvar i = indexOfHighlight(s);\n\n\t\t\tif (i != -1) {\n\t\t\t\thighlights.splice(i, 1);\n\t\t\t\tplot.triggerRedrawOverlay();\n\t\t\t}\n\t\t}\n\n\t\tfunction indexOfHighlight(s) {\n\t\t\tfor (var i = 0; i < highlights.length; ++i) {\n\t\t\t\tvar h = highlights[i];\n\t\t\t\tif (h.series == s)\n\t\t\t\t\treturn i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tfunction drawOverlay(plot, octx) {\n\n\t\t\tvar options = plot.getOptions();\n\n\t\t\tvar radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;\n\n\t\t\toctx.save();\n\t\t\toctx.translate(centerLeft, centerTop);\n\t\t\toctx.scale(1, options.series.pie.tilt);\n\n\t\t\tfor (var i = 0; i < highlights.length; ++i) {\n\t\t\t\tdrawHighlight(highlights[i].series);\n\t\t\t}\n\n\t\t\tdrawDonutHole(octx);\n\n\t\t\toctx.restore();\n\n\t\t\tfunction drawHighlight(series) {\n\n\t\t\t\tif (series.angle <= 0 || isNaN(series.angle)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//octx.fillStyle = parseColor(options.series.pie.highlight.color).scale(null, null, null, options.series.pie.highlight.opacity).toString();\n\t\t\t\toctx.fillStyle = \"rgba(255, 255, 255, \" + options.series.pie.highlight.opacity + \")\"; // this is temporary until we have access to parseColor\n\t\t\t\toctx.beginPath();\n\t\t\t\tif (Math.abs(series.angle - Math.PI * 2) > 0.000000001) {\n\t\t\t\t\toctx.moveTo(0, 0); // Center of the pie\n\t\t\t\t}\n\t\t\t\toctx.arc(0, 0, radius, series.startAngle, series.startAngle + series.angle / 2, false);\n\t\t\t\toctx.arc(0, 0, radius, series.startAngle + series.angle / 2, series.startAngle + series.angle, false);\n\t\t\t\toctx.closePath();\n\t\t\t\toctx.fill();\n\t\t\t}\n\t\t}\n\t} // end init (plugin body)\n\n\t// define pie specific options and their default values\n\n\tvar options = {\n\t\tseries: {\n\t\t\tpie: {\n\t\t\t\tshow: false,\n\t\t\t\tradius: \"auto\",\t// actual radius of the visible pie (based on full calculated radius if <=1, or hard pixel value)\n\t\t\t\tinnerRadius: 0, /* for donut */\n\t\t\t\tstartAngle: 3/2,\n\t\t\t\ttilt: 1,\n\t\t\t\tshadow: {\n\t\t\t\t\tleft: 5,\t// shadow left offset\n\t\t\t\t\ttop: 15,\t// shadow top offset\n\t\t\t\t\talpha: 0.02\t// shadow alpha\n\t\t\t\t},\n\t\t\t\toffset: {\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: \"auto\"\n\t\t\t\t},\n\t\t\t\tstroke: {\n\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\twidth: 1\n\t\t\t\t},\n\t\t\t\tlabel: {\n\t\t\t\t\tshow: \"auto\",\n\t\t\t\t\tformatter: function(label, slice) {\n\t\t\t\t\t\treturn \"<div style='font-size:x-small;text-align:center;padding:2px;color:\" + slice.color + \";'>\" + label + \"<br/>\" + Math.round(slice.percent) + \"%</div>\";\n\t\t\t\t\t},\t// formatter function\n\t\t\t\t\tradius: 1,\t// radius at which to place the labels (based on full calculated radius if <=1, or hard pixel value)\n\t\t\t\t\tbackground: {\n\t\t\t\t\t\tcolor: null,\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t},\n\t\t\t\t\tthreshold: 0\t// percentage at which to hide the label (i.e. the slice is too narrow)\n\t\t\t\t},\n\t\t\t\tcombine: {\n\t\t\t\t\tthreshold: -1,\t// percentage at which to combine little slices into one larger slice\n\t\t\t\t\tcolor: null,\t// color to give the new slice (auto-generated if null)\n\t\t\t\t\tlabel: \"Other\"\t// label to give the new slice\n\t\t\t\t},\n\t\t\t\thighlight: {\n\t\t\t\t\t//color: \"#fff\",\t\t// will add this functionality once parseColor is available\n\t\t\t\t\topacity: 0.5\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t$.plot.plugins.push({\n\t\tinit: init,\n\t\toptions: options,\n\t\tname: \"pie\",\n\t\tversion: \"1.1\"\n\t});\n\n})(jQuery);\n","/*! DataTables 1.10.11\n * ©2008-2015 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.11\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2008-2015 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t// root. This will give an error otherwise\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ ) {\n\t\t\t\t$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n\t\t\t\t\trequire('jquery') :\n\t\t\t\t\trequire('jquery')( root );\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}\n(function( $, window, document, undefined ) {\n\t\"use strict\";\n\n\t/**\n\t * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n\t * flexible tool, based upon the foundations of progressive enhancement,\n\t * which will add advanced interaction controls to any HTML table. For a\n\t * full list of features please refer to\n\t * [DataTables.net](href=\"http://datatables.net).\n\t *\n\t * Note that the `DataTable` object is not a global variable but is aliased\n\t * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n\t * be  accessed.\n\t *\n\t *  @class\n\t *  @param {object} [init={}] Configuration object for DataTables. Options\n\t *    are defined by {@link DataTable.defaults}\n\t *  @requires jQuery 1.7+\n\t *\n\t *  @example\n\t *    // Basic initialisation\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *\n\t *  @example\n\t *    // Initialisation with configuration options - in this case, disable\n\t *    // pagination and sorting.\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable( {\n\t *        \"paginate\": false,\n\t *        \"sort\": false\n\t *      } );\n\t *    } );\n\t */\n\tvar DataTable;\n\n\t\n\t/*\n\t * It is useful to have variables which are scoped locally so only the\n\t * DataTables functions can access them and they don't leak into global space.\n\t * At the same time these functions are often useful over multiple files in the\n\t * core and API, so we list, or at least document, all variables which are used\n\t * by DataTables as private variables here. This also ensures that there is no\n\t * clashing of variable names and that they can easily referenced for reuse.\n\t */\n\t\n\t\n\t// Defined else where\n\t//  _selector_run\n\t//  _selector_opts\n\t//  _selector_first\n\t//  _selector_row_indexes\n\t\n\tvar _ext; // DataTable.ext\n\tvar _Api; // DataTable.Api\n\tvar _api_register; // DataTable.Api.register\n\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\t\n\tvar _re_dic = {};\n\tvar _re_new_lines = /[\\r\\n]/g;\n\tvar _re_html = /<.*?>/g;\n\tvar _re_date_start = /^[\\w\\+\\-]/;\n\tvar _re_date_end = /[\\w\\+\\-]$/;\n\t\n\t// Escape regular expression special characters\n\tvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\t\n\t// http://en.wikipedia.org/wiki/Foreign_exchange_market\n\t// - \\u20BD - Russian ruble.\n\t// - \\u20a9 - South Korean Won\n\t// - \\u20BA - Turkish Lira\n\t// - \\u20B9 - Indian Rupee\n\t// - R - Brazil (R$) and South Africa\n\t// - fr - Swiss Franc\n\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t//   standards as thousands separators.\n\tvar _re_formatted_numeric = /[',$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfk]/gi;\n\t\n\t\n\tvar _empty = function ( d ) {\n\t\treturn !d || d === true || d === '-' ? true : false;\n\t};\n\t\n\t\n\tvar _intVal = function ( s ) {\n\t\tvar integer = parseInt( s, 10 );\n\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t};\n\t\n\t// Convert from a formatted number with characters other than `.` as the\n\t// decimal place, to a Javascript number\n\tvar _numToDecimal = function ( num, decimalPoint ) {\n\t\t// Cache created regular expressions for speed as this function is called often\n\t\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t\t}\n\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\t\tnum;\n\t};\n\t\n\t\n\tvar _isNumber = function ( d, decimalPoint, formatted ) {\n\t\tvar strType = typeof d === 'string';\n\t\n\t\t// If empty return immediately so there must be a number if it is a\n\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t// as a formatted number for currency\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( decimalPoint && strType ) {\n\t\t\td = _numToDecimal( d, decimalPoint );\n\t\t}\n\t\n\t\tif ( formatted && strType ) {\n\t\t\td = d.replace( _re_formatted_numeric, '' );\n\t\t}\n\t\n\t\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n\t};\n\t\n\t\n\t// A string without HTML in it can be considered to be HTML still\n\tvar _isHtml = function ( d ) {\n\t\treturn _empty( d ) || typeof d === 'string';\n\t};\n\t\n\t\n\tvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar html = _isHtml( d );\n\t\treturn ! html ?\n\t\t\tnull :\n\t\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\t\ttrue :\n\t\t\t\tnull;\n\t};\n\t\n\t\n\tvar _pluck = function ( a, prop, prop2 ) {\n\t\tvar out = [];\n\t\tvar i=0, ien=a.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] ) {\n\t\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t// as the indexes to pick from `a`\n\tvar _pluck_order = function ( a, order, prop, prop2 )\n\t{\n\t\tvar out = [];\n\t\tvar i=0, ien=order.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _range = function ( len, start )\n\t{\n\t\tvar out = [];\n\t\tvar end;\n\t\n\t\tif ( start === undefined ) {\n\t\t\tstart = 0;\n\t\t\tend = len;\n\t\t}\n\t\telse {\n\t\t\tend = start;\n\t\t\tstart = len;\n\t\t}\n\t\n\t\tfor ( var i=start ; i<end ; i++ ) {\n\t\t\tout.push( i );\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _removeEmpty = function ( a )\n\t{\n\t\tvar out = [];\n\t\n\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\t\tout.push( a[i] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _stripHtml = function ( d ) {\n\t\treturn d.replace( _re_html, '' );\n\t};\n\t\n\t\n\t/**\n\t * Find the unique elements in a source array.\n\t *\n\t * @param  {array} src Source array\n\t * @return {array} Array of unique items\n\t * @ignore\n\t */\n\tvar _unique = function ( src )\n\t{\n\t\t// A faster unique method is to use object keys to identify used values,\n\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t\t// information.\n\t\tvar\n\t\t\tout = [],\n\t\t\tval,\n\t\t\ti, ien=src.length,\n\t\t\tj, k=0;\n\t\n\t\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\t\tval = src[i];\n\t\n\t\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\t\tif ( out[j] === val ) {\n\t\t\t\t\tcontinue again;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tout.push( val );\n\t\t\tk++;\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t\n\t/**\n\t * Create a mapping object that allows camel case parameters to be looked up\n\t * for their Hungarian counterparts. The mapping is stored in a private\n\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t *  @param {object} o\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnHungarianMap ( o )\n\t{\n\t\tvar\n\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\tmatch,\n\t\t\tnewKey,\n\t\t\tmap = {};\n\t\n\t\t$.each( o, function (key, val) {\n\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\t\n\t\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t\t{\n\t\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\t\tmap[ newKey ] = key;\n\t\n\t\t\t\tif ( match[1] === 'o' )\n\t\t\t\t{\n\t\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\n\t\to._hungarianMap = map;\n\t}\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t * created by _fnHungarianMap.\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCamelToHungarian ( src, user, force )\n\t{\n\t\tif ( ! src._hungarianMap ) {\n\t\t\t_fnHungarianMap( src );\n\t\t}\n\t\n\t\tvar hungarianKey;\n\t\n\t\t$.each( user, function (key, val) {\n\t\t\thungarianKey = src._hungarianMap[ key ];\n\t\n\t\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t\t{\n\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t\t{\n\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\t\n\t\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Language compatibility - when certain options are given, and others aren't, we\n\t * need to duplicate the values over, in order to provide backwards compatibility\n\t * with older language files.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLanguageCompat( lang )\n\t{\n\t\tvar defaults = DataTable.defaults.oLanguage;\n\t\tvar zeroRecords = lang.sZeroRecords;\n\t\n\t\t/* Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t * sZeroRecords - assuming that is given.\n\t\t */\n\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t}\n\t\n\t\t/* Likewise with loading records */\n\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t}\n\t\n\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\tif ( lang.sInfoThousands ) {\n\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t}\n\t\n\t\tvar decimal = lang.sDecimal;\n\t\tif ( decimal ) {\n\t\t\t_addNumericSort( decimal );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Map one parameter onto another\n\t *  @param {object} o Object to map\n\t *  @param {*} knew The new parameter name\n\t *  @param {*} old The old parameter name\n\t */\n\tvar _fnCompatMap = function ( o, knew, old ) {\n\t\tif ( o[ knew ] !== undefined ) {\n\t\t\to[ old ] = o[ knew ];\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for the main DT options. Note that the new\n\t * options are mapped onto the old parameters, so this is an external interface\n\t * change only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatOpts ( init )\n\t{\n\t\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t\t_fnCompatMap( init, 'searching',     'bFilter' );\n\t\n\t\t// Boolean initialisation of x-scrolling\n\t\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t}\n\t\tif ( typeof init.scrollX === 'boolean' ) {\n\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t}\n\t\n\t\t// Column search objects are in an array, so it needs to be converted\n\t\t// element by element\n\t\tvar searchCols = init.aoSearchCols;\n\t\n\t\tif ( searchCols ) {\n\t\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\t\tif ( searchCols[i] ) {\n\t\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for column options. Note that the new options\n\t * are mapped onto the old parameters, so this is an external interface change\n\t * only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatCols ( init )\n\t{\n\t\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\t\n\t\t// orderData can be given as an integer\n\t\tvar dataSort = init.aDataSort;\n\t\tif ( dataSort && ! $.isArray( dataSort ) ) {\n\t\t\tinit.aDataSort = [ dataSort ];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Browser feature detection for capabilities, quirks\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect( settings )\n\t{\n\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t// calculated are specific to the browser and OS configuration which we\n\t\t// don't expect to change between initialisations\n\t\tif ( ! DataTable.__browser ) {\n\t\t\tvar browser = {};\n\t\t\tDataTable.__browser = browser;\n\t\n\t\t\t// Scrolling feature / quirks detection\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.appendTo( 'body' );\n\t\n\t\t\tvar outer = n.children();\n\t\t\tvar inner = outer.children();\n\t\n\t\t\t// Numbers below, in order, are:\n\t\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t\t//\n\t\t\t// IE6 XP:                           100 100 100  83\n\t\t\t// IE7 Vista:                        100 100 100  83\n\t\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t\t// Evergreen Windows:                 83  83 100  83\n\t\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\t\n\t\t\t// Get scrollbar width\n\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\t\n\t\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t\t// element is contained without forcing scrolling\n\t\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\t\n\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t// scrollbar on the left, rather than the right.\n\t\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\t\n\t\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\t\n\t\t\tn.remove();\n\t\t}\n\t\n\t\t$.extend( settings.oBrowser, DataTable.__browser );\n\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t}\n\t\n\t\n\t/**\n\t * Array.prototype reduce[Right] method, used for browsers which don't support\n\t * JS 1.6. Done this way to reduce code size, since we iterate either way\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReduce ( that, fn, init, start, end, inc )\n\t{\n\t\tvar\n\t\t\ti = start,\n\t\t\tvalue,\n\t\t\tisSet = false;\n\t\n\t\tif ( init !== undefined ) {\n\t\t\tvalue = init;\n\t\t\tisSet = true;\n\t\t}\n\t\n\t\twhile ( i !== end ) {\n\t\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tvalue = isSet ?\n\t\t\t\tfn( value, that[i], i, that ) :\n\t\t\t\tthat[i];\n\t\n\t\t\tisSet = true;\n\t\t\ti += inc;\n\t\t}\n\t\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nTh The th element for this column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn( oSettings, nTh )\n\t{\n\t\t// Add column to aoColumns array\n\t\tvar oDefaults = DataTable.defaults.column;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\tidx: iCol\n\t\t} );\n\t\toSettings.aoColumns.push( oCol );\n\t\n\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t// with only some of the parameters defined, and also not give a default\n\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\t\n\t\t// Use the default column options function to initialise classes etc\n\t\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n\t}\n\t\n\t\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t{\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\tvar oClasses = oSettings.oClasses;\n\t\tvar th = $(oCol.nTh);\n\t\n\t\t// Try to get width information from the DOM. We can't get it from CSS\n\t\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\t\tif ( ! oCol.sWidthOrig ) {\n\t\t\t// Width attribute\n\t\t\toCol.sWidthOrig = th.attr('width') || null;\n\t\n\t\t\t// Style attribute\n\t\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\tif ( t ) {\n\t\t\t\toCol.sWidthOrig = t[1];\n\t\t\t}\n\t\t}\n\t\n\t\t/* User specified column options */\n\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t{\n\t\t\t// Backwards compatibility\n\t\t\t_fnCompatCols( oOptions );\n\t\n\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions );\n\t\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t\t{\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\t\n\t\t\tif ( oOptions.sType )\n\t\t\t{\n\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t}\n\t\n\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t// the ability to use a valid name for the camel case input\n\t\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t\t{\n\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t}\n\t\n\t\t\t$.extend( oCol, oOptions );\n\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\t\n\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t{\n\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t}\n\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t}\n\t\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mDataSrc = oCol.mData;\n\t\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\t\n\t\tvar attrTest = function( src ) {\n\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t};\n\t\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t);\n\t\toCol._setter = null;\n\t\n\t\toCol.fnGetData = function (rowData, type, meta) {\n\t\t\tvar innerData = mData( rowData, type, undefined, meta );\n\t\n\t\t\treturn mRender && type ?\n\t\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\t\tinnerData;\n\t\t};\n\t\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t\t};\n\t\n\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t// Used in _fnGetRowElements\n\t\tif ( typeof mDataSrc !== 'number' ) {\n\t\t\toSettings._rowReadObject = true;\n\t\t}\n\t\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif ( !oSettings.oFeatures.bSort )\n\t\t{\n\t\t\toCol.bSortable = false;\n\t\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t\t}\n\t\n\t\t/* Check that the class assignment is correct for sorting */\n\t\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\t\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\t\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\t\toCol.sSortingClassJUI = \"\";\n\t\t}\n\t\telse if ( bAsc && !bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t\t}\n\t\telse if ( !bAsc && bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortable;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to\n\t * do a redraw after calling this function!\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing ( settings )\n\t{\n\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\tif ( settings.oFeatures.bAutoWidth !== false )\n\t\t{\n\t\t\tvar columns = settings.aoColumns;\n\t\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t\t}\n\t\t}\n\t\n\t\tvar scroll = settings.oScroll;\n\t\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t\t{\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\tvar iPos = $.inArray( iMatch, aiVis );\n\t\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\t\n\t\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns( oSettings )\n\t{\n\t\treturn $( _pluck( oSettings.aoColumns, 'nTh' ) ).filter(':visible').length;\n\t}\n\t\n\t\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns( oSettings, sParam )\n\t{\n\t\tvar a = [];\n\t\n\t\t$.map( oSettings.aoColumns, function(val, i) {\n\t\t\tif ( val[sParam] ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn a;\n\t}\n\t\n\t\n\t/**\n\t * Calculate the 'type' of a column\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnTypes ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar types = DataTable.ext.type.detect;\n\t\tvar i, ien, j, jen, k, ken;\n\t\tvar col, cell, detectedType, cache;\n\t\n\t\t// For each column, spin over the \n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcol = columns[i];\n\t\t\tcache = [];\n\t\n\t\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\t\tcol.sType = col._sManualType;\n\t\t\t}\n\t\t\telse if ( ! col.sType ) {\n\t\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\t\n\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t// types\n\t\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t// bottom of the pile and very similar to string\n\t\t\t\t\t\tif ( detectedType === 'html' ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t// type\n\t\t\t\t\tif ( detectedType ) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\tif ( ! col.sType ) {\n\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Column definitions with aTargets\n\t\tif ( aoColDefs )\n\t\t{\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\tdef = aoColDefs[i];\n\t\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = def.targets !== undefined ?\n\t\t\t\t\tdef.targets :\n\t\t\t\t\tdef.aTargets;\n\t\n\t\t\t\tif ( ! $.isArray( aTargets ) )\n\t\t\t\t{\n\t\t\t\t\taTargets = [ aTargets ];\n\t\t\t\t}\n\t\n\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Statically defined columns array\n\t\tif ( aoCols )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfn( i, aoCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData data array to be added\n\t *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n\t{\n\t\t/* Create the object for storing information about this new row */\n\t\tvar iRow = oSettings.aoData.length;\n\t\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\t\tsrc: nTr ? 'dom' : 'data',\n\t\t\tidx: iRow\n\t\t} );\n\t\n\t\toData._aData = aDataIn;\n\t\toSettings.aoData.push( oData );\n\t\n\t\t/* Create the cells */\n\t\tvar nTd, sThisType;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].sType = null;\n\t\t}\n\t\n\t\t/* Add to the display array */\n\t\toSettings.aiDisplayMaster.push( iRow );\n\t\n\t\tvar id = oSettings.rowIdFn( aDataIn );\n\t\tif ( id !== undefined ) {\n\t\t\toSettings.aIds[ id ] = oData;\n\t\t}\n\t\n\t\t/* Create the DOM information, or register it if already present */\n\t\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t\t}\n\t\n\t\treturn iRow;\n\t}\n\t\n\t\n\t/**\n\t * Add one or more TR elements to the table. Generally we'd expect to\n\t * use this for reading data from a DOM sourced table, but it could be\n\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t * it is not cloned).\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t *  @returns {array} Array of indexes for the added rows\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddTr( settings, trs )\n\t{\n\t\tvar row;\n\t\n\t\t// Allow an individual node to be passed in\n\t\tif ( ! (trs instanceof $) ) {\n\t\t\ttrs = $(trs);\n\t\t}\n\t\n\t\treturn trs.map( function (i, el) {\n\t\t\trow = _fnGetRowElements( settings, el );\n\t\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Take a TR element and convert it to an index in aoData\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n the TR element to find\n\t *  @returns {int} index if the node is found, null if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToDataIndex( oSettings, n )\n\t{\n\t\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n\t}\n\t\n\t\n\t/**\n\t * Take a TD element and convert it into a column data index (not the visible index)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow The row number the TD/TH can be found in\n\t *  @param {node} n The TD/TH element to find\n\t *  @returns {int} index if the node is found, -1 if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n\t{\n\t\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n\t}\n\t\n\t\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n\t{\n\t\tvar draw           = settings.iDraw;\n\t\tvar col            = settings.aoColumns[colIdx];\n\t\tvar rowData        = settings.aoData[rowIdx]._aData;\n\t\tvar defaultContent = col.sDefaultContent;\n\t\tvar cellData       = col.fnGetData( rowData, type, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t} );\n\t\n\t\tif ( cellData === undefined ) {\n\t\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\t\tsettings.iDrawError = draw;\n\t\t\t}\n\t\t\treturn defaultContent;\n\t\t}\n\t\n\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t// not the original data), we can use default column data\n\t\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\t\tcellData = defaultContent;\n\t\t}\n\t\telse if ( typeof cellData === 'function' ) {\n\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t// executing in the scope of the data object (for instances)\n\t\t\treturn cellData.call( rowData );\n\t\t}\n\t\n\t\tif ( cellData === null && type == 'display' ) {\n\t\t\treturn '';\n\t\t}\n\t\treturn cellData;\n\t}\n\t\n\t\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n\t{\n\t\tvar col     = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\t\n\t\tcol.fnSetData( rowData, val, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t}  );\n\t}\n\t\n\t\n\t// Private variable that is used to match action syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\tvar __reFn = /\\(\\)$/;\n\t\n\t/**\n\t * Split string on periods, taking into account escaped periods\n\t * @param  {string} str String to split\n\t * @return {array} Split string\n\t */\n\tfunction _fnSplitObjNotation( str )\n\t{\n\t\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\t\treturn s.replace(/\\\\./g, '.');\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Build an object of get functions, and wrap them in a single call */\n\t\t\tvar o = {};\n\t\t\t$.each( mSource, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = _fnGetObjectDataFn( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Give an empty string for rendering / sorting etc */\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn mSource( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( $.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn data[mSource];\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn _fnSetObjectDataFn( mSource._ );\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Nothing to do when the data source is null */\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tmSource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* Like the get, we need to get data from a nested object */\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( $.isArray( val ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined )\n\t\t\t\t\t{\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) )\n\t\t\t\t{\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[mSource] = val;\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster ( settings )\n\t{\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t}\n\t\n\t\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable( settings )\n\t{\n\t\tsettings.aoData.length = 0;\n\t\tsettings.aiDisplayMaster.length = 0;\n\t\tsettings.aiDisplay.length = 0;\n\t\tsettings.aIds = {};\n\t}\n\t\n\t\n\t /**\n\t * Take an array of integers (index array) and remove a target integer (value - not\n\t * the key!)\n\t *  @param {array} a Index array to target\n\t *  @param {int} iTarget value to find\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDeleteIndex( a, iTarget, splice )\n\t{\n\t\tvar iTargetIndex = -1;\n\t\n\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( a[i] == iTarget )\n\t\t\t{\n\t\t\t\tiTargetIndex = i;\n\t\t\t}\n\t\t\telse if ( a[i] > iTarget )\n\t\t\t{\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( iTargetIndex != -1 && splice === undefined )\n\t\t{\n\t\t\ta.splice( iTargetIndex, 1 );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t * the cached data is next requested. Also update from the data source object.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {int}    rowIdx   Row index to invalidate\n\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t *     or 'data'\n\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t *     row will be invalidated\n\t * @memberof DataTable#oApi\n\t *\n\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t *   the sort and filter methods can subscribe to it. That will required\n\t *   initialisation options for sorting, which is why it is not already baked in\n\t */\n\tfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n\t{\n\t\tvar row = settings.aoData[ rowIdx ];\n\t\tvar i, ien;\n\t\tvar cellWrite = function ( cell, col ) {\n\t\t\t// This is very frustrating, but in IE if you just write directly\n\t\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t\t// even if there is a reference to them elsewhere\n\t\t\twhile ( cell.childNodes.length ) {\n\t\t\t\tcell.removeChild( cell.firstChild );\n\t\t\t}\n\t\n\t\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t\t};\n\t\n\t\t// Are we reading last data from DOM or the data object?\n\t\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t\t// Read the data from the DOM\n\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t.data;\n\t\t}\n\t\telse {\n\t\t\t// Reading from data object, update the DOM\n\t\t\tvar cells = row.anCells;\n\t\n\t\t\tif ( cells ) {\n\t\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// For both row and cell invalidation, the cached data for sorting and\n\t\t// filtering is nulled out\n\t\trow._aSortData = null;\n\t\trow._aFilterData = null;\n\t\n\t\t// Invalidate the type for a specific column (if given) or all columns since\n\t\t// the data might have changed\n\t\tvar cols = settings.aoColumns;\n\t\tif ( colIdx !== undefined ) {\n\t\t\tcols[ colIdx ].sType = null;\n\t\t}\n\t\telse {\n\t\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\t\tcols[i].sType = null;\n\t\t\t}\n\t\n\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t_fnRowAttributes( settings, row );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a data source object from an HTML row, reading the contents of the\n\t * cells that are in the row.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {node|object} TR element from which to read data or existing row\n\t *   object from which to re-read the data from the cells\n\t * @param {int} [colIdx] Optional column index\n\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t *   parameter should also be given and will be used to write the data into.\n\t *   Only the column in question will be written\n\t * @returns {object} Object with two parameters: `data` the data read, in\n\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t *   caller, so rather than needing a second traversal to get them, just return\n\t *   them from here).\n\t * @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowElements( settings, row, colIdx, d )\n\t{\n\t\tvar\n\t\t\ttds = [],\n\t\t\ttd = row.firstChild,\n\t\t\tname, col, o, i=0, contents,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tobjectRead = settings._rowReadObject;\n\t\n\t\t// Allow the data object to be passed in, or construct\n\t\td = d !== undefined ?\n\t\t\td :\n\t\t\tobjectRead ?\n\t\t\t\t{} :\n\t\t\t\t[];\n\t\n\t\tvar attr = function ( str, td  ) {\n\t\t\tif ( typeof str === 'string' ) {\n\t\t\t\tvar idx = str.indexOf('@');\n\t\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Read data from a cell and store into the data object\n\t\tvar cellProcess = function ( cell ) {\n\t\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcontents = $.trim(cell.innerHTML);\n\t\n\t\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\t\tsetter( d, contents );\n\t\n\t\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\tif ( objectRead ) {\n\t\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t};\n\t\n\t\tif ( td ) {\n\t\t\t// `tr` element was passed in\n\t\t\twhile ( td ) {\n\t\t\t\tname = td.nodeName.toUpperCase();\n\t\n\t\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\t\tcellProcess( td );\n\t\t\t\t\ttds.push( td );\n\t\t\t\t}\n\t\n\t\t\t\ttd = td.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Existing row object passed in\n\t\t\ttds = row.anCells;\n\t\n\t\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\t\tcellProcess( tds[j] );\n\t\t\t}\n\t\t}\n\t\n\t\t// Read the ID from the DOM if present\n\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\t\n\t\tif ( rowNode ) {\n\t\t\tvar id = rowNode.getAttribute( 'id' );\n\t\n\t\t\tif ( id ) {\n\t\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tdata: d,\n\t\t\tcells: tds\n\t\t};\n\t}\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n\t{\n\t\tvar\n\t\t\trow = oSettings.aoData[iRow],\n\t\t\trowData = row._aData,\n\t\t\tcells = [],\n\t\t\tnTr, nTd, oCol,\n\t\t\ti, iLen;\n\t\n\t\tif ( row.nTr === null )\n\t\t{\n\t\t\tnTr = nTrIn || document.createElement('tr');\n\t\n\t\t\trow.nTr = nTr;\n\t\t\trow.anCells = cells;\n\t\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\tnTr._DT_RowIndex = iRow;\n\t\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t_fnRowAttributes( oSettings, row );\n\t\n\t\t\t/* Process each column */\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[i];\n\t\n\t\t\t\tnTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );\n\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\trow: iRow,\n\t\t\t\t\tcolumn: i\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tcells.push( nTd );\n\t\n\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\tif ( (!nTrIn || oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t) {\n\t\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t\t}\n\t\n\t\t\t\t/* Add user defined class */\n\t\t\t\tif ( oCol.sClass )\n\t\t\t\t{\n\t\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t\t}\n\t\n\t\t\t\t// Visibility - add or remove as required\n\t\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t}\n\t\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t}\n\t\n\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t{\n\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow] );\n\t\t}\n\t\n\t\t// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\n\t\t// and deployed\n\t\trow.nTr.setAttribute( 'role', 'row' );\n\t}\n\t\n\t\n\t/**\n\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t * source object.\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} DataTables row object for the row to be modified\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRowAttributes( settings, row )\n\t{\n\t\tvar tr = row.nTr;\n\t\tvar data = row._aData;\n\t\n\t\tif ( tr ) {\n\t\t\tvar id = settings.rowIdFn( data );\n\t\n\t\t\tif ( id ) {\n\t\t\t\ttr.id = id;\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowClass ) {\n\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\t\ta;\n\t\n\t\t\t\t$(tr)\n\t\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t\t.addClass( data.DT_RowClass );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowAttr ) {\n\t\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowData ) {\n\t\t\t\t$(tr).data( data.DT_RowData );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead( oSettings )\n\t{\n\t\tvar i, ien, cell, row, column;\n\t\tvar thead = oSettings.nTHead;\n\t\tvar tfoot = oSettings.nTFoot;\n\t\tvar createHeader = $('th, td', thead).length === 0;\n\t\tvar classes = oSettings.oClasses;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\tif ( createHeader ) {\n\t\t\trow = $('<tr/>').appendTo( thead );\n\t\t}\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcell = $( column.nTh ).addClass( column.sClass );\n\t\n\t\t\tif ( createHeader ) {\n\t\t\t\tcell.appendTo( row );\n\t\t\t}\n\t\n\t\t\t// 1.11 move into sorting\n\t\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\t\tcell.addClass( column.sSortingClass );\n\t\n\t\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\t\tcell\n\t\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\t\n\t\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\t\tcell.html( column.sTitle );\n\t\t\t}\n\t\n\t\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\t\toSettings, cell, column, classes\n\t\t\t);\n\t\t}\n\t\n\t\tif ( createHeader ) {\n\t\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t\t}\n\t\t\n\t\t/* ARIA role for the rows */\n\t \t$(thead).find('>tr').attr('role', 'row');\n\t\n\t\t/* Deal with the footer - add classes if required */\n\t\t$(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );\n\t\t$(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );\n\t\n\t\t// Cache the footer cells. Note that we only take the cells from the first\n\t\t// row in the footer. If there is more than one row the user wants to\n\t\t// interact with, they need to use the table().foot() method. Note also this\n\t\t// allows cells to be used for multiple columns using colspan\n\t\tif ( tfoot !== null ) {\n\t\t\tvar cells = oSettings.aoFooter[0];\n\t\n\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tcolumn = columns[i];\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states. The\n\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t * traversed over cell at a time in a rows x columns grid fashion, although each\n\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t * already a cell in that position.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\tvar aoLocal = [];\n\t\tvar aApplied = [];\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar iRowspan, iColspan;\n\t\n\t\tif ( ! aoSource )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif (  bIncludeHidden === undefined )\n\t\t{\n\t\t\tbIncludeHidden = false;\n\t\t}\n\t\n\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\t\n\t\t\t/* Remove any columns which are currently hidden */\n\t\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t\t{\n\t\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\taApplied.push( [] );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnLocalTr = aoLocal[i].nTr;\n\t\n\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\tif ( nLocalTr )\n\t\t\t{\n\t\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tiRowspan = 1;\n\t\t\t\tiColspan = 1;\n\t\n\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t */\n\t\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\t\taApplied[i][j] = 1;\n\t\n\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw( oSettings )\n\t{\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar i, iLen, n;\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar asStripeClasses = oSettings.asStripeClasses;\n\t\tvar iStripes = asStripeClasses.length;\n\t\tvar iOpenRows = oSettings.aoOpenRows.length;\n\t\tvar oLang = oSettings.oLanguage;\n\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\n\t\toSettings.bDrawing = true;\n\t\n\t\t/* Check and see if we have an initial draw position from state saving */\n\t\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t\t{\n\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\tiInitDisplayStart :\n\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t0 :\n\t\t\t\t\tiInitDisplayStart;\n\t\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t}\n\t\n\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\t\n\t\t/* Server-side processing draw intercept */\n\t\tif ( oSettings.bDeferLoading )\n\t\t{\n\t\t\toSettings.bDeferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t\telse if ( !bServerSide )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( aiDisplay.length !== 0 )\n\t\t{\n\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\t\n\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t{\n\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t{\n\t\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t\t}\n\t\n\t\t\t\tvar nRow = aoData.nTr;\n\t\n\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\tif ( iStripes !== 0 )\n\t\t\t\t{\n\t\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t// useful?\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t\t[nRow, aoData._aData, iRowCount, j] );\n\t\n\t\t\t\tanRows.push( nRow );\n\t\t\t\tiRowCount++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t\t{\n\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t}\n\t\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t\t{\n\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t}\n\t\n\t\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t\t.append( $('<td />', {\n\t\t\t\t\t'valign':  'top',\n\t\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t\t} ).html( sZero ) )[0];\n\t\t}\n\t\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\tvar body = $(oSettings.nTBody);\n\t\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\t\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\t\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t}\n\t\n\t\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t *    the paging is reset to the first page\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw( settings, holdPosition )\n\t{\n\t\tvar\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tsort     = features.bSort,\n\t\t\tfilter   = features.bFilter;\n\t\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\t\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t\n\t\tif ( holdPosition !== true ) {\n\t\t\tsettings._iDisplayStart = 0;\n\t\t}\n\t\n\t\t// Let any modules know about the draw hold position state (used by\n\t\t// scrolling internally)\n\t\tsettings._drawHold = holdPosition;\n\t\n\t\t_fnDraw( settings );\n\t\n\t\tsettings._drawHold = false;\n\t}\n\t\n\t\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml ( oSettings )\n\t{\n\t\tvar classes = oSettings.oClasses;\n\t\tvar table = $(oSettings.nTable);\n\t\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\t\tvar features = oSettings.oFeatures;\n\t\n\t\t// All DataTables are wrapped in a div\n\t\tvar insert = $('<div/>', {\n\t\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t\t} );\n\t\n\t\toSettings.nHolding = holding[0];\n\t\toSettings.nTableWrapper = insert[0];\n\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\t\n\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\tvar aDom = oSettings.sDom.split('');\n\t\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\t\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t\t{\n\t\t\tfeatureNode = null;\n\t\t\tcOption = aDom[i];\n\t\n\t\t\tif ( cOption == '<' )\n\t\t\t{\n\t\t\t\t/* New container div */\n\t\t\t\tnNewNode = $('<div/>')[0];\n\t\n\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\tcNext = aDom[i+1];\n\t\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t\t{\n\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\tj = 2;\n\t\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t}\n\t\n\t\t\t\tinsert.append( nNewNode );\n\t\t\t\tinsert = $(nNewNode);\n\t\t\t}\n\t\t\telse if ( cOption == '>' )\n\t\t\t{\n\t\t\t\t/* End container div */\n\t\t\t\tinsert = insert.parent();\n\t\t\t}\n\t\t\t// @todo Move options into their own plugins?\n\t\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t\t{\n\t\t\t\t/* Length */\n\t\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t\t{\n\t\t\t\t/* Filter */\n\t\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t\t{\n\t\t\t\t/* pRocessing */\n\t\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 't' )\n\t\t\t{\n\t\t\t\t/* Table */\n\t\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t\t{\n\t\t\t\t/* Info */\n\t\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t\t{\n\t\t\t\t/* Pagination */\n\t\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t\t}\n\t\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t\t{\n\t\t\t\t/* Plug-in features */\n\t\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Add to the 2D features array */\n\t\t\tif ( featureNode )\n\t\t\t{\n\t\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\t\n\t\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t\t{\n\t\t\t\t\taanFeatures[cOption] = [];\n\t\t\t\t}\n\t\n\t\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\t\tinsert.append( featureNode );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\tholding.replaceWith( insert );\n\t\toSettings.nHolding = null;\n\t}\n\t\n\t\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param array {object} aLayout Array to store the calculated layout in\n\t *  @param {node} nThead The header/footer element for the table\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader ( aLayout, nThead )\n\t{\n\t\tvar nTrs = $(nThead).children('tr');\n\t\tvar nTr, nCell;\n\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\tvar bUnique;\n\t\tvar fnShiftCol = function ( a, i, j ) {\n\t\t\tvar k = a[i];\n\t                while ( k[j] ) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\t\n\t\taLayout.splice( 0, aLayout.length );\n\t\n\t\t/* We know how many rows there are in the layout - so prep it */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taLayout.push( [] );\n\t\t}\n\t\n\t\t/* Calculate a layout array */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnTr = nTrs[i];\n\t\t\tiColumn = 0;\n\t\n\t\t\t/* For every cell in the row... */\n\t\t\tnCell = nTr.firstChild;\n\t\t\twhile ( nCell ) {\n\t\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t\t{\n\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\t\n\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t * accordingly\n\t\t\t\t\t */\n\t\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\t\n\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\t\n\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Get an array of unique th elements, one for each column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t *  @returns array {node} aReturn list of unique th's\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n\t{\n\t\tvar aReturn = [];\n\t\tif ( !aLayout )\n\t\t{\n\t\t\taLayout = oSettings.aoHeader;\n\t\t\tif ( nHeader )\n\t\t\t{\n\t\t\t\taLayout = [];\n\t\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t\t}\n\t\t}\n\t\n\t\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t\t{\n\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn aReturn;\n\t}\n\t\n\t/**\n\t * Create an Ajax call based on the table's settings, taking into account that\n\t * parameters can have multiple forms, and backwards compatibility.\n\t *\n\t * @param {object} oSettings dataTables settings object\n\t * @param {array} data Data to send to the server, required by\n\t *     DataTables - may be augmented by developer callbacks\n\t * @param {function} fn Callback function to run when data is obtained\n\t */\n\tfunction _fnBuildAjax( oSettings, data, fn )\n\t{\n\t\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\t\n\t\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t\t// come from server-side processing or serverParams\n\t\tif ( data && $.isArray(data) ) {\n\t\t\tvar tmp = {};\n\t\t\tvar rbracket = /(.*?)\\[\\]$/;\n\t\n\t\t\t$.each( data, function (key, val) {\n\t\t\t\tvar match = val.name.match(rbracket);\n\t\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Support for arrays\n\t\t\t\t\tvar name = match[0];\n\t\n\t\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t\t}\n\t\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttmp[val.name] = val.value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdata = tmp;\n\t\t}\n\t\n\t\tvar ajaxData;\n\t\tvar ajax = oSettings.ajax;\n\t\tvar instance = oSettings.oInstance;\n\t\tvar callback = function ( json ) {\n\t\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\t\tfn( json );\n\t\t};\n\t\n\t\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t\t{\n\t\t\tajaxData = ajax.data;\n\t\n\t\t\tvar newData = $.isFunction( ajaxData ) ?\n\t\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\t\tajaxData;                      // an object object or array to merge\n\t\n\t\t\t// If the function returned something, use that alone\n\t\t\tdata = $.isFunction( ajaxData ) && newData ?\n\t\t\t\tnewData :\n\t\t\t\t$.extend( true, data, newData );\n\t\n\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\tdelete ajax.data;\n\t\t}\n\t\n\t\tvar baseAjax = {\n\t\t\t\"data\": data,\n\t\t\t\"success\": function (json) {\n\t\t\t\tvar error = json.error || json.sError;\n\t\t\t\tif ( error ) {\n\t\t\t\t\t_fnLog( oSettings, 0, error );\n\t\t\t\t}\n\t\n\t\t\t\toSettings.json = json;\n\t\t\t\tcallback( json );\n\t\t\t},\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\t\n\t\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t}\n\t\t};\n\t\n\t\t// Store the data submitted for the API\n\t\toSettings.oAjaxData = data;\n\t\n\t\t// Allow plug-ins and external processes to modify the data\n\t\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\t\n\t\tif ( oSettings.fnServerData )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.fnServerData.call( instance,\n\t\t\t\toSettings.sAjaxSource,\n\t\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\t\treturn { name: key, value: val };\n\t\t\t\t} ),\n\t\t\t\tcallback,\n\t\t\t\toSettings\n\t\t\t);\n\t\t}\n\t\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t\t} ) );\n\t\t}\n\t\telse if ( $.isFunction( ajax ) )\n\t\t{\n\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Object to extend the base settings\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\t\n\t\t\t// Restore for next time around\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate( settings )\n\t{\n\t\tif ( settings.bAjaxDataGet ) {\n\t\t\tsettings.iDraw++;\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t_fnBuildAjax(\n\t\t\t\tsettings,\n\t\t\t\t_fnAjaxParameters( settings ),\n\t\t\t\tfunction(json) {\n\t\t\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\t\t}\n\t\t\t);\n\t\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\t\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing\n\t * request. Note that this is basically done twice, is different ways - a modern\n\t * method which is used by default in DataTables 1.10 which uses objects and\n\t * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n\t * the sAjaxSource option is used in the initialisation, or the legacyAjax\n\t * option is set.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters( settings )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tcolumnCount = columns.length,\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\ti, data = [], dataProp, column, columnSearch,\n\t\t\tsort = _fnSortFlatten( settings ),\n\t\t\tdisplayStart = settings._iDisplayStart,\n\t\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t-1;\n\t\n\t\tvar param = function ( name, value ) {\n\t\t\tdata.push( { 'name': name, 'value': value } );\n\t\t};\n\t\n\t\t// DataTables 1.9- compatible method\n\t\tparam( 'sEcho',          settings.iDraw );\n\t\tparam( 'iColumns',       columnCount );\n\t\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\t\tparam( 'iDisplayStart',  displayStart );\n\t\tparam( 'iDisplayLength', displayLength );\n\t\n\t\t// DataTables 1.10+ method\n\t\tvar d = {\n\t\t\tdraw:    settings.iDraw,\n\t\t\tcolumns: [],\n\t\t\torder:   [],\n\t\t\tstart:   displayStart,\n\t\t\tlength:  displayLength,\n\t\t\tsearch:  {\n\t\t\t\tvalue: preSearch.sSearch,\n\t\t\t\tregex: preSearch.bRegex\n\t\t\t}\n\t\t};\n\t\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcolumnSearch = preColSearch[i];\n\t\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\t\n\t\t\td.columns.push( {\n\t\t\t\tdata:       dataProp,\n\t\t\t\tname:       column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable:  column.bSortable,\n\t\t\t\tsearch:     {\n\t\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\t\tregex: columnSearch.bRegex\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\tparam( \"mDataProp_\"+i, dataProp );\n\t\n\t\t\tif ( features.bFilter ) {\n\t\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t\t}\n\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch', preSearch.sSearch );\n\t\t\tparam( 'bRegex', preSearch.bRegex );\n\t\t}\n\t\n\t\tif ( features.bSort ) {\n\t\t\t$.each( sort, function ( i, val ) {\n\t\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\t\n\t\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t\t} );\n\t\n\t\t\tparam( 'iSortingCols', sort.length );\n\t\t}\n\t\n\t\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t\t// form to use, based on sAjaxSource\n\t\tvar legacy = DataTable.ext.legacy.ajax;\n\t\tif ( legacy === null ) {\n\t\t\treturn settings.sAjaxSource ? data : d;\n\t\t}\n\t\n\t\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t\t// form\n\t\treturn legacy ? data : d;\n\t}\n\t\n\t\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw ( settings, json )\n\t{\n\t\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t\t// Support both\n\t\tvar compat = function ( old, modern ) {\n\t\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t\t};\n\t\n\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\tvar draw            = compat( 'sEcho',                'draw' );\n\t\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\t\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\t\n\t\tif ( draw ) {\n\t\t\t// Protect against out of sequence returns\n\t\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings.iDraw = draw * 1;\n\t\t}\n\t\n\t\t_fnClearTable( settings );\n\t\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\t\n\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t_fnAddData( settings, data[i] );\n\t\t}\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\n\t\tsettings.bAjaxDataGet = false;\n\t\t_fnDraw( settings );\n\t\n\t\tif ( ! settings._bInitComplete ) {\n\t\t\t_fnInitComplete( settings, json );\n\t\t}\n\t\n\t\tsettings.bAjaxDataGet = true;\n\t\t_fnProcessingDisplay( settings, false );\n\t}\n\t\n\t\n\t/**\n\t * Get the data from the JSON data source to use for drawing a table. Using\n\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t * source object, or from a processing function.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param  {object} json Data source object / array from the server\n\t *  @return {array} Array of data to use\n\t */\n\tfunction _fnAjaxDataSrc ( oSettings, json )\n\t{\n\t\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\t\toSettings.ajax.dataSrc :\n\t\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\t\n\t\t// Compatibility with 1.9-. In order to read from aaData, check if the\n\t\t// default has been changed, if not, check for aaData\n\t\tif ( dataSrc === 'data' ) {\n\t\t\treturn json.aaData || json[dataSrc];\n\t\t}\n\t\n\t\treturn dataSrc !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\tjson;\n\t}\n\t\n\t/**\n\t * Generate the node required for filtering text\n\t *  @returns {node} Filter control element\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlFilter ( settings )\n\t{\n\t\tvar classes = settings.oClasses;\n\t\tvar tableId = settings.sTableId;\n\t\tvar language = settings.oLanguage;\n\t\tvar previousSearch = settings.oPreviousSearch;\n\t\tvar features = settings.aanFeatures;\n\t\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\t\n\t\tvar str = language.sSearch;\n\t\tstr = str.match(/_INPUT_/) ?\n\t\t\tstr.replace('_INPUT_', input) :\n\t\t\tstr+input;\n\t\n\t\tvar filter = $('<div/>', {\n\t\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t\t'class': classes.sFilter\n\t\t\t} )\n\t\t\t.append( $('<label/>' ).append( str ) );\n\t\n\t\tvar searchFn = function() {\n\t\t\t/* Update all other filter input elements for the new display */\n\t\t\tvar n = features.f;\n\t\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\n\t\t\t/* Now do the filter */\n\t\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\t\"sSearch\": val,\n\t\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive\n\t\t\t\t} );\n\t\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t};\n\t\n\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\tsettings.searchDelay :\n\t\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t\t400 :\n\t\t\t\t0;\n\t\n\t\tvar jqFilter = $('input', filter)\n\t\t\t.val( previousSearch.sSearch )\n\t\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t\t.bind(\n\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\tsearchDelay ?\n\t\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\t\tsearchFn\n\t\t\t)\n\t\t\t.bind( 'keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.attr('aria-controls', tableId);\n\t\n\t\t// Update the input elements whenever the table is filtered\n\t\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame...\n\t\t\t\ttry {\n\t\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch ( e ) {}\n\t\t\t}\n\t\t} );\n\t\n\t\treturn filter[0];\n\t}\n\t\n\t\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oSearch search information\n\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete ( oSettings, oInput, iForce )\n\t{\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\tvar fnSaveFilter = function ( oFilter ) {\n\t\t\t/* Save the filtering values */\n\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t};\n\t\tvar fnRegex = function ( o ) {\n\t\t\t// Backwards compatibility with the bEscapeRegex option\n\t\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t\t};\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo As per sort - can this be moved into an event handler?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t\t{\n\t\t\t/* Global filter */\n\t\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\n\t\t\tfnSaveFilter( oInput );\n\t\n\t\t\t/* Now do the individual column filter */\n\t\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t\t{\n\t\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t\t}\n\t\n\t\t\t/* Custom filtering */\n\t\t\t_fnFilterCustom( oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfnSaveFilter( oInput );\n\t\t}\n\t\n\t\t/* Tell the draw function we have been filtering */\n\t\toSettings.bFiltered = true;\n\t\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n\t}\n\t\n\t\n\t/**\n\t * Apply custom filtering functions\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom( settings )\n\t{\n\t\tvar filters = DataTable.ext.search;\n\t\tvar displayRows = settings.aiDisplay;\n\t\tvar row, rowIdx;\n\t\n\t\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\t\tvar rows = [];\n\t\n\t\t\t// Loop over each row and see if it should be included\n\t\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\t\trowIdx = displayRows[ j ];\n\t\t\t\trow = settings.aoData[ rowIdx ];\n\t\n\t\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\t\trows.push( rowIdx );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t// existing array\n\t\t\tdisplayRows.length = 0;\n\t\t\t$.merge( displayRows, rows );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the table on a per-column basis\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iColumn column to filter\n\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t *  @param {bool} bSmart use smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n\t{\n\t\tif ( searchStr === '' ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar data;\n\t\tvar display = settings.aiDisplay;\n\t\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\t\n\t\tfor ( var i=display.length-1 ; i>=0 ; i-- ) {\n\t\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\t\n\t\t\tif ( ! rpSearch.test( data ) ) {\n\t\t\t\tdisplay.splice( i, 1 );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} input string to filter on\n\t *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n\t *  @param {bool} regex treat as a regular expression or not\n\t *  @param {bool} smart perform smart filtering or not\n\t *  @param {bool} caseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n\t{\n\t\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\t\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\t\tvar displayMaster = settings.aiDisplayMaster;\n\t\tvar display, invalidated, i;\n\t\n\t\t// Need to take account of custom filtering functions - always filter\n\t\tif ( DataTable.ext.search.length !== 0 ) {\n\t\t\tforce = true;\n\t\t}\n\t\n\t\t// Check if any of the rows were invalidated\n\t\tinvalidated = _fnFilterData( settings );\n\t\n\t\t// If the input is blank - we just want the full data set\n\t\tif ( input.length <= 0 ) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\t\telse {\n\t\t\t// New search - start from the master array\n\t\t\tif ( invalidated ||\n\t\t\t\t force ||\n\t\t\t\t prevSearch.length > input.length ||\n\t\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t\t                  // re-filtered since indexes will have changed\n\t\t\t) {\n\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t}\n\t\n\t\t\t// Search the display array\n\t\t\tdisplay = settings.aiDisplay;\n\t\n\t\t\tfor ( i=display.length-1 ; i>=0 ; i-- ) {\n\t\t\t\tif ( ! rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\t\tdisplay.splice( i, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n\t{\n\t\tsearch = regex ?\n\t\t\tsearch :\n\t\t\t_fnEscapeRegex( search );\n\t\t\n\t\tif ( smart ) {\n\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t * order is important - a la google. So this is what we want to\n\t\t\t * generate:\n\t\t\t * \n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t */\n\t\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n\t\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\t\n\t\t\t\treturn word.replace('\"', '');\n\t\t\t} );\n\t\n\t\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t\t}\n\t\n\t\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n\t}\n\t\n\t\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnEscapeRegex ( sVal )\n\t{\n\t\treturn sVal.replace( _re_escape_regex, '\\\\$1' );\n\t}\n\t\n\t\n\t\n\tvar __filter_div = $('<div>')[0];\n\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\t\n\t// Update the filtering data for each row if needed (by invalidation or first run)\n\tfunction _fnFilterData ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar column;\n\t\tvar i, j, ien, jen, filterData, cellData, row;\n\t\tvar fomatters = DataTable.ext.type.search;\n\t\tvar wasInvalidated = false;\n\t\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aFilterData ) {\n\t\t\t\tfilterData = [];\n\t\n\t\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\t\tcolumn = columns[j];\n\t\n\t\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\t\n\t\t\t\t\t\tif ( fomatters[ column.sType ] ) {\n\t\t\t\t\t\t\tcellData = fomatters[ column.sType ]( cellData );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n]/g, '');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfilterData.push( cellData );\n\t\t\t\t}\n\t\n\t\t\t\trow._aFilterData = filterData;\n\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\twasInvalidated = true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn wasInvalidated;\n\t}\n\t\n\t\n\t/**\n\t * Convert from the internal Hungarian notation to camelCase for external\n\t * interaction\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToCamel ( obj )\n\t{\n\t\treturn {\n\t\t\tsearch:          obj.sSearch,\n\t\t\tsmart:           obj.bSmart,\n\t\t\tregex:           obj.bRegex,\n\t\t\tcaseInsensitive: obj.bCaseInsensitive\n\t\t};\n\t}\n\t\n\t\n\t\n\t/**\n\t * Convert from camelCase notation to the internal Hungarian. We could use the\n\t * Hungarian convert function here, but this is cleaner\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToHung ( obj )\n\t{\n\t\treturn {\n\t\t\tsSearch:          obj.search,\n\t\t\tbSmart:           obj.smart,\n\t\t\tbRegex:           obj.regex,\n\t\t\tbCaseInsensitive: obj.caseInsensitive\n\t\t};\n\t}\n\t\n\t/**\n\t * Generate the node required for the info display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Information element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlInfo ( settings )\n\t{\n\t\tvar\n\t\t\ttid = settings.sTableId,\n\t\t\tnodes = settings.aanFeatures.i,\n\t\t\tn = $('<div/>', {\n\t\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t\t} );\n\t\n\t\tif ( ! nodes ) {\n\t\t\t// Update display on each draw\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\"sName\": \"information\"\n\t\t\t} );\n\t\n\t\t\tn\n\t\t\t\t.attr( 'role', 'status' )\n\t\t\t\t.attr( 'aria-live', 'polite' );\n\t\n\t\t\t// Table is described by our info div\n\t\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t\t}\n\t\n\t\treturn n[0];\n\t}\n\t\n\t\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo ( settings )\n\t{\n\t\t/* Show information about the table */\n\t\tvar nodes = settings.aanFeatures.i;\n\t\tif ( nodes.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\tlang  = settings.oLanguage,\n\t\t\tstart = settings._iDisplayStart+1,\n\t\t\tend   = settings.fnDisplayEnd(),\n\t\t\tmax   = settings.fnRecordsTotal(),\n\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\tout   = total ?\n\t\t\t\tlang.sInfo :\n\t\t\t\tlang.sInfoEmpty;\n\t\n\t\tif ( total !== max ) {\n\t\t\t/* Record set after filtering */\n\t\t\tout += ' ' + lang.sInfoFiltered;\n\t\t}\n\t\n\t\t// Convert the macros\n\t\tout += lang.sInfoPostFix;\n\t\tout = _fnInfoMacros( settings, out );\n\t\n\t\tvar callback = lang.fnInfoCallback;\n\t\tif ( callback !== null ) {\n\t\t\tout = callback.call( settings.oInstance,\n\t\t\t\tsettings, start, end, max, total, out\n\t\t\t);\n\t\t}\n\t\n\t\t$(nodes).html( out );\n\t}\n\t\n\t\n\tfunction _fnInfoMacros ( settings, str )\n\t{\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t// internally\n\t\tvar\n\t\t\tformatter  = settings.fnFormatNumber,\n\t\t\tstart      = settings._iDisplayStart+1,\n\t\t\tlen        = settings._iDisplayLength,\n\t\t\tvis        = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn str.\n\t\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n\t}\n\t\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise ( settings )\n\t{\n\t\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\t\tvar columns = settings.aoColumns, column;\n\t\tvar features = settings.oFeatures;\n\t\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\t\n\t\t/* Ensure that the table data is fully initialised */\n\t\tif ( ! settings.bInitialised ) {\n\t\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Show the display HTML options */\n\t\t_fnAddOptionsHtml( settings );\n\t\n\t\t/* Build and draw the header / footer for the table */\n\t\t_fnBuildHead( settings );\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t/* Calculate sizes for columns */\n\t\tif ( features.bAutoWidth ) {\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\n\t\t\tif ( column.sWidth ) {\n\t\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\t\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\t\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tvar dataSrc = _fnDataSource( settings );\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\t\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\t\n\t\t\t\t\t_fnReDraw( settings );\n\t\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t *    with client-side processing (optional)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete ( settings, json )\n\t{\n\t\tsettings._bInitComplete = true;\n\t\n\t\t// When data was added after the initialisation (data or Ajax) we need to\n\t\t// calculate the column sizing\n\t\tif ( json || settings.oInit.aaData ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n\t}\n\t\n\t\n\tfunction _fnLengthChange ( settings, val )\n\t{\n\t\tvar len = parseInt( val, 10 );\n\t\tsettings._iDisplayLength = len;\n\t\n\t\t_fnLengthOverflow( settings );\n\t\n\t\t// Fire length change event\n\t\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n\t}\n\t\n\t\n\t/**\n\t * Generate the node required for user display length changing\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Display length feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlLength ( settings )\n\t{\n\t\tvar\n\t\t\tclasses  = settings.oClasses,\n\t\t\ttableId  = settings.sTableId,\n\t\t\tmenu     = settings.aLengthMenu,\n\t\t\td2       = $.isArray( menu[0] ),\n\t\t\tlengths  = d2 ? menu[0] : menu,\n\t\t\tlanguage = d2 ? menu[1] : menu;\n\t\n\t\tvar select = $('<select/>', {\n\t\t\t'name':          tableId+'_length',\n\t\t\t'aria-controls': tableId,\n\t\t\t'class':         classes.sLengthSelect\n\t\t} );\n\t\n\t\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\t\tselect[0][ i ] = new Option( language[i], lengths[i] );\n\t\t}\n\t\n\t\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\t\tif ( ! settings.aanFeatures.l ) {\n\t\t\tdiv[0].id = tableId+'_length';\n\t\t}\n\t\n\t\tdiv.children().append(\n\t\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t\t);\n\t\n\t\t// Can't use `select` variable as user might provide their own and the\n\t\t// reference is broken by the use of outerHTML\n\t\t$('select', div)\n\t\t\t.val( settings._iDisplayLength )\n\t\t\t.bind( 'change.DT', function(e) {\n\t\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t\t_fnDraw( settings );\n\t\t\t} );\n\t\n\t\t// Update node value whenever anything changes the table's length\n\t\t$(settings.nTable).bind( 'length.dt.DT', function (e, s, len) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t$('select', div).val( len );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn div[0];\n\t}\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Note that most of the paging logic is done in\n\t * DataTable.ext.pager\n\t */\n\t\n\t/**\n\t * Generate the node required for default pagination\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Pagination feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlPaginate ( settings )\n\t{\n\t\tvar\n\t\t\ttype   = settings.sPaginationType,\n\t\t\tplugin = DataTable.ext.pager[ type ],\n\t\t\tmodern = typeof plugin === 'function',\n\t\t\tredraw = function( settings ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t},\n\t\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\t\tfeatures = settings.aanFeatures;\n\t\n\t\tif ( ! modern ) {\n\t\t\tplugin.fnInit( settings, node, redraw );\n\t\t}\n\t\n\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\tif ( ! features.p )\n\t\t{\n\t\t\tnode.id = settings.sTableId+'_paginate';\n\t\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": function( settings ) {\n\t\t\t\t\tif ( modern ) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\t\ti, ien;\n\t\n\t\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sName\": \"pagination\"\n\t\t\t} );\n\t\t}\n\t\n\t\treturn node;\n\t}\n\t\n\t\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} settings DataTables settings object\n\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t *  @param [bool] redraw Automatically draw the update or not\n\t *  @returns {bool} true page has changed, false - no change\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange ( settings, action, redraw )\n\t{\n\t\tvar\n\t\t\tstart     = settings._iDisplayStart,\n\t\t\tlen       = settings._iDisplayLength,\n\t\t\trecords   = settings.fnRecordsDisplay();\n\t\n\t\tif ( records === 0 || len === -1 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( typeof action === \"number\" )\n\t\t{\n\t\t\tstart = action * len;\n\t\n\t\t\tif ( start > records )\n\t\t\t{\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"first\" )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( action == \"previous\" )\n\t\t{\n\t\t\tstart = len >= 0 ?\n\t\t\t\tstart - len :\n\t\t\t\t0;\n\t\n\t\t\tif ( start < 0 )\n\t\t\t{\n\t\t\t  start = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"next\" )\n\t\t{\n\t\t\tif ( start + len < records )\n\t\t\t{\n\t\t\t\tstart += len;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"last\" )\n\t\t{\n\t\t\tstart = Math.floor( (records-1) / len) * len;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t\t}\n\t\n\t\tvar changed = settings._iDisplayStart !== start;\n\t\tsettings._iDisplayStart = start;\n\t\n\t\tif ( changed ) {\n\t\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\t\n\t\t\tif ( redraw ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t}\n\t\n\t\treturn changed;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Processing element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlProcessing ( settings )\n\t{\n\t\treturn $('<div/>', {\n\t\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t\t'class': settings.oClasses.sProcessing\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.insertBefore( settings.nTable )[0];\n\t}\n\t\n\t\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} settings dataTables settings object\n\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnProcessingDisplay ( settings, show )\n\t{\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n\t}\n\t\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable ( settings )\n\t{\n\t\tvar table = $(settings.nTable);\n\t\n\t\t// Add the ARIA grid role to the table\n\t\ttable.attr( 'role', 'grid' );\n\t\n\t\t// Scrolling from here on in\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\t\treturn settings.nTable;\n\t\t}\n\t\n\t\tvar scrollX = scroll.sX;\n\t\tvar scrollY = scroll.sY;\n\t\tvar classes = settings.oClasses;\n\t\tvar caption = table.children('caption');\n\t\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\t\tvar headerClone = $( table[0].cloneNode(false) );\n\t\tvar footerClone = $( table[0].cloneNode(false) );\n\t\tvar footer = table.children('tfoot');\n\t\tvar _div = '<div/>';\n\t\tvar size = function ( s ) {\n\t\t\treturn !s ? null : _fnStringToCss( s );\n\t\t};\n\t\n\t\tif ( ! footer.length ) {\n\t\t\tfooter = null;\n\t\t}\n\t\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - scroller\n\t\t *    div - scroll head\n\t\t *      div - scroll head inner\n\t\t *        table - scroll head table\n\t\t *          thead - thead\n\t\t *    div - scroll body\n\t\t *      table - table (master table)\n\t\t *        thead - thead clone for sizing\n\t\t *        tbody - tbody\n\t\t *    div - scroll foot\n\t\t *      div - scroll foot inner\n\t\t *        table - scroll foot table\n\t\t *          tfoot - tfoot\n\t\t */\n\t\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t\t} )\n\t\t\t\t\t.append( table )\n\t\t\t);\n\t\n\t\tif ( footer ) {\n\t\t\tscroller.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\n\t\tvar children = scroller.children();\n\t\tvar scrollHead = children[0];\n\t\tvar scrollBody = children[1];\n\t\tvar scrollFoot = footer ? children[2] : null;\n\t\n\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\tif ( scrollX ) {\n\t\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\t\tvar scrollLeft = this.scrollLeft;\n\t\n\t\t\t\tscrollHead.scrollLeft = scrollLeft;\n\t\n\t\t\t\tif ( footer ) {\n\t\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\n\t\t$(scrollBody).css(\n\t\t\tscrollY && scroll.bCollapse ? 'max-height' : 'height', \n\t\t\tscrollY\n\t\t);\n\t\n\t\tsettings.nScrollHead = scrollHead;\n\t\tsettings.nScrollBody = scrollBody;\n\t\tsettings.nScrollFoot = scrollFoot;\n\t\n\t\t// On redraw - align columns\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\"sName\": \"scrolling\"\n\t\t} );\n\t\n\t\treturn scroller[0];\n\t}\n\t\n\t\n\t\n\t/**\n\t * Update the header, footer and body tables for resizing - i.e. column\n\t * alignment.\n\t *\n\t * Welcome to the most horrible function DataTables. The process that this\n\t * function follows is basically:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Take live measurements from the DOM\n\t *   3. Apply the measurements to align the columns\n\t *   4. Clean up\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw ( settings )\n\t{\n\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t// to try and keep the minimised size as small as possible\n\t\tvar\n\t\t\tscroll         = settings.oScroll,\n\t\t\tscrollX        = scroll.sX,\n\t\t\tscrollXInner   = scroll.sXInner,\n\t\t\tscrollY        = scroll.sY,\n\t\t\tbarWidth       = scroll.iBarWidth,\n\t\t\tdivHeader      = $(settings.nScrollHead),\n\t\t\tdivHeaderStyle = divHeader[0].style,\n\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\tdivBodyEl      = settings.nScrollBody,\n\t\t\tdivBody        = $(divBodyEl),\n\t\t\tdivBodyStyle   = divBodyEl.style,\n\t\t\tdivFooter      = $(settings.nScrollFoot),\n\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\theader         = $(settings.nTHead),\n\t\t\ttable          = $(settings.nTable),\n\t\t\ttableEl        = table[0],\n\t\t\ttableStyle     = tableEl.style,\n\t\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\t\tbrowser        = settings.oBrowser,\n\t\t\tie67           = browser.bScrollOversize,\n\t\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\t\theaderTrgEls, footerTrgEls,\n\t\t\theaderSrcEls, footerSrcEls,\n\t\t\theaderCopy, footerCopy,\n\t\t\theaderWidths=[], footerWidths=[],\n\t\t\theaderContent=[], footerContent=[],\n\t\t\tidx, correction, sanityWidth,\n\t\t\tzeroOut = function(nSizer) {\n\t\t\t\tvar style = nSizer.style;\n\t\t\t\tstyle.paddingTop = \"0\";\n\t\t\t\tstyle.paddingBottom = \"0\";\n\t\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\t\tstyle.height = 0;\n\t\t\t};\n\t\n\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t// adjust the column sizes as the table width will have changed to account\n\t\t// for the scrollbar\n\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\t\n\t\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\treturn; // adjust column sizing will call this function again\n\t\t}\n\t\telse {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t}\n\t\n\t\t/*\n\t\t * 1. Re-create the table inside the scrolling div\n\t\t */\n\t\n\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\ttable.children('thead, tfoot').remove();\n\t\n\t\tif ( footer ) {\n\t\t\tfooterCopy = footer.clone().prependTo( table );\n\t\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\t\tfooterSrcEls = footerCopy.find('tr');\n\t\t}\n\t\n\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\theaderCopy = header.clone().prependTo( table );\n\t\theaderTrgEls = header.find('tr'); // original header is in its own table\n\t\theaderSrcEls = headerCopy.find('tr');\n\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\t\n\t\n\t\t/*\n\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t */\n\t\n\t\t// Remove old sizing and apply the calculated column widths\n\t\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t// calculated sizes to this header\n\t\tif ( ! scrollX )\n\t\t{\n\t\t\tdivBodyStyle.width = '100%';\n\t\t\tdivHeader[0].style.width = '100%';\n\t\t}\n\t\n\t\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t\t} );\n\t\n\t\tif ( footer ) {\n\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\tn.style.width = \"\";\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Size the table as a whole\n\t\tsanityWidth = table.outerWidth();\n\t\tif ( scrollX === \"\" ) {\n\t\t\t// No x scrolling\n\t\t\ttableStyle.width = \"100%\";\n\t\n\t\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t// into account.\n\t\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t\t}\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\telse if ( scrollXInner !== \"\" ) {\n\t\t\t// legacy x scroll inner has been given - use it\n\t\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\n\t\t// Hidden header should have zero height, so remove padding and borders. Then\n\t\t// set the width based on the real headers\n\t\n\t\t// Apply all styles in one pass\n\t\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\t\n\t\t// Read all widths in next pass\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\theaderContent.push( nSizer.innerHTML );\n\t\t\theaderWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t}, headerSrcEls );\n\t\n\t\t// Apply all widths in final pass\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t// Only apply widths to the DataTables detected header cells - this\n\t\t\t// prevents complex headers from having contradictory sizes applied\n\t\t\tif ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {\n\t\t\t\tnToSize.style.width = headerWidths[i];\n\t\t\t}\n\t\t}, headerTrgEls );\n\t\n\t\t$(headerSrcEls).height(0);\n\t\n\t\t/* Same again with the footer if we have one */\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t\t}, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t\tnToSize.style.width = footerWidths[i];\n\t\t\t}, footerTrgEls );\n\t\n\t\t\t$(footerSrcEls).height(0);\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 3. Apply the measurements\n\t\t */\n\t\n\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t// the content of the cell so that the width applied to the header and body\n\t\t// both match, but we want to hide it completely. We want to also fix their\n\t\t// width to what they currently are\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+headerContent[i]+'</div>';\n\t\t\tnSizer.style.width = headerWidths[i];\n\t\t}, headerSrcEls );\n\t\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+footerContent[i]+'</div>';\n\t\t\t\tnSizer.style.width = footerWidths[i];\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\tif ( table.outerWidth() < sanityWidth )\n\t\t{\n\t\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\tsanityWidth+barWidth :\n\t\t\t\t\tsanityWidth;\n\t\n\t\t\t// IE6/7 are a law unto themselves...\n\t\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t\t}\n\t\n\t\t\t// And give the user a warning that we've stopped the table getting too small\n\t\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcorrection = '100%';\n\t\t}\n\t\n\t\t// Apply to the container elements\n\t\tdivBodyStyle.width = _fnStringToCss( correction );\n\t\tdivHeaderStyle.width = _fnStringToCss( correction );\n\t\n\t\tif ( footer ) {\n\t\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 4. Clean up\n\t\t */\n\t\tif ( ! scrollY ) {\n\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t */\n\t\t\tif ( ie67 ) {\n\t\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Finally set the width's of the header and footer tables */\n\t\tvar iOuterWidth = table.outerWidth();\n\t\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\t\n\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\t\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\n\t\tif ( footer ) {\n\t\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\t}\n\t\n\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\ttable.children('colgroup').insertBefore( table.children('thead') );\n\t\n\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\tdivBody.scroll();\n\t\n\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t// only if we aren't holding the position\n\t\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\t\tdivBodyEl.scrollTop = 0;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Apply a given function to the display child nodes of an element array (typically\n\t * TD children of TR rows\n\t *  @param {function} fn Method to apply to the objects\n\t *  @param array {nodes} an1 List of elements to look through for display children\n\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyToChildren( fn, an1, an2 )\n\t{\n\t\tvar index=0, i=0, iLen=an1.length;\n\t\tvar nNode1, nNode2;\n\t\n\t\twhile ( i < iLen ) {\n\t\t\tnNode1 = an1[i].firstChild;\n\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\t\n\t\t\twhile ( nNode1 ) {\n\t\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\t\tif ( an2 ) {\n\t\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\n\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\t\n\t\n\tvar __re_html_remove = /<.*?>/g;\n\t\n\t\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths ( oSettings )\n\t{\n\t\tvar\n\t\t\ttable = oSettings.nTable,\n\t\t\tcolumns = oSettings.aoColumns,\n\t\t\tscroll = oSettings.oScroll,\n\t\t\tscrollY = scroll.sY,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tcolumnCount = columns.length,\n\t\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\t\theaderCells = $('th', oSettings.nTHead),\n\t\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\t\ttableContainer = table.parentNode,\n\t\t\tuserInputs = false,\n\t\t\ti, column, columnIdx, width, outerWidth,\n\t\t\tbrowser = oSettings.oBrowser,\n\t\t\tie67 = browser.bScrollOversize;\n\t\n\t\tvar styleWidth = table.style.width;\n\t\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\t\ttableWidthAttr = styleWidth;\n\t\t}\n\t\n\t\t/* Convert any user input sizes into pixel sizes */\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\tif ( column.sWidth !== null ) {\n\t\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n\t\n\t\t\t\tuserInputs = true;\n\t\t\t}\n\t\t}\n\t\n\t\t/* If the number of columns in the DOM equals the number that we have to\n\t\t * process in DataTables, then we can use the offsets that are created by\n\t\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t\t * nor scrolling used\n\t\t */\n\t\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t\t     columnCount == headerCells.length\n\t\t) {\n\t\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\t\n\t\t\t\tif ( colIdx !== null ) {\n\t\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t\t// table widths\n\t\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t\t.removeAttr( 'id' );\n\t\n\t\t\t// Clean up the table body\n\t\t\ttmpTable.find('tbody tr').remove();\n\t\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\t\n\t\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t\t// real header and footer are contained in different table tags\n\t\t\ttmpTable.find('thead, tfoot').remove();\n\t\t\ttmpTable\n\t\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t\t.append( $(oSettings.nTFoot).clone() );\n\t\n\t\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\t\n\t\t\t// Apply custom sizing to the cloned header\n\t\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\t\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t\t'';\n\t\n\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t} ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Find the widest cell for each column and put it into the table\n\t\t\tif ( oSettings.aoData.length ) {\n\t\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\t\tcolumn = columns[ columnIdx ];\n\t\n\t\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t\t.clone( false )\n\t\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t\t.appendTo( tr );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t\t// duplicated in the dom (radio elements for example)\n\t\t\t$('[name]', tmpTable).removeAttr('name');\n\t\n\t\t\t// Table has been built, attach to the document so we can work with it.\n\t\t\t// A holding element is used, positioned at the top of the container\n\t\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t\t// needed\n\t\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t} :\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.append( tmpTable )\n\t\t\t\t.appendTo( tableContainer );\n\t\n\t\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t\t// is. This results in slightly different, but I think correct behaviour\n\t\t\tif ( scrollX && scrollXInner ) {\n\t\t\t\ttmpTable.width( scrollXInner );\n\t\t\t}\n\t\t\telse if ( scrollX ) {\n\t\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\t\ttmpTable.removeAttr('width');\n\t\n\t\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t\t// collapse\n\t\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( scrollY ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t\telse if ( tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableWidthAttr );\n\t\t\t}\n\t\n\t\t\t// Get the width of each column in the constructed table - we need to\n\t\t\t// know the inner width (so it can be assigned to the other table's\n\t\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t\t// column, but if ever a header can span multiple columns, this will\n\t\t\t// need to be modified.\n\t\t\tvar total = 0;\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tvar cell = $(headerCells[i]);\n\t\t\t\tvar border = cell.outerWidth() - cell.width();\n\t\n\t\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\t\tcell.outerWidth();\n\t\n\t\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\t\ttotal += bounding;\n\t\n\t\t\t\t// Width for each column to use\n\t\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t\t}\n\t\n\t\t\ttable.style.width = _fnStringToCss( total );\n\t\n\t\t\t// Finished with the table - ditch it\n\t\t\tholder.remove();\n\t\t}\n\t\n\t\t// If there is a width attr, we want to attach an event listener which\n\t\t// allows the table sizing to automatically adjust when the window is\n\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\tif ( tableWidthAttr ) {\n\t\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t\t}\n\t\n\t\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\t\tvar bindResize = function () {\n\t\t\t\t$(window).bind('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t\t} ) );\n\t\t\t};\n\t\n\t\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\t\tif ( ie67 ) {\n\t\t\t\tsetTimeout( bindResize, 1000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbindResize();\n\t\t\t}\n\t\n\t\t\toSettings._reszEvt = true;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained for\n\t * the throttled function\n\t *  @param {function} fn Function to be called\n\t *  @param {int} [freq=200] call frequency in mS\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnThrottle( fn, freq ) {\n\t\tvar\n\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\tlast,\n\t\t\ttimer;\n\t\n\t\treturn function () {\n\t\t\tvar\n\t\t\t\tthat = this,\n\t\t\t\tnow  = +new Date(),\n\t\t\t\targs = arguments;\n\t\n\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\tclearTimeout( timer );\n\t\n\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\tlast = undefined;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}, frequency );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlast = now;\n\t\t\t\tfn.apply( that, args );\n\t\t\t}\n\t\t};\n\t}\n\t\n\t\n\t/**\n\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t *  @param {string} width width to be converted\n\t *  @param {node} parent parent to get the with for (required for relative widths) - optional\n\t *  @returns {int} width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnConvertToWidth ( width, parent )\n\t{\n\t\tif ( ! width ) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar n = $('<div/>')\n\t\t\t.css( 'width', _fnStringToCss( width ) )\n\t\t\t.appendTo( parent || document.body );\n\t\n\t\tvar val = n[0].offsetWidth;\n\t\tn.remove();\n\t\n\t\treturn val;\n\t}\n\t\n\t\n\t/**\n\t * Get the widest node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {node} widest table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetWidestNode( settings, colIdx )\n\t{\n\t\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\t\tif ( idx < 0 ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar data = settings.aoData[ idx ];\n\t\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\t\tdata.anCells[ colIdx ];\n\t}\n\t\n\t\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {string} max string length for each column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString( settings, colIdx )\n\t{\n\t\tvar s, max=-1, maxIdx = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\t\ts = s.replace( __re_html_remove, '' );\n\t\t\ts = s.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > max ) {\n\t\t\t\tmax = s.length;\n\t\t\t\tmaxIdx = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn maxIdx;\n\t}\n\t\n\t\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {string} value to css-ify\n\t *  @returns {string} value with css unit\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss( s )\n\t{\n\t\tif ( s === null ) {\n\t\t\treturn '0px';\n\t\t}\n\t\n\t\tif ( typeof s == 'number' ) {\n\t\t\treturn s < 0 ?\n\t\t\t\t'0px' :\n\t\t\t\ts+'px';\n\t\t}\n\t\n\t\t// Check it has a unit character already\n\t\treturn s.match(/\\d$/) ?\n\t\t\ts+'px' :\n\t\t\ts;\n\t}\n\t\n\t\n\t\n\tfunction _fnSortFlatten ( settings )\n\t{\n\t\tvar\n\t\t\ti, iLen, k, kLen,\n\t\t\taSort = [],\n\t\t\taiOrig = [],\n\t\t\taoColumns = settings.aoColumns,\n\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\tfixed = settings.aaSortingFixed,\n\t\t\tfixedObj = $.isPlainObject( fixed ),\n\t\t\tnestedSort = [],\n\t\t\tadd = function ( a ) {\n\t\t\t\tif ( a.length && ! $.isArray( a[0] ) ) {\n\t\t\t\t\t// 1D array\n\t\t\t\t\tnestedSort.push( a );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// 2D array\n\t\t\t\t\t$.merge( nestedSort, a );\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t// specified\n\t\tif ( $.isArray( fixed ) ) {\n\t\t\tadd( fixed );\n\t\t}\n\t\n\t\tif ( fixedObj && fixed.pre ) {\n\t\t\tadd( fixed.pre );\n\t\t}\n\t\n\t\tadd( settings.aaSorting );\n\t\n\t\tif (fixedObj && fixed.post ) {\n\t\t\tadd( fixed.post );\n\t\t}\n\t\n\t\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t\t{\n\t\t\tsrcCol = nestedSort[i][0];\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\t\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\t\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t\t}\n\t\n\t\t\t\taSort.push( {\n\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\tcol:       iCol,\n\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\ttype:      sType,\n\t\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\treturn aSort;\n\t}\n\t\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t *  @todo This really needs split up!\n\t */\n\tfunction _fnSort ( oSettings )\n\t{\n\t\tvar\n\t\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\t\tsDataType, nTh,\n\t\t\taiOrig = [],\n\t\t\toExtSort = DataTable.ext.type.order,\n\t\t\taoData = oSettings.aoData,\n\t\t\taoColumns = oSettings.aoColumns,\n\t\t\taDataSort, data, iCol, sType, oSort,\n\t\t\tformatters = 0,\n\t\t\tsortCol,\n\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\taSort;\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t\t//   data is going to be used in the table?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\taSort = _fnSortFlatten( oSettings );\n\t\n\t\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\t\tsortCol = aSort[i];\n\t\n\t\t\t// Track if we can use the fast sort algorithm\n\t\t\tif ( sortCol.formatter ) {\n\t\t\t\tformatters++;\n\t\t\t}\n\t\n\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t_fnSortData( oSettings, sortCol.col );\n\t\t}\n\t\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t\t{\n\t\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t\t}\n\t\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *    var iTest;\n\t\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t\t *      if (iTest !== 0)\n\t\t\t *        return iTest;\n\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (iTest !== 0)\n\t\t\t *      return iTest;\n\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t *\n\t\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t\t * methods which do not have a pre-sort formatting function.\n\t\t\t */\n\t\t\tif ( formatters === aSort.length ) {\n\t\t\t\t// All sort types have formatting functions\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t\t// methods.\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Tell the draw function that we have sorted the data */\n\t\toSettings.bSorted = true;\n\t}\n\t\n\t\n\tfunction _fnSortAria ( settings )\n\t{\n\t\tvar label;\n\t\tvar nextSort;\n\t\tvar columns = settings.aoColumns;\n\t\tvar aSort = _fnSortFlatten( settings );\n\t\tvar oAria = settings.oLanguage.oAria;\n\t\n\t\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t\t// attributes as needed)\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar col = columns[i];\n\t\t\tvar asSorting = col.asSorting;\n\t\t\tvar sTitle = col.sTitle.replace( /<.*?>/g, \"\" );\n\t\t\tvar th = col.nTh;\n\t\n\t\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t\t// attr() and removeAttr() methods...\n\t\t\tth.removeAttribute('aria-sort');\n\t\n\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\tif ( col.bSortable ) {\n\t\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnextSort = asSorting[0];\n\t\t\t\t}\n\t\n\t\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\t\toAria.sSortAscending :\n\t\t\t\t\toAria.sSortDescending\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlabel = sTitle;\n\t\t\t}\n\t\n\t\t\tth.setAttribute('aria-label', label);\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Function to run on user sort request\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {boolean} [append=false] Append the requested sort to the existing\n\t *    sort if true (i.e. multi-column sort)\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortListener ( settings, colIdx, append, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\tvar sorting = settings.aaSorting;\n\t\tvar asSorting = col.asSorting;\n\t\tvar nextSortIdx;\n\t\tvar next = function ( a, overflow ) {\n\t\t\tvar idx = a._idx;\n\t\t\tif ( idx === undefined ) {\n\t\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t\t}\n\t\n\t\t\treturn idx+1 < asSorting.length ?\n\t\t\t\tidx+1 :\n\t\t\t\toverflow ?\n\t\t\t\t\tnull :\n\t\t\t\t\t0;\n\t\t};\n\t\n\t\t// Convert to 2D array if needed\n\t\tif ( typeof sorting[0] === 'number' ) {\n\t\t\tsorting = settings.aaSorting = [ sorting ];\n\t\t}\n\t\n\t\t// If appending the sort then we are multi-column sorting\n\t\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\t\n\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t// Yes, modify the sort\n\t\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\t\n\t\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t\t}\n\t\n\t\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No sort on this column yet\n\t\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\tnextSortIdx = next( sorting[0] );\n\t\n\t\t\tsorting.length = 1;\n\t\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t}\n\t\telse {\n\t\t\t// Single column - sort only on this column\n\t\t\tsorting.length = 0;\n\t\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\t\tsorting[0]._idx = 0;\n\t\t}\n\t\n\t\t// Run the sort by calling a full redraw\n\t\t_fnReDraw( settings );\n\t\n\t\t// callback used for async user interaction\n\t\tif ( typeof callback == 'function' ) {\n\t\t\tcallback( settings );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Attach a sort handler (click) to a node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\n\t\t_fnBindAction( attachTo, {}, function (e) {\n\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\tif ( col.bSortable === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If processing is enabled use a timeout to allow the processing\n\t\t\t// display to be shown - otherwise to it synchronously\n\t\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\n\t\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t\t// processing display\n\t\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses( settings )\n\t{\n\t\tvar oldSort = settings.aLastSort;\n\t\tvar sortClass = settings.oClasses.sSortColumn;\n\t\tvar sort = _fnSortFlatten( settings );\n\t\tvar features = settings.oFeatures;\n\t\tvar i, ien, colIdx;\n\t\n\t\tif ( features.bSort && features.bSortClasses ) {\n\t\t\t// Remove old sorting classes\n\t\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = oldSort[i].src;\n\t\n\t\t\t\t// Remove column sorting\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\n\t\t\t// Add new column sorting\n\t\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = sort[i].src;\n\t\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aLastSort = sort;\n\t}\n\t\n\t\n\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t// cache), or from a sort formatter\n\tfunction _fnSortData( settings, idx )\n\t{\n\t\t// Custom sorting function - provided by the sort data type\n\t\tvar column = settings.aoColumns[ idx ];\n\t\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\t\tvar customData;\n\t\n\t\tif ( customSort ) {\n\t\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t\t);\n\t\t}\n\t\n\t\t// Use / populate cache\n\t\tvar row, cellData;\n\t\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aSortData ) {\n\t\t\t\trow._aSortData = [];\n\t\t\t}\n\t\n\t\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\t\tcellData = customSort ?\n\t\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\t\n\t\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\t\tformatter( cellData ) :\n\t\t\t\t\tcellData;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Save the state of a table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSaveState ( settings )\n\t{\n\t\tif ( !settings.oFeatures.bStateSave || settings.bDestroying )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Store the interesting variables */\n\t\tvar state = {\n\t\t\ttime:    +new Date(),\n\t\t\tstart:   settings._iDisplayStart,\n\t\t\tlength:  settings._iDisplayLength,\n\t\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\t\treturn {\n\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t\t};\n\t\t\t} )\n\t\t};\n\t\n\t\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\t\tsettings.oSavedState = state;\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\n\t\n\t\n\t/**\n\t * Attempt to load a saved table state\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState ( settings, oInit )\n\t{\n\t\tvar i, ien;\n\t\tvar columns = settings.aoColumns;\n\t\n\t\tif ( ! settings.oFeatures.bStateSave ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings );\n\t\tif ( ! state || ! state.time ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t * cancelling of loading by returning false\n\t\t */\n\t\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, state] );\n\t\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Reject old data */\n\t\tvar duration = settings.iStateDuration;\n\t\tif ( duration > 0 && state.time < +new Date() - (duration*1000) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Number of columns have changed - all bets are off, no restore of settings\n\t\tif ( columns.length !== state.columns.length ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Store the saved state so it might be accessed at any time\n\t\tsettings.oLoadedState = $.extend( true, {}, state );\n\t\n\t\t// Restore key features - todo - for 1.11 this needs to be done by\n\t\t// subscribed events\n\t\tif ( state.start !== undefined ) {\n\t\t\tsettings._iDisplayStart    = state.start;\n\t\t\tsettings.iInitDisplayStart = state.start;\n\t\t}\n\t\tif ( state.length !== undefined ) {\n\t\t\tsettings._iDisplayLength   = state.length;\n\t\t}\n\t\n\t\t// Order\n\t\tif ( state.order !== undefined ) {\n\t\t\tsettings.aaSorting = [];\n\t\t\t$.each( state.order, function ( i, col ) {\n\t\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t\t[ 0, col[1] ] :\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\t\n\t\t// Search\n\t\tif ( state.search !== undefined ) {\n\t\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( state.search ) );\n\t\t}\n\t\n\t\t// Columns\n\t\tfor ( i=0, ien=state.columns.length ; i<ien ; i++ ) {\n\t\t\tvar col = state.columns[i];\n\t\n\t\t\t// Visibility\n\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t}\n\t\n\t\t\t// Search\n\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t}\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, state] );\n\t}\n\t\n\t\n\t/**\n\t * Return the settings object for a particular table\n\t *  @param {node} table table we are using as a dataTable\n\t *  @returns {object} Settings object - or null if not found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSettingsFromNode ( table )\n\t{\n\t\tvar settings = DataTable.settings;\n\t\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\t\n\t\treturn idx !== -1 ?\n\t\t\tsettings[ idx ] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Log an error message\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} level log error messages, or display them to the user\n\t *  @param {string} msg error message\n\t *  @param {int} tn Technical note id to get more information about the error.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog( settings, level, msg, tn )\n\t{\n\t\tmsg = 'DataTables warning: '+\n\t\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\t\n\t\tif ( tn ) {\n\t\t\tmsg += '. For more information about this error, please see '+\n\t\t\t'http://datatables.net/tn/'+tn;\n\t\t}\n\t\n\t\tif ( ! level  ) {\n\t\t\t// Backwards compatibility pre 1.10\n\t\t\tvar ext = DataTable.ext;\n\t\t\tvar type = ext.sErrMode || ext.errMode;\n\t\n\t\t\tif ( settings ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t\t}\n\t\n\t\t\tif ( type == 'alert' ) {\n\t\t\t\talert( msg );\n\t\t\t}\n\t\t\telse if ( type == 'throw' ) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t\telse if ( typeof type == 'function' ) {\n\t\t\t\ttype( settings, tn, msg );\n\t\t\t}\n\t\t}\n\t\telse if ( window.console && console.log ) {\n\t\t\tconsole.log( msg );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} ret target object\n\t *  @param {object} src source object\n\t *  @param {string} name property\n\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap( ret, src, name, mappedName )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\t$.each( name, function (i, val) {\n\t\t\t\tif ( $.isArray( val ) ) {\n\t\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnMap( ret, src, val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( mappedName === undefined ) {\n\t\t\tmappedName = name;\n\t\t}\n\t\n\t\tif ( src[name] !== undefined ) {\n\t\t\tret[mappedName] = src[name];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t * able to override them, but we do want to deep copy arrays.\n\t *  @param {object} out Object to extend\n\t *  @param {object} extender Object from which the properties will be applied to\n\t *      out\n\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t *      if they are present. This is so you can pass in a collection to\n\t *      DataTables and have that used as your data source without breaking the\n\t *      references\n\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend( out, extender, breakRefs )\n\t{\n\t\tvar val;\n\t\n\t\tfor ( var prop in extender ) {\n\t\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\t\tval = extender[prop];\n\t\n\t\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t\t}\n\t\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {\n\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t}\n\t\n\t\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object} oData Data object to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction( n, oData, fn )\n\t{\n\t\t$(n)\n\t\t\t.bind( 'click.DT', oData, function (e) {\n\t\t\t\t\tn.blur(); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t} )\n\t\t\t.bind( 'keypress.DT', oData, function (e){\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t.bind( 'selectstart.DT', function () {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n\t{\n\t\tif ( fn )\n\t\t{\n\t\t\toSettings[sStore].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"sName\": sName\n\t\t\t} );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the\n\t * callback array store is done backwards! Further note that you do not want to\n\t * fire off triggers in time sensitive applications (for example cell creation)\n\t * as its slow.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t *      oSettings\n\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t *      null no trigger is fired\n\t *  @param {array} args Array of arguments to pass to the callback function /\n\t *      trigger\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n\t{\n\t\tvar ret = [];\n\t\n\t\tif ( callbackArr ) {\n\t\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( eventName !== null ) {\n\t\t\tvar e = $.Event( eventName+'.dt' );\n\t\n\t\t\t$(settings.nTable).trigger( e, args );\n\t\n\t\t\tret.push( e.result );\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t\n\tfunction _fnLengthOverflow ( settings )\n\t{\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tlen = settings._iDisplayLength;\n\t\n\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\tif ( start >= end )\n\t\t{\n\t\t\tstart = end - len;\n\t\t}\n\t\n\t\t// Keep the start record on the current page\n\t\tstart -= (start % len);\n\t\n\t\tif ( len === -1 || start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\n\t\tsettings._iDisplayStart = start;\n\t}\n\t\n\t\n\tfunction _fnRenderer( settings, type )\n\t{\n\t\tvar renderer = settings.renderer;\n\t\tvar host = DataTable.ext.renderer[type];\n\t\n\t\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t// the default.\n\t\t\treturn host[renderer[type]] || host._;\n\t\t}\n\t\telse if ( typeof renderer === 'string' ) {\n\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t// otherwise use the default\n\t\t\treturn host[renderer] || host._;\n\t\t}\n\t\n\t\t// Use the default\n\t\treturn host._;\n\t}\n\t\n\t\n\t/**\n\t * Detect the data source being used for the table. Used to simplify the code\n\t * a little (ajax) and to make it compress a little smaller.\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {string} Data source\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataSource ( settings )\n\t{\n\t\tif ( settings.oFeatures.bServerSide ) {\n\t\t\treturn 'ssp';\n\t\t}\n\t\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\t\treturn 'ajax';\n\t\t}\n\t\treturn 'dom';\n\t}\n\t\n\n\tDataTable = function( options )\n\t{\n\t\t/**\n\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t * return the resulting jQuery object.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n\t\t */\n\t\tthis.$ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).$( sSelector, oOpts );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t * rows are found, the data returned is the original data array/object that was used to\n\t\t * create the row (or a generated array if from a DOM source).\n\t\t *\n\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t * same parameters and the array indexes will match identically.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t\t *    entry in the array.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t *\n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t *    } );\n\t\t */\n\t\tthis._ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Create a DataTables Api instance, with the currently selected tables for\n\t\t * the Api's context.\n\t\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t\t *   or if all tables captured in the jQuery object should be used.\n\t\t * @return {DataTables.Api}\n\t\t */\n\t\tthis.api = function ( traditional )\n\t\t{\n\t\t\treturn traditional ?\n\t\t\t\tnew _Api(\n\t\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t\t) :\n\t\t\t\tnew _Api( this );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t * that this is suitable for client-side processing only - if you are using\n\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t *  @param {array|object} data The data to be added to the table. This can be:\n\t\t *    <ul>\n\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t *    </ul>\n\t\t *  @param {bool} [redraw=true] redraw the table or not\n\t\t *  @returns {array} An array of integers, representing the list of indexes in\n\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t\t *    the table.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Global var for counter\n\t\t *    var giCount = 2;\n\t\t *\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *\n\t\t *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *\n\t\t *      giCount++;\n\t\t *    }\n\t\t */\n\t\tthis.fnAddData = function( data, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\tvar rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\t\tapi.rows.add( data ) :\n\t\t\t\tapi.row.add( data );\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn rows.flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will make DataTables recalculate the column sizes, based on the data\n\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t\t * through the sWidth parameter). This can be useful when the width of the table's\n\t\t * parent element changes (for example a window resize).\n\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      $(window).bind('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).columns.adjust();\n\t\t\tvar settings = api.settings()[0];\n\t\t\tvar scroll = settings.oScroll;\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw( false );\n\t\t\t}\n\t\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\t_fnScrollDraw( settings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Quickly and simply clear a table\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClearTable = function( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).clear();\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t\t * are currently 'open'.\n\t\t *  @param {node} nTr the table row to 'close'\n\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClose = function( nTr )\n\t\t{\n\t\t\tthis.api( true ).row( nTr ).child.hide();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Remove a row for the table\n\t\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t\t *    the TR element you want to delete\n\t\t *  @param {function|null} [callBack] Callback function\n\t\t *  @param {bool} [redraw=true] Redraw the table or not\n\t\t *  @returns {array} The row that was deleted\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnDeleteRow = function( target, callback, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar rows = api.rows( target );\n\t\t\tvar settings = rows.settings()[0];\n\t\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\t\n\t\t\trows.remove();\n\t\t\n\t\t\tif ( callback ) {\n\t\t\t\tcallback.call( this, settings, data );\n\t\t\t}\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn data;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDestroy = function ( remove )\n\t\t{\n\t\t\tthis.api( true ).destroy( remove );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Redraw the table\n\t\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDraw = function( complete )\n\t\t{\n\t\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t\t// into account the new data, but can hold position.\n\t\t\tthis.api( true ).draw( complete );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the input based on data\n\t\t *  @param {string} sInput String to filter the table on\n\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\n\t\t\tapi.draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t\t * provided parameters.\n\t\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t *  @param {int} [col] Optional column index that you want the data of.\n\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t *    defined, only data for the designated cell is returned.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Row data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Individual cell data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetData = function( src, col )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( src !== undefined ) {\n\t\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\t\n\t\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\t\tapi.row( src ).data() || null;\n\t\t\t}\n\t\t\n\t\t\treturn api.data().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t\t * typically want to use the '$' API method in preference to this as it is more\n\t\t * flexible.\n\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetNodes = function( iRow )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\treturn iRow !== undefined ?\n\t\t\t\tapi.row( iRow ).node() :\n\t\t\t\tapi.rows().nodes().flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t * and column index including hidden columns\n\t\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t *    if given as a cell, an array of [row index, column index (visible),\n\t\t *    column index (all)] is given.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *\n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *\n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *\n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetPosition = function( node )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\t\n\t\t\tif ( nodeName == 'TR' ) {\n\t\t\t\treturn api.row( node ).index();\n\t\t\t}\n\t\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\t\tvar cell = api.cell( node ).index();\n\t\t\n\t\t\t\treturn [\n\t\t\t\t\tcell.row,\n\t\t\t\t\tcell.columnVisible,\n\t\t\t\t\tcell.column\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Check to see if a row is 'open' or not.\n\t\t *  @param {node} nTr the table row to check\n\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnIsOpen = function( nTr )\n\t\t{\n\t\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will place a new row directly after a row which is currently\n\t\t * on display on the page, with the HTML contents that is passed into the\n\t\t * function. This can be used, for example, to ask for confirmation that a\n\t\t * particular record should be deleted.\n\t\t *  @param {node} nTr The table row to 'open'\n\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t *    first parameter, is not found in the table, this method will silently\n\t\t *    return.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t\t{\n\t\t\treturn this.api( true )\n\t\t\t\t.row( nTr )\n\t\t\t\t.child( mHtml, sClass )\n\t\t\t\t.show()\n\t\t\t\t.child()[0];\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t\t * function. With this function you can have a DataTables table go to the next,\n\t\t * previous, first or last pages.\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnPageChange = function ( mAction, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).page( mAction );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw(false);\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Show a particular column\n\t\t *  @param {int} iCol The column whose display should be changed\n\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.columns.adjust().draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the settings for a particular table for external manipulation\n\t\t *  @returns {object} DataTables settings object. See\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *\n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSettings = function()\n\t\t{\n\t\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Sort the table by a particular column\n\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t\t *    'display index' if you have hidden data entries\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSort = function( aaSort )\n\t\t{\n\t\t\tthis.api( true ).order( aaSort ).draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t\t{\n\t\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t * update the cell with, an array of values with one element for each column or\n\t\t * an object in the same format as the original data source. The function is\n\t\t * self-referencing in order to make the multi column updates easier.\n\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t\t *    update a whole row.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t *  @returns {int} 0 on success, 1 on error\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t *    } );\n\t\t */\n\t\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\t\tapi.row( mRow ).data( mData );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t\t}\n\t\t\n\t\t\tif ( bAction === undefined || bAction ) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t * to ensure compatibility.\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t *    version, or false if this version of DataTales is not suitable\n\t\t *  @method\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\t\n\n\t\tvar _that = this;\n\t\tvar emptyInit = options === undefined;\n\t\tvar len = this.length;\n\n\t\tif ( emptyInit ) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tthis.oApi = this.internal = _ext.internal;\n\n\t\t// Extend with old style plug-in API methods\n\t\tfor ( var fn in DataTable.ext.internal ) {\n\t\t\tif ( fn ) {\n\t\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t\t}\n\t\t}\n\n\t\tthis.each(function() {\n\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t// object that can be bashed around\n\t\t\tvar o = {};\n\t\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t\t_fnExtend( o, options, true ) :\n\t\t\t\toptions;\n\n\t\t\t/*global oInit,_that,emptyInit*/\n\t\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\t\tvar sId = this.getAttribute( 'id' );\n\t\t\tvar bInitHandedOff = false;\n\t\t\tvar defaults = DataTable.defaults;\n\t\t\tvar $this = $(this);\n\t\t\t\n\t\t\t\n\t\t\t/* Sanity check */\n\t\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t\t{\n\t\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t_fnCompatOpts( defaults );\n\t\t\t_fnCompatCols( defaults.column );\n\t\t\t\n\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\t\n\t\t\t/* Setting up the initialisation object */\n\t\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ) );\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tvar allSettings = DataTable.settings;\n\t\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar s = allSettings[i];\n\t\t\t\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif ( s.nTable == this || s.nTHead.parentNode == this || (s.nTFoot && s.nTFoot.parentNode == this) )\n\t\t\t\t{\n\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\t\n\t\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( bDestroy )\n\t\t\t\t\t{\n\t\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif ( s.sTableId == this.id )\n\t\t\t\t{\n\t\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif ( sId === null || sId === \"\" )\n\t\t\t{\n\t\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\t\t\t\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId\n\t\t\t} );\n\t\t\toSettings.nTable = this;\n\t\t\toSettings.oApi   = _that.internal;\n\t\t\toSettings.oInit  = oInit;\n\t\t\t\n\t\t\tallSettings.push( oSettings );\n\t\t\t\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\t\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t_fnCompatOpts( oInit );\n\t\t\t\n\t\t\tif ( oInit.oLanguage )\n\t\t\t{\n\t\t\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\t}\n\t\t\t\n\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t\t{\n\t\t\t\toInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t\t}\n\t\t\t\n\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t// options defined from defaults and instance options.\n\t\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\t\n\t\t\t\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\t\"bPaginate\",\n\t\t\t\t\"bLengthChange\",\n\t\t\t\t\"bFilter\",\n\t\t\t\t\"bSort\",\n\t\t\t\t\"bSortMulti\",\n\t\t\t\t\"bInfo\",\n\t\t\t\t\"bProcessing\",\n\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\"bSortClasses\",\n\t\t\t\t\"bServerSide\",\n\t\t\t\t\"bDeferRender\"\n\t\t\t] );\n\t\t\t_fnMap( oSettings, oInit, [\n\t\t\t\t\"asStripeClasses\",\n\t\t\t\t\"ajax\",\n\t\t\t\t\"fnServerData\",\n\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\"sServerMethod\",\n\t\t\t\t\"aaSorting\",\n\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\"sPaginationType\",\n\t\t\t\t\"sAjaxSource\",\n\t\t\t\t\"sAjaxDataProp\",\n\t\t\t\t\"iStateDuration\",\n\t\t\t\t\"sDom\",\n\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\"iTabIndex\",\n\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\"renderer\",\n\t\t\t\t\"searchDelay\",\n\t\t\t\t\"rowId\",\n\t\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ],\n\t\t\t\t[ \"bJQueryUI\", \"bJUI\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\t\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\t\n\t\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\t\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect( oSettings );\n\t\t\t\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\n\t\t\t// @todo Remove in 1.11\n\t\t\tif ( oInit.bJQueryUI )\n\t\t\t{\n\t\t\t\t/* Use the JUI classes object for display. You could clone the oStdClasses object if\n\t\t\t\t * you want to have multiple tables with multiple independent classes\n\t\t\t\t */\n\t\t\t\t$.extend( oClasses, DataTable.ext.oJUIClasses, oInit.oClasses );\n\t\t\t\n\t\t\t\tif ( oInit.sDom === defaults.sDom && defaults.sDom === \"lfrtip\" )\n\t\t\t\t{\n\t\t\t\t\t/* Set the DOM to use a layout suitable for jQuery UI's theming */\n\t\t\t\t\toSettings.sDom = '<\"H\"lfr>t<\"F\"ip>';\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif ( ! oSettings.renderer ) {\n\t\t\t\t\toSettings.renderer = 'jqueryui';\n\t\t\t\t}\n\t\t\t\telse if ( $.isPlainObject( oSettings.renderer ) && ! oSettings.renderer.header ) {\n\t\t\t\t\toSettings.renderer.header = 'jqueryui';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t\t}\n\t\t\t$this.addClass( oClasses.sTable );\n\t\t\t\n\t\t\t\n\t\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t\t{\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oInit.iDeferLoading !== null )\n\t\t\t{\n\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\tvar tmp = $.isArray( oInit.iDeferLoading );\n\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t}\n\t\t\t\n\t\t\t/* Language definitions */\n\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\t\n\t\t\tif ( oLanguage.sUrl !== \"\" )\n\t\t\t{\n\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t */\n\t\t\t\t$.ajax( {\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t\t$.extend( true, oLanguage, json );\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbInitHandedOff = true;\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Stripes\n\t\t\t */\n\t\t\tif ( oInit.asStripeClasses === null )\n\t\t\t{\n\t\t\t\toSettings.asStripeClasses =[\n\t\t\t\t\toClasses.sStripeOdd,\n\t\t\t\t\toClasses.sStripeEven\n\t\t\t\t];\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\t\treturn rowOne.hasClass(el);\n\t\t\t} ) ) !== -1 ) {\n\t\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar anThs = [];\n\t\t\tvar aoColumnsInit;\n\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\tif ( nThead.length !== 0 )\n\t\t\t{\n\t\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\tif ( oInit.aoColumns === null )\n\t\t\t{\n\t\t\t\taoColumnsInit = [];\n\t\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoColumnsInit.push( null );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t}\n\t\t\t\n\t\t\t/* Add the columns */\n\t\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t\t}\n\t\t\t\n\t\t\t/* Apply the column definitions */\n\t\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t\t} );\n\t\t\t\n\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t * attributes are found\n\t\t\t */\n\t\t\tif ( rowOne.length ) {\n\t\t\t\tvar a = function ( cell, name ) {\n\t\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t\t};\n\t\t\t\n\t\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\t\n\t\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\t\n\t\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t\t};\n\t\t\t\n\t\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\tvar features = oSettings.oFeatures;\n\t\t\t\n\t\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t\tif ( oInit.bStateSave )\n\t\t\t{\n\t\t\t\tfeatures.bStateSave = true;\n\t\t\t\t_fnLoadState( oSettings, oInit );\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t/*\n\t\t\t * Sorting\n\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t */\n\t\t\t\n\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\tif ( oInit.aaSorting === undefined )\n\t\t\t{\n\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t */\n\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\n\t\t\tif ( features.bSort )\n\t\t\t{\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\t\n\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t} );\n\t\t\t\n\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t}\n\t\t\t}, 'sc' );\n\t\t\t\n\t\t\t\n\t\t\t/*\n\t\t\t * Final init\n\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t */\n\t\t\t\n\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\tthis._captionSide = $this.css('caption-side');\n\t\t\t} );\n\t\t\t\n\t\t\tvar thead = $this.children('thead');\n\t\t\tif ( thead.length === 0 )\n\t\t\t{\n\t\t\t\tthead = $('<thead/>').appendTo(this);\n\t\t\t}\n\t\t\toSettings.nTHead = thead[0];\n\t\t\t\n\t\t\tvar tbody = $this.children('tbody');\n\t\t\tif ( tbody.length === 0 )\n\t\t\t{\n\t\t\t\ttbody = $('<tbody/>').appendTo(this);\n\t\t\t}\n\t\t\toSettings.nTBody = tbody[0];\n\t\t\t\n\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") )\n\t\t\t{\n\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\ttfoot = $('<tfoot/>').appendTo(this);\n\t\t\t}\n\t\t\t\n\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t}\n\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t}\n\t\t\t\n\t\t\t/* Check if there is data passing into the constructor */\n\t\t\tif ( oInit.aaData )\n\t\t\t{\n\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' )\n\t\t\t{\n\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t * to replace it with Ajax data\n\t\t\t\t */\n\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t}\n\t\t\t\n\t\t\t/* Copy the data index array */\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\toSettings.bInitialised = true;\n\t\t\t\n\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t * language processor)\n\t\t\t */\n\t\t\tif ( bInitHandedOff === false )\n\t\t\t{\n\t\t\t\t_fnInitialise( oSettings );\n\t\t\t}\n\t\t} );\n\t\t_that = null;\n\t\treturn this;\n\t};\n\n\t\n\t\n\t/**\n\t * Computed structure of the DataTables API, defined by the options passed to\n\t * `DataTable.Api.register()` when building the API.\n\t *\n\t * The structure is built in order to speed creation and extension of the Api\n\t * objects since the extensions are effectively pre-parsed.\n\t *\n\t * The array is an array of objects with the following structure, where this\n\t * base array represents the Api prototype base:\n\t *\n\t *     [\n\t *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n\t *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n\t *     ]\n\t *\n\t * @type {Array}\n\t * @ignore\n\t */\n\tvar __apiStruct = [];\n\t\n\t\n\t/**\n\t * `Array.prototype` reference.\n\t *\n\t * @type object\n\t * @ignore\n\t */\n\tvar __arrayProto = Array.prototype;\n\t\n\t\n\t/**\n\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t * take several different forms for ease of use.\n\t *\n\t * Each of the input parameter types will be converted to a DataTables settings\n\t * object where possible.\n\t *\n\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t *   of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t *   * `DataTables.Api` - API instance\n\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t *   `undefined` is returned if no matching DataTable is found.\n\t * @ignore\n\t */\n\tvar _toSettings = function ( mixed )\n\t{\n\t\tvar idx, jq;\n\t\tvar settings = DataTable.settings;\n\t\tvar tables = $.map( settings, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\tif ( ! mixed ) {\n\t\t\treturn [];\n\t\t}\n\t\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t\t// DataTables settings object\n\t\t\treturn [ mixed ];\n\t\t}\n\t\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t\t// Table node\n\t\t\tidx = $.inArray( mixed, tables );\n\t\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t\t}\n\t\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\t\treturn mixed.settings().toArray();\n\t\t}\n\t\telse if ( typeof mixed === 'string' ) {\n\t\t\t// jQuery selector\n\t\t\tjq = $(mixed);\n\t\t}\n\t\telse if ( mixed instanceof $ ) {\n\t\t\t// jQuery object (also DataTables instance)\n\t\t\tjq = mixed;\n\t\t}\n\t\n\t\tif ( jq ) {\n\t\t\treturn jq.map( function(i) {\n\t\t\t\tidx = $.inArray( this, tables );\n\t\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t\t} ).toArray();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * DataTables API class - used to control and interface with  one or more\n\t * DataTables enhanced tables.\n\t *\n\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t * that you can use to interact with tables. Each instance of the API class has\n\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t * table, all tables on a page or a sub-set thereof.\n\t *\n\t * Additionally the API is designed to allow you to easily work with the data in\n\t * the tables, retrieving and manipulating it as required. This is done by\n\t * presenting the API class as an array like interface. The contents of the\n\t * array depend upon the actions requested by each method (for example\n\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t * return an array of objects or arrays depending upon your table's\n\t * configuration). The API object has a number of array like methods (`push`,\n\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t * `unique` etc) to assist your working with the data held in a table.\n\t *\n\t * Most methods (those which return an Api instance) are chainable, which means\n\t * the return from a method call also has all of the methods available that the\n\t * top level object had. For example, these two calls are equivalent:\n\t *\n\t *     // Not chained\n\t *     api.row.add( {...} );\n\t *     api.draw();\n\t *\n\t *     // Chained\n\t *     api.row.add( {...} ).draw();\n\t *\n\t * @class DataTable.Api\n\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t *   used to define which DataTables enhanced tables this API will operate on.\n\t *   Can be one of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t * @param {array} [data] Data to initialise the Api instance with.\n\t *\n\t * @example\n\t *   // Direct initialisation during DataTables construction\n\t *   var api = $('#example').DataTable();\n\t *\n\t * @example\n\t *   // Initialisation using a DataTables jQuery object\n\t *   var api = $('#example').dataTable().api();\n\t *\n\t * @example\n\t *   // Initialisation as a constructor\n\t *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n\t */\n\t_Api = function ( context, data )\n\t{\n\t\tif ( ! (this instanceof _Api) ) {\n\t\t\treturn new _Api( context, data );\n\t\t}\n\t\n\t\tvar settings = [];\n\t\tvar ctxSettings = function ( o ) {\n\t\t\tvar a = _toSettings( o );\n\t\t\tif ( a ) {\n\t\t\t\tsettings = settings.concat( a );\n\t\t\t}\n\t\t};\n\t\n\t\tif ( $.isArray( context ) ) {\n\t\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tctxSettings( context[i] );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tctxSettings( context );\n\t\t}\n\t\n\t\t// Remove duplicates\n\t\tthis.context = _unique( settings );\n\t\n\t\t// Initial data\n\t\tif ( data ) {\n\t\t\t$.merge( this, data );\n\t\t}\n\t\n\t\t// selector\n\t\tthis.selector = {\n\t\t\trows: null,\n\t\t\tcols: null,\n\t\t\topts: null\n\t\t};\n\t\n\t\t_Api.extend( this, this, __apiStruct );\n\t};\n\t\n\tDataTable.Api = _Api;\n\t\n\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t// isPlainObject.\n\t$.extend( _Api.prototype, {\n\t\tany: function ()\n\t\t{\n\t\t\treturn this.count() !== 0;\n\t\t},\n\t\n\t\n\t\tconcat:  __arrayProto.concat,\n\t\n\t\n\t\tcontext: [], // array of table settings objects\n\t\n\t\n\t\tcount: function ()\n\t\t{\n\t\t\treturn this.flatten().length;\n\t\t},\n\t\n\t\n\t\teach: function ( fn )\n\t\t{\n\t\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\t\tfn.call( this, this[i], i, this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\teq: function ( idx )\n\t\t{\n\t\t\tvar ctx = this.context;\n\t\n\t\t\treturn ctx.length > idx ?\n\t\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\t\tnull;\n\t\t},\n\t\n\t\n\t\tfilter: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.filter ) {\n\t\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\t\ta.push( this[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tflatten: function ()\n\t\t{\n\t\t\tvar a = [];\n\t\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t\t},\n\t\n\t\n\t\tjoin:    __arrayProto.join,\n\t\n\t\n\t\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t\t{\n\t\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( this[i] === obj ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\t\n\t\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\t\tvar\n\t\t\t\ta = [], ret,\n\t\t\t\ti, ien, j, jen,\n\t\t\t\tcontext = this.context,\n\t\t\t\trows, items, item,\n\t\t\t\tselector = this.selector;\n\t\n\t\t\t// Argument shifting\n\t\t\tif ( typeof flatten === 'string' ) {\n\t\t\t\talwaysNew = fn;\n\t\t\t\tfn = type;\n\t\t\t\ttype = flatten;\n\t\t\t\tflatten = false;\n\t\t\t}\n\t\n\t\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tvar apiInst = new _Api( context[i] );\n\t\n\t\t\t\tif ( type === 'table' ) {\n\t\t\t\t\tret = fn.call( apiInst, context[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\titems = this[i];\n\t\n\t\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\t\titem = items[j];\n\t\n\t\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( a.length || alwaysNew ) {\n\t\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\treturn api;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t\t{\n\t\t\t// Bit cheeky...\n\t\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t\t},\n\t\n\t\n\t\tlength:  0,\n\t\n\t\n\t\tmap: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.map ) {\n\t\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tpluck: function ( prop )\n\t\t{\n\t\t\treturn this.map( function ( el ) {\n\t\t\t\treturn el[ prop ];\n\t\t\t} );\n\t\t},\n\t\n\t\tpop:     __arrayProto.pop,\n\t\n\t\n\t\tpush:    __arrayProto.push,\n\t\n\t\n\t\t// Does not return an API instance\n\t\treduce: __arrayProto.reduce || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t\t},\n\t\n\t\n\t\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t\t},\n\t\n\t\n\t\treverse: __arrayProto.reverse,\n\t\n\t\n\t\t// Object with rows, columns and opts\n\t\tselector: null,\n\t\n\t\n\t\tshift:   __arrayProto.shift,\n\t\n\t\n\t\tsort:    __arrayProto.sort, // ? name - order?\n\t\n\t\n\t\tsplice:  __arrayProto.splice,\n\t\n\t\n\t\ttoArray: function ()\n\t\t{\n\t\t\treturn __arrayProto.slice.call( this );\n\t\t},\n\t\n\t\n\t\tto$: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\ttoJQuery: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\tunique: function ()\n\t\t{\n\t\t\treturn new _Api( this.context, _unique(this) );\n\t\t},\n\t\n\t\n\t\tunshift: __arrayProto.unshift\n\t} );\n\t\n\t\n\t_Api.extend = function ( scope, obj, ext )\n\t{\n\t\t// Only extend API instances and static properties of the API\n\t\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\tj, jen,\n\t\t\tstruct, inner,\n\t\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\t\treturn function () {\n\t\t\t\t\tvar ret = fn.apply( scope, arguments );\n\t\n\t\t\t\t\t// Method extension\n\t\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\t\t\t};\n\t\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tstruct = ext[i];\n\t\n\t\t\t// Value\n\t\t\tobj[ struct.name ] = typeof struct.val === 'function' ?\n\t\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\t\t$.isPlainObject( struct.val ) ?\n\t\t\t\t\t{} :\n\t\t\t\t\tstruct.val;\n\t\n\t\t\tobj[ struct.name ].__dt_wrapper = true;\n\t\n\t\t\t// Property extension\n\t\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t\t}\n\t};\n\t\n\t\n\t// @todo - Is there need for an augment function?\n\t// _Api.augment = function ( inst, name )\n\t// {\n\t// \t// Find src object in the structure from the name\n\t// \tvar parts = name.split('.');\n\t\n\t// \t_Api.extend( inst, obj );\n\t// };\n\t\n\t\n\t//     [\n\t//       {\n\t//         name:      'data'                -- string   - Property name\n\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t//       },\n\t//       {\n\t//         name:     'row'\n\t//         val:       {},\n\t//         methodExt: [ ... ],\n\t//         propExt:   [\n\t//           {\n\t//             name:      'data'\n\t//             val:       function () {},\n\t//             methodExt: [ ... ],\n\t//             propExt:   [ ... ]\n\t//           },\n\t//           ...\n\t//         ]\n\t//       }\n\t//     ]\n\t\n\t_Api.register = _api_register = function ( name, val )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t\t_Api.register( name[j], val );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\their = name.split('.'),\n\t\t\tstruct = __apiStruct,\n\t\t\tkey, method;\n\t\n\t\tvar find = function ( src, name ) {\n\t\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\t\tif ( src[i].name === name ) {\n\t\t\t\t\treturn src[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\n\t\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\tkey = method ?\n\t\t\t\their[i].replace('()', '') :\n\t\t\t\their[i];\n\t\n\t\t\tvar src = find( struct, key );\n\t\t\tif ( ! src ) {\n\t\t\t\tsrc = {\n\t\t\t\t\tname:      key,\n\t\t\t\t\tval:       {},\n\t\t\t\t\tmethodExt: [],\n\t\t\t\t\tpropExt:   []\n\t\t\t\t};\n\t\t\t\tstruct.push( src );\n\t\t\t}\n\t\n\t\t\tif ( i === ien-1 ) {\n\t\t\t\tsrc.val = val;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstruct = method ?\n\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\tsrc.propExt;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\t_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t\t_Api.register( pluralName, val );\n\t\n\t\t_Api.register( singularName, function () {\n\t\t\tvar ret = val.apply( this, arguments );\n\t\n\t\t\tif ( ret === this ) {\n\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\telse if ( ret instanceof _Api ) {\n\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t// in the returned array for the singular result.\n\t\t\t\treturn ret.length ?\n\t\t\t\t\t$.isArray( ret[0] ) ?\n\t\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\t\tret[0] :\n\t\t\t\t\tundefined;\n\t\t\t}\n\t\n\t\t\t// Non-API return - just fire it back\n\t\t\treturn ret;\n\t\t} );\n\t};\n\t\n\t\n\t/**\n\t * Selector for HTML tables. Apply the given selector to the give array of\n\t * DataTables settings objects.\n\t *\n\t * @param {string|integer} [selector] jQuery selector string or integer\n\t * @param  {array} Array of DataTables settings objects to be filtered\n\t * @return {array}\n\t * @ignore\n\t */\n\tvar __table_selector = function ( selector, a )\n\t{\n\t\t// Integer is used to pick out a table by index\n\t\tif ( typeof selector === 'number' ) {\n\t\t\treturn [ a[ selector ] ];\n\t\t}\n\t\n\t\t// Perform a jQuery selector on the table nodes\n\t\tvar nodes = $.map( a, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\treturn $(nodes)\n\t\t\t.filter( selector )\n\t\t\t.map( function (i) {\n\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\t\treturn a[ idx ];\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\t\n\t\n\t\n\t/**\n\t * Context selector for the API's context (i.e. the tables the API instance\n\t * refers to.\n\t *\n\t * @name    DataTable.Api#tables\n\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t *   should operate on. If not given, all tables in the current context are\n\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t *   select multiple tables or as an integer to select a single table.\n\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t */\n\t_api_register( 'tables()', function ( selector ) {\n\t\t// A new instance is created if there was a selector specified\n\t\treturn selector ?\n\t\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\t\tthis;\n\t} );\n\t\n\t\n\t_api_register( 'table()', function ( selector ) {\n\t\tvar tables = this.tables( selector );\n\t\tvar ctx = tables.context;\n\t\n\t\t// Truncate to the first matched table\n\t\treturn ctx.length ?\n\t\t\tnew _Api( ctx[0] ) :\n\t\t\ttables;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTable;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTBody;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTHead;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTFoot;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTableWrapper;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Redraw the tables in the current context.\n\t */\n\t_api_register( 'draw()', function ( paging ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( paging === 'page' ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\tfalse :\n\t\t\t\t\t\ttrue;\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, paging===false );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get the current page index.\n\t *\n\t * @return {integer} Current page index (zero based)\n\t *//**\n\t * Set the current page.\n\t *\n\t * Note that if you attempt to show a page which does not exist, DataTables will\n\t * not throw an error, but rather reset the paging.\n\t *\n\t * @param {integer|string} action The paging action to take. This can be one of:\n\t *  * `integer` - The page index to jump to\n\t *  * `string` - An action to take:\n\t *    * `first` - Jump to first page.\n\t *    * `next` - Jump to the next page\n\t *    * `previous` - Jump to previous page\n\t *    * `last` - Jump to the last page.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page()', function ( action ) {\n\t\tif ( action === undefined ) {\n\t\t\treturn this.page.info().page; // not an expensive call\n\t\t}\n\t\n\t\t// else, have an action to take on all tables\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnPageChange( settings, action );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Paging information for the first table in the current context.\n\t *\n\t * If you require paging information for another table, use the `table()` method\n\t * with a suitable selector.\n\t *\n\t * @return {object} Object with the following properties set:\n\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t *  * `pages` - Total number of pages\n\t *  * `start` - Display index for the first record shown on the current page\n\t *  * `end` - Display index for the last record shown on the current page\n\t *  * `length` - Display length (number of records). Note that generally `start\n\t *    + length = end`, but this is not always true, for example if there are\n\t *    only 2 records to show on the final page, with a length of 10.\n\t *  * `recordsTotal` - Full data set length\n\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t *    are applied.\n\t */\n\t_api_register( 'page.info()', function ( action ) {\n\t\tif ( this.context.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\n\t\tvar\n\t\t\tsettings   = this.context[0],\n\t\t\tstart      = settings._iDisplayStart,\n\t\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn {\n\t\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\"start\":          start,\n\t\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\t\"length\":         len,\n\t\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t\t};\n\t} );\n\t\n\t\n\t/**\n\t * Get the current page length.\n\t *\n\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t *   are to be shown.\n\t *//**\n\t * Set the current page length.\n\t *\n\t * @param {integer} Page length to set. Use `-1` to show all records.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page.len()', function ( len ) {\n\t\t// Note that we can't call this function 'length()' because `length`\n\t\t// is a Javascript property of functions which defines how many arguments\n\t\t// the function expects.\n\t\tif ( len === undefined ) {\n\t\t\treturn this.context.length !== 0 ?\n\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// else, set the page length\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnLengthChange( settings, len );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\tvar __reload = function ( settings, holdPosition, callback ) {\n\t\t// Use the draw event to trigger a callback\n\t\tif ( callback ) {\n\t\t\tvar api = new _Api( settings );\n\t\n\t\t\tapi.one( 'draw', function () {\n\t\t\t\tcallback( api.ajax.json() );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t// Cancel an existing request\n\t\t\tvar xhr = settings.jqXHR;\n\t\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\t\txhr.abort();\n\t\t\t}\n\t\n\t\t\t// Trigger xhr\n\t\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t\t_fnClearTable( settings );\n\t\n\t\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t * server. Note that this returns the JSON from the first table in the current\n\t * context.\n\t *\n\t * @return {object} JSON received from the server.\n\t */\n\t_api_register( 'ajax.json()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].json;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Get the data submitted in the last Ajax request\n\t */\n\t_api_register( 'ajax.params()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].oAjaxData;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Reload tables from the Ajax data source. Note that this function will\n\t * automatically re-draw the table when the remote data has been loaded.\n\t *\n\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t *   position. A full re-sort and re-filter is performed when this method is\n\t *   called, which is why the pagination reset is the default action.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\t\treturn this.iterator( 'table', function (settings) {\n\t\t\t__reload( settings, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t * table in the current context.\n\t *\n\t * @return {string} Current Ajax source URL\n\t *//**\n\t * Set the Ajax URL. Note that this will set the URL for all tables in the\n\t * current context.\n\t *\n\t * @param {string} url URL to set.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url()', function ( url ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( url === undefined ) {\n\t\t\t// get\n\t\t\tif ( ctx.length === 0 ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tctx = ctx[0];\n\t\n\t\t\treturn ctx.ajax ?\n\t\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\t\tctx.ajax.url :\n\t\t\t\t\tctx.ajax :\n\t\t\t\tctx.sAjaxSource;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\t\tsettings.ajax.url = url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings.ajax = url;\n\t\t\t}\n\t\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t\t// value of `sAjaxSource` redundant.\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Load data from the newly set Ajax URL. Note that this method is only\n\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t * has the same effect as calling `ajax.reload()` but is provided for\n\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t * automatically redraw the table once the remote data has been loaded.\n\t *\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t// url change\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t__reload( ctx, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t\n\tvar _selector_run = function ( type, selector, selectFn, settings, opts )\n\t{\n\t\tvar\n\t\t\tout = [], res,\n\t\t\ta, i, ien, j, jen,\n\t\t\tselectorType = typeof selector;\n\t\n\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t// given with their array like look\n\t\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\t\tselector = [ selector ];\n\t\t}\n\t\n\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\ta = selector[i] && selector[i].split ?\n\t\t\t\tselector[i].split(',') :\n\t\t\t\t[ selector[i] ];\n\t\n\t\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\t\tres = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );\n\t\n\t\t\t\tif ( res && res.length ) {\n\t\t\t\t\tout = out.concat( res );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// selector extensions\n\t\tvar ext = _ext.selector[ type ];\n\t\tif ( ext.length ) {\n\t\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\t\tout = ext[i]( settings, opts, out );\n\t\t\t}\n\t\t}\n\t\n\t\treturn _unique( out );\n\t};\n\t\n\t\n\tvar _selector_opts = function ( opts )\n\t{\n\t\tif ( ! opts ) {\n\t\t\topts = {};\n\t\t}\n\t\n\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t// than search\n\t\tif ( opts.filter && opts.search === undefined ) {\n\t\t\topts.search = opts.filter;\n\t\t}\n\t\n\t\treturn $.extend( {\n\t\t\tsearch: 'none',\n\t\t\torder: 'current',\n\t\t\tpage: 'all'\n\t\t}, opts );\n\t};\n\t\n\t\n\tvar _selector_first = function ( inst )\n\t{\n\t\t// Reduce the API instance to the first item found\n\t\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\t\tif ( inst[i].length > 0 ) {\n\t\t\t\t// Assign the first element to the first item in the instance\n\t\t\t\t// and truncate the instance and context\n\t\t\t\tinst[0] = inst[i];\n\t\t\t\tinst[0].length = 1;\n\t\t\t\tinst.length = 1;\n\t\t\t\tinst.context = [ inst.context[i] ];\n\t\n\t\t\t\treturn inst;\n\t\t\t}\n\t\t}\n\t\n\t\t// Not found - return an empty instance\n\t\tinst.length = 0;\n\t\treturn inst;\n\t};\n\t\n\t\n\tvar _selector_row_indexes = function ( settings, opts )\n\t{\n\t\tvar\n\t\t\ti, ien, tmp, a=[],\n\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\t\n\t\tvar\n\t\t\tsearch = opts.search,  // none, applied, removed\n\t\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\t\tpage   = opts.page;    // all, current\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t// array\n\t\t\treturn search === 'removed' ?\n\t\t\t\t[] :\n\t\t\t\t_range( 0, displayMaster.length );\n\t\t}\n\t\telse if ( page == 'current' ) {\n\t\t\t// Current page implies that order=current and fitler=applied, since it is\n\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t// are\n\t\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\t\ta.push( displayFiltered[i] );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'current' || order == 'applied' ) {\n\t\t\ta = search == 'none' ?\n\t\t\t\tdisplayMaster.slice() :                      // no search\n\t\t\t\tsearch == 'applied' ?\n\t\t\t\t\tdisplayFiltered.slice() :                // applied search\n\t\t\t\t\t$.map( displayMaster, function (el, i) { // removed search\n\t\t\t\t\t\treturn $.inArray( el, displayFiltered ) === -1 ? el : null;\n\t\t\t\t\t} );\n\t\t}\n\t\telse if ( order == 'index' || order == 'original' ) {\n\t\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tif ( search == 'none' ) {\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t\telse { // applied | removed\n\t\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\t\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t};\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Rows\n\t *\n\t * {}          - no selector - use all available rows\n\t * {integer}   - row aoData index\n\t * {node}      - TR node\n\t * {string}    - jQuery selector to apply to the TR elements\n\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t *\n\t */\n\t\n\t\n\tvar __row_selector = function ( settings, selector, opts )\n\t{\n\t\tvar run = function ( sel ) {\n\t\t\tvar selInt = _intVal( sel );\n\t\t\tvar i, ien;\n\t\n\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\tif ( selInt !== null && ! opts ) {\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\n\t\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t\t// Selector - integer\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\t\telse if ( ! sel ) {\n\t\t\t\t// Selector - none\n\t\t\t\treturn rows;\n\t\t\t}\n\t\n\t\t\t// Selector - function\n\t\t\tif ( typeof sel === 'function' ) {\n\t\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\t\tvar row = settings.aoData[ idx ];\n\t\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t\t);\n\t\n\t\t\t// Selector - node\n\t\t\tif ( sel.nodeName ) {\n\t\t\t\tif ( sel._DT_RowIndex !== undefined ) {\n\t\t\t\t\treturn [ sel._DT_RowIndex ]; // Property added by DT for fast lookup\n\t\t\t\t}\n\t\t\t\telse if ( sel._DT_CellIndex ) {\n\t\t\t\t\treturn [ sel._DT_CellIndex.row ];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t// unescaped.\n\t\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t\t// get row index from id\n\t\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\t\treturn [ rowObj.idx ];\n\t\t\t\t}\n\t\n\t\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t\t// matches\n\t\t\t}\n\t\n\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\treturn $(nodes)\n\t\t\t\t.filter( sel )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\t};\n\t\n\t\treturn _selector_run( 'row', selector, run, settings, opts );\n\t};\n\t\n\t\n\t_api_register( 'rows()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __row_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in __row_selector?\n\t\tinst.selector.rows = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_register( 'rows().nodes()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn settings.aoData[ row ].nTr || undefined;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'rows().data()', function () {\n\t\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\tvar r = settings.aoData[ row ];\n\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\t_fnInvalidate( settings, row, src );\n\t\t} );\n\t} );\n\t\n\t_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn row;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\t\tvar a = [];\n\t\tvar context = this.context;\n\t\n\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new _Api( context, a );\n\t} );\n\t\n\t_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\t\tvar that = this;\n\t\n\t\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rowData = data[ row ];\n\t\t\tvar i, ien, j, jen;\n\t\t\tvar loopRow, loopCells;\n\t\n\t\t\tdata.splice( row, 1 );\n\t\n\t\t\t// Update the cached indexes\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tloopRow = data[i];\n\t\t\t\tloopCells = loopRow.anCells;\n\t\n\t\t\t\t// Rows\n\t\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t\t}\n\t\n\t\t\t\t// Cells\n\t\t\t\tif ( loopCells !== null ) {\n\t\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Delete from the display arrays\n\t\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\t\n\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t_fnLengthOverflow( settings );\n\t\n\t\t\t// Remove the row's ID reference if there is one\n\t\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\t\tif ( id !== undefined ) {\n\t\t\t\tdelete settings.aIds[ id ];\n\t\t\t}\n\t\t} );\n\t\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tsettings.aoData[i].idx = i;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'rows.add()', function ( rows ) {\n\t\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn out;\n\t\t\t}, 1 );\n\t\n\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\tvar modRows = this.rows( -1 );\n\t\tmodRows.pop();\n\t\t$.merge( modRows, newRows );\n\t\n\t\treturn modRows;\n\t} );\n\t\n\t\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( 'row()', function ( selector, opts ) {\n\t\treturn _selector_first( this.rows( selector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'row().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\tctx[0].aoData[ this[0] ]._aData = data;\n\t\n\t\t// Automatically invalidate\n\t\t_fnInvalidate( ctx[0], this[0], 'data' );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'row().node()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'row.add()', function ( row ) {\n\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t// it though - the first element in the set\n\t\tif ( row instanceof $ && row.length ) {\n\t\t\trow = row[0];\n\t\t}\n\t\n\t\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t\t}\n\t\t\treturn _fnAddData( settings, row );\n\t\t} );\n\t\n\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\treturn this.row( rows[0] );\n\t} );\n\t\n\t\n\t\n\tvar __details_add = function ( ctx, row, data, klass )\n\t{\n\t\t// Convert to array of TR elements\n\t\tvar rows = [];\n\t\tvar addRow = function ( r, k ) {\n\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\tif ( $.isArray( r ) || r instanceof $ ) {\n\t\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\t\taddRow( r[i], k );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t// to add the correct number of columns etc\n\t\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\trows.push( r );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\tvar created = $('<tr><td/></tr>').addClass( k );\n\t\t\t\t$('td', created)\n\t\t\t\t\t.addClass( k )\n\t\t\t\t\t.html( r )\n\t\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\t\n\t\t\t\trows.push( created[0] );\n\t\t\t}\n\t\t};\n\t\n\t\taddRow( data, klass );\n\t\n\t\tif ( row._details ) {\n\t\t\trow._details.remove();\n\t\t}\n\t\n\t\trow._details = $(rows);\n\t\n\t\t// If the children were already shown, that state should be retained\n\t\tif ( row._detailsShow ) {\n\t\t\trow._details.insertAfter( row.nTr );\n\t\t}\n\t};\n\t\n\t\n\tvar __details_remove = function ( api, idx )\n\t{\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length ) {\n\t\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\t\n\t\t\tif ( row && row._details ) {\n\t\t\t\trow._details.remove();\n\t\n\t\t\t\trow._detailsShow = undefined;\n\t\t\t\trow._details = undefined;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_display = function ( api, show ) {\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length && api.length ) {\n\t\t\tvar row = ctx[0].aoData[ api[0] ];\n\t\n\t\t\tif ( row._details ) {\n\t\t\t\trow._detailsShow = show;\n\t\n\t\t\t\tif ( show ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow._details.detach();\n\t\t\t\t}\n\t\n\t\t\t\t__details_events( ctx[0] );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_events = function ( settings )\n\t{\n\t\tvar api = new _Api( settings );\n\t\tvar namespace = '.dt.DT_details';\n\t\tvar drawEvent = 'draw'+namespace;\n\t\tvar colvisEvent = 'column-visibility'+namespace;\n\t\tvar destroyEvent = 'destroy'+namespace;\n\t\tvar data = settings.aoData;\n\t\n\t\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\t\n\t\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t\t// On each draw, insert the required elements into the document\n\t\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t\t// Internal data grab\n\t\t\t\t\tvar row = data[ idx ];\n\t\n\t\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\n\t\t\t// Column visibility change - update the colspan\n\t\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t// a colspan)\n\t\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = data[i];\n\t\n\t\t\t\t\tif ( row._details ) {\n\t\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\t// Table destroyed - nuke any child rows\n\t\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t// Strings for the method names to help minification\n\tvar _emp = '';\n\tvar _child_obj = _emp+'row().child';\n\tvar _child_mth = _child_obj+'()';\n\t\n\t// data can be:\n\t//  tr\n\t//  string\n\t//  jQuery or array of any of the above\n\t_api_register( _child_mth, function ( data, klass ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\t\tundefined;\n\t\t}\n\t\telse if ( data === true ) {\n\t\t\t// show\n\t\t\tthis.child.show();\n\t\t}\n\t\telse if ( data === false ) {\n\t\t\t// remove\n\t\t\t__details_remove( this );\n\t\t}\n\t\telse if ( ctx.length && this.length ) {\n\t\t\t// set\n\t\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t\t}\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.show()',\n\t\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n\t], function ( show ) {   // it returns an object and this method is not executed)\n\t\t__details_display( this, true );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.hide()',\n\t\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n\t], function () {         // it returns an object and this method is not executed)\n\t\t__details_display( this, false );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.remove()',\n\t\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n\t], function () {           // it returns an object and this method is not executed)\n\t\t__details_remove( this );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( _child_obj+'.isShown()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length && this.length ) {\n\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t\t}\n\t\treturn false;\n\t} );\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Columns\n\t *\n\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t * \"{string}:name\"     - column name\n\t * \"{string}\"          - jQuery selector on column header nodes\n\t *\n\t */\n\t\n\t// can be an array of these items, comma separated list, or an array of comma\n\t// separated lists\n\t\n\tvar __re_column_selector = /^(.+):(name|visIdx|visible)$/;\n\t\n\t\n\t// r1 and r2 are redundant - but it means that the parameters match for the\n\t// iterator callback in columns().data()\n\tvar __columnData = function ( settings, column, r1, r2, rows ) {\n\t\tvar a = [];\n\t\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t\t}\n\t\treturn a;\n\t};\n\t\n\t\n\tvar __column_selector = function ( settings, selector, opts )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tnames = _pluck( columns, 'sName' ),\n\t\t\tnodes = _pluck( columns, 'nTh' );\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar selInt = _intVal( s );\n\t\n\t\t\t// Selector - all\n\t\t\tif ( s === '' ) {\n\t\t\t\treturn _range( columns.length );\n\t\t\t}\n\t\t\t\n\t\t\t// Selector - index\n\t\t\tif ( selInt !== null ) {\n\t\t\t\treturn [ selInt >= 0 ?\n\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t];\n\t\t\t}\n\t\t\t\n\t\t\t// Selector = function\n\t\t\tif ( typeof s === 'function' ) {\n\t\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\n\t\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// jQuery or string selector\n\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\ts.match( __re_column_selector ) :\n\t\t\t\t'';\n\t\n\t\t\tif ( match ) {\n\t\t\t\tswitch( match[2] ) {\n\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cell in the table body\n\t\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t\t}\n\t\n\t\t\t// jQuery selector on the TH elements for the columns\n\t\t\tvar jqResult = $( nodes )\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t// a child or such an element\n\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\treturn host.length ?\n\t\t\t\t[ host.data('dt-column') ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'column', selector, run, settings, opts );\n\t};\n\t\n\t\n\tvar __setColumnVis = function ( settings, column, vis, recalc ) {\n\t\tvar\n\t\t\tcols = settings.aoColumns,\n\t\t\tcol  = cols[ column ],\n\t\t\tdata = settings.aoData,\n\t\t\trow, cells, i, ien, tr;\n\t\n\t\t// Get\n\t\tif ( vis === undefined ) {\n\t\t\treturn col.bVisible;\n\t\t}\n\t\n\t\t// Set\n\t\t// No change\n\t\tif ( col.bVisible === vis ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( vis ) {\n\t\t\t// Insert column\n\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\t\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\t\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Remove column\n\t\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t\t}\n\t\n\t\t// Common actions\n\t\tcol.bVisible = vis;\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\tif ( recalc === undefined || recalc ) {\n\t\t\t// Automatically adjust column sizing\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, recalc] );\n\t\n\t\t_fnSaveState( settings );\n\t};\n\t\n\t\n\t_api_register( 'columns()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __column_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in _row_selector?\n\t\tinst.selector.cols = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTh;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTf;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\t\treturn this.iterator( 'column-rows', __columnData, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].mData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t);\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tif ( vis === undefined ) {\n\t\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t\t} // else\n\t\t\t__setColumnVis( settings, column, vis, calc );\n\t\t} );\n\t} );\n\t\n\t_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn type === 'visible' ?\n\t\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\t\tcolumn;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'columns.adjust()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'column.index()', function ( type, idx ) {\n\t\tif ( this.context.length !== 0 ) {\n\t\t\tvar ctx = this.context[0];\n\t\n\t\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t\t}\n\t\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t_api_register( 'column()', function ( selector, opts ) {\n\t\treturn _selector_first( this.columns( selector, opts ) );\n\t} );\n\t\n\t\n\t\n\t\n\tvar __cell_selector = function ( settings, selector, opts )\n\t{\n\t\tvar data = settings.aoData;\n\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\t\tvar allCells = $( [].concat.apply([], cells) );\n\t\tvar row;\n\t\tvar columns = settings.aoColumns.length;\n\t\tvar a, i, ien, j, o, host;\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar fnSelector = typeof s === 'function';\n\t\n\t\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t\t// All cells and function selectors\n\t\t\t\ta = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\thost = data[ row ];\n\t\n\t\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\t\n\t\t\t// Selector - index\n\t\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t\treturn [s];\n\t\t\t}\n\t\n\t\t\t// Selector - jQuery filtered cells\n\t\t\tvar jqResult = allCells\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function (i, el) {\n\t\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t \t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t// data attributes\n\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\treturn host.length ?\n\t\t\t\t[ {\n\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t} ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'cell', selector, run, settings, opts );\n\t};\n\t\n\t\n\t\n\t\n\t_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t\t// Argument shifting\n\t\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t\t// Indexes\n\t\t\tif ( rowSelector.row === undefined ) {\n\t\t\t\t// Selector options in first parameter\n\t\t\t\topts = rowSelector;\n\t\t\t\trowSelector = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Cell index objects in first parameter\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\t\t}\n\t\tif ( $.isPlainObject( columnSelector ) ) {\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t\n\t\t// Cell selector\n\t\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t\t} );\n\t\t}\n\t\n\t\t// Row + column selector\n\t\tvar columns = this.columns( columnSelector, opts );\n\t\tvar rows = this.rows( rowSelector, opts );\n\t\tvar a, i, ien, j, jen;\n\t\n\t\tvar cells = this.iterator( 'table', function ( settings, idx ) {\n\t\t\ta = [];\n\t\n\t\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\t\ta.push( {\n\t\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn a;\n\t\t}, 1 );\n\t\n\t\t$.extend( cells.selector, {\n\t\t\tcols: columnSelector,\n\t\t\trows: rowSelector,\n\t\t\topts: opts\n\t\t} );\n\t\n\t\treturn cells;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\tvar data = settings.aoData[ row ];\n\t\n\t\t\treturn data && data.anCells ?\n\t\t\t\tdata.anCells[ column ] :\n\t\t\t\tundefined;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_register( 'cells().data()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\t\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn settings.aoData[ row ][ type ][ column ];\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column, type );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t\t};\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\t_fnInvalidate( settings, row, src, column );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\t\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'cell().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\tvar cell = this[0];\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get current ordering (sorting) that has been applied to the table.\n\t *\n\t * @returns {array} 2D array containing the sorting information for the first\n\t *   table in the current context. Each element in the parent array represents\n\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t *   the column index that the sorting condition applies to, the second is the\n\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {integer} order Column index to sort upon.\n\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 1D array of sorting information to be applied.\n\t * @param {array} [...] Optional additional sorting conditions\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 2D array of sorting information to be applied.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order()', function ( order, dir ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( order === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].aaSorting :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\tif ( typeof order === 'number' ) {\n\t\t\t// Simple column / direction passed in\n\t\t\torder = [ [ order, dir ] ];\n\t\t}\n\t\telse if ( ! $.isArray( order[0] ) ) {\n\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\torder = Array.prototype.slice.call( arguments );\n\t\t}\n\t\t// otherwise a 2D array was passed in\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSorting = order.slice();\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *\n\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t * @param {integer} column the column that a click on this node will sort on\n\t * @param {function} [callback] callback function when sort is run\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order.listener()', function ( node, column, callback ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSortAttachListener( settings, node, column, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'order.fixed()', function ( set ) {\n\t\tif ( ! set ) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar fixed = ctx.length ?\n\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\tundefined;\n\t\n\t\t\treturn $.isArray( fixed ) ?\n\t\t\t\t{ pre: fixed } :\n\t\t\t\tfixed;\n\t\t}\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t\t} );\n\t} );\n\t\n\t\n\t// Order by the selected column(s)\n\t_api_register( [\n\t\t'columns().order()',\n\t\t'column().order()'\n\t], function ( dir ) {\n\t\tvar that = this;\n\t\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tvar sort = [];\n\t\n\t\t\t$.each( that[i], function (j, col) {\n\t\t\t\tsort.push( [ col, dir ] );\n\t\t\t} );\n\t\n\t\t\tsettings.aaSorting = sort;\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( input === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} ), 1 );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_registerPlural(\n\t\t'columns().search()',\n\t\t'column().search()',\n\t\tfunction ( input, regex, smart, caseInsen ) {\n\t\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\t\n\t\t\t\tif ( input === undefined ) {\n\t\t\t\t\t// get\n\t\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t\t}\n\t\n\t\t\t\t// set\n\t\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\n\t\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t\t} );\n\t\t}\n\t);\n\t\n\t/*\n\t * State API methods\n\t */\n\t\n\t_api_register( 'state()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t// Save an empty object\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'state.loaded()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oLoadedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.save()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSaveState( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being\n\t * used, in order to ensure compatibility.\n\t *\n\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t *    the required version, or false if this version of DataTales is not\n\t *    suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t */\n\tDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n\t{\n\t\tvar aThis = DataTable.version.split('.');\n\t\tvar aThat = version.split('.');\n\t\tvar iThis, iThat;\n\t\n\t\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\t\n\t\t\t// Parts are the same, keep comparing\n\t\t\tif (iThis === iThat) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\t// Parts are different, return immediately\n\t\t\treturn iThis > iThat;\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Check if a `<table>` node is a DataTable table already or not.\n\t *\n\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t *      selector for the table to test. Note that if more than more than one\n\t *      table is passed on, only the first will be checked\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n\t */\n\tDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n\t{\n\t\tvar t = $(table).get(0);\n\t\tvar is = false;\n\t\n\t\t$.each( DataTable.settings, function (i, o) {\n\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\t\n\t\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\t\tis = true;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn is;\n\t};\n\t\n\t\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can\n\t * select to get only currently visible tables.\n\t *\n\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t *    or visible tables only.\n\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t *    DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n\t */\n\tDataTable.tables = DataTable.fnTables = function ( visible )\n\t{\n\t\tvar api = false;\n\t\n\t\tif ( $.isPlainObject( visible ) ) {\n\t\t\tapi = visible.api;\n\t\t\tvisible = visible.visible;\n\t\t}\n\t\n\t\tvar a = $.map( DataTable.settings, function (o) {\n\t\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\t\treturn o.nTable;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn api ?\n\t\t\tnew _Api( a ) :\n\t\t\ta;\n\t};\n\t\n\t\n\t/**\n\t * DataTables utility methods\n\t * \n\t * This namespace provides helper methods that DataTables uses internally to\n\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t * These methods can be used by extension authors to save the duplication of\n\t * code.\n\t *\n\t *  @namespace\n\t */\n\tDataTable.util = {\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t * for the throttled function.\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tthrottle: _fnThrottle,\n\t\n\t\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *\n\t\t *  @param {string} sVal string to escape\n\t\t *  @returns {string} escaped string\n\t\t */\n\t\tescapeRegex: _fnEscapeRegex\n\t};\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t * for the extensions to provide the same ability as DataTables core to accept\n\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t * parameters.\n\t *\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t */\n\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( '$()', function ( selector, opts ) {\n\t\tvar\n\t\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\t\tjqRows = $(rows);\n\t\n\t\treturn $( [].concat(\n\t\t\tjqRows.filter( selector ).toArray(),\n\t\t\tjqRows.find( selector ).toArray()\n\t\t) );\n\t} );\n\t\n\t\n\t// jQuery functions to operate on the tables\n\t$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\n\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\tif ( ! args[0].match(/\\.dt\\b/) ) {\n\t\t\t\targs[0] += '.dt';\n\t\t\t}\n\t\n\t\t\tvar inst = $( this.tables().nodes() );\n\t\t\tinst[key].apply( inst, args );\n\t\t\treturn this;\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnClearTable( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'settings()', function () {\n\t\treturn new _Api( this.context, this.context );\n\t} );\n\t\n\t\n\t_api_register( 'init()', function () {\n\t\tvar ctx = this.context;\n\t\treturn ctx.length ? ctx[0].oInit : null;\n\t} );\n\t\n\t\n\t_api_register( 'data()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn _pluck( settings.aoData, '_aData' );\n\t\t} ).flatten();\n\t} );\n\t\n\t\n\t_api_register( 'destroy()', function ( remove ) {\n\t\tremove = remove || false;\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tvar orig      = settings.nTableWrapper.parentNode;\n\t\t\tvar classes   = settings.oClasses;\n\t\t\tvar table     = settings.nTable;\n\t\t\tvar tbody     = settings.nTBody;\n\t\t\tvar thead     = settings.nTHead;\n\t\t\tvar tfoot     = settings.nTFoot;\n\t\t\tvar jqTable   = $(table);\n\t\t\tvar jqTbody   = $(tbody);\n\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\t\tvar i, ien;\n\t\n\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t// should be taken\n\t\t\tsettings.bDestroying = true;\n\t\n\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\t\n\t\t\t// If not being removed from the document, make all columns visible\n\t\t\tif ( ! remove ) {\n\t\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t\t}\n\t\n\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t// for removing them\n\t\t\tjqWrapper.unbind('.DT').find(':not(tbody *)').unbind('.DT');\n\t\t\t$(window).unbind('.DT-'+settings.sInstance);\n\t\n\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\tif ( table != thead.parentNode ) {\n\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\tjqTable.append( thead );\n\t\t\t}\n\t\n\t\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\tjqTable.append( tfoot );\n\t\t\t}\n\t\n\t\t\tsettings.aaSorting = [];\n\t\t\tsettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses( settings );\n\t\n\t\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\t\n\t\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t\t);\n\t\n\t\t\tif ( settings.bJUI ) {\n\t\t\t\t$('th span.'+classes.sSortIcon+ ', td span.'+classes.sSortIcon, thead).detach();\n\t\t\t\t$('th, td', thead).each( function () {\n\t\t\t\t\tvar wrapper = $('div.'+classes.sSortJUIWrapper, this);\n\t\t\t\t\t$(this).append( wrapper.contents() );\n\t\t\t\t\twrapper.detach();\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Add the TR elements back into the table in their original order\n\t\t\tjqTbody.children().detach();\n\t\t\tjqTbody.append( rows );\n\t\n\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\tjqTable[ removedMethod ]();\n\t\t\tjqWrapper[ removedMethod ]();\n\t\n\t\t\t// If we need to reattach the table to the document\n\t\t\tif ( ! remove && orig ) {\n\t\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\t\n\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t// so we can restore directly to that\n\t\t\t\tjqTable\n\t\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t\t.removeClass( classes.sTable );\n\t\n\t\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\t\tien = settings.asDestroyStripes.length;\n\t\n\t\t\t\tif ( ien ) {\n\t\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t// Add the `every()` method for rows, columns and cells in a compact form\n\t$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t\t_api_register( type+'s().every()', function ( fn ) {\n\t\t\tvar opts = this.selector.opts;\n\t\t\tvar api = this;\n\t\n\t\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t\t// Rows and columns:\n\t\t\t\t//  arg1 - index\n\t\t\t\t//  arg2 - table counter\n\t\t\t\t//  arg3 - loop counter\n\t\t\t\t//  arg4 - undefined\n\t\t\t\t// Cells:\n\t\t\t\t//  arg1 - row index\n\t\t\t\t//  arg2 - column index\n\t\t\t\t//  arg3 - table counter\n\t\t\t\t//  arg4 - loop counter\n\t\t\t\tfn.call(\n\t\t\t\t\tapi[ type ](\n\t\t\t\t\t\targ1,\n\t\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t\t),\n\t\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t} );\n\t\n\t\n\t// i18n method for extensions to be able to use the language object from the\n\t// DataTable\n\t_api_register( 'i18n()', function ( token, def, plural ) {\n\t\tvar ctx = this.context[0];\n\t\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\t\n\t\tif ( resolved === undefined ) {\n\t\t\tresolved = def;\n\t\t}\n\t\n\t\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\t\tresolved[ plural ] :\n\t\t\t\tresolved._;\n\t\t}\n\t\n\t\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\n\t} );\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t * only for non-release builds. See http://semver.org/ for more information.\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"1.10.11\";\n\n\t/**\n\t * Private data store, containing all of the settings objects that are\n\t * created for the tables on a given page.\n\t *\n\t * Note that the `DataTable.settings` object is aliased to\n\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\n\t/**\n\t * Object models container, for the various models that DataTables has\n\t * available to it. These models define the objects that are used to hold\n\t * the active state and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bCaseInsensitive\": true,\n\t\n\t\t/**\n\t\t * Applied search term\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sSearch\": \"\",\n\t\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bRegex\": false,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bSmart\": true\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings\n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTr\": null,\n\t\n\t\t/**\n\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t * created.\n\t\t *  @type array nodes\n\t\t *  @default []\n\t\t */\n\t\t\"anCells\": null,\n\t\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data\n\t\t * source.\n\t\t *  @type array|object\n\t\t *  @default []\n\t\t */\n\t\t\"_aData\": [],\n\t\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is\n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aSortData\": null,\n\t\n\t\t/**\n\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t * increase the performance of the filtering in DataTables\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aFilterData\": null,\n\t\n\t\t/**\n\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t * in this case a string rather than an array. This is easily computed with\n\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t * needed on every search (memory traded for performance)\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sFilterRow\": null,\n\t\n\t\t/**\n\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t * on className for the nTr property.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @private\n\t\t */\n\t\t\"_sRowStripe\": \"\",\n\t\n\t\t/**\n\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t * object. This is used for invalidating data, so DataTables can\n\t\t * automatically read data from the original source, unless uninstructed\n\t\t * otherwise.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"src\": null,\n\t\n\t\t/**\n\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t * object, but want to know the index\n\t\t *  @type integer\n\t\t *  @default -1\n\t\t *  @private\n\t\t */\n\t\t\"idx\": -1\n\t};\n\t\n\t\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults.column}\n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t\t * is faster to just hold it as a variable\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"idx\": null,\n\t\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t *  @type array\n\t\t */\n\t\t\"aDataSort\": null,\n\t\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t *  @type array\n\t\t */\n\t\t\"asSorting\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSearchable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t *  @type boolean\n\t\t */\n\t\t\"bVisible\": null,\n\t\n\t\t/**\n\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sManualType\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t * source for filtering or sorting. True is either are.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @private\n\t\t */\n\t\t\"_bAttrSrc\": false,\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @default null\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column\n\t\t * initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {string} sSpecific The specific data type you want to get -\n\t\t *    'display', 'type' 'filter' 'sort'\n\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t *  @default null\n\t\t */\n\t\t\"fnGetData\": null,\n\t\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {*} sValue Value to set\n\t\t *  @default null\n\t\t */\n\t\t\"fnSetData\": null,\n\t\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data\n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\t/**\n\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t * listener is attached to (if sorting is enabled.)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTh\": null,\n\t\n\t\t/**\n\t\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t\t * in DataTables as such, but can be used for plug-ins to reference the\n\t\t * footer for each column.\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTf\": null,\n\t\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sClass\": null,\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t *  @type string\n\t\t */\n\t\t\"sContentPadding\": null,\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t *  @type string\n\t\t */\n\t\t\"sName\": null,\n\t\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t *  @type string\n\t\t *  @default std\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClass\": null,\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column -\n\t\t * when jQuery UI theming is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClassJUI\": null,\n\t\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t *  @type string\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\t/**\n\t\t * Width of the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidth\": null,\n\t\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidthOrig\": null\n\t};\n\t\n\t\n\t/*\n\t * Developer note: The properties of the object below are given in Hungarian\n\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t * version is still, internally the primary interface, but is is not documented\n\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t * to create a map from Hungarian notation to camel case (going the other direction\n\t * would require each property to be listed, which would at around 3K to the size\n\t * of DataTables, while this method is about a 0.5K hit.\n\t *\n\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t * completely, but that is a massive amount of work and will break current\n\t * installs (therefore is on-hold until v2).\n\t */\n\t\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation\n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.data\n\t\t *\n\t\t *  @example\n\t\t *    // Using a 2D array data source\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\" },\n\t\t *          { \"title\": \"Browser\" },\n\t\t *          { \"title\": \"Platform\" },\n\t\t *          { \"title\": \"Version\" },\n\t\t *          { \"title\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using an array of objects as a data source (`data`)\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaData\": null,\n\t\n\t\n\t\t/**\n\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t * should contain an array for each column to be sorted initially containing\n\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t *  @type array\n\t\t *  @default [[0,'asc']]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.order\n\t\t *\n\t\t *  @example\n\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *    // No initial sorting\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": []\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaSorting\": [[0,'asc']],\n\t\n\t\n\t\t/**\n\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t * together.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.orderFixed\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\n\t\t/**\n\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t *\n\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t * how it is defined. These are:\n\t\t *\n\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t * * `function` - Custom data get function\n\t\t *\n\t\t * `string`\n\t\t * --------\n\t\t *\n\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t * DataTables will load data.\n\t\t *\n\t\t * `object`\n\t\t * --------\n\t\t *\n\t\t * As an object, the parameters in the object are passed to\n\t\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t * you can override using this option. Please refer to the jQuery\n\t\t * documentation for a full description of the options available, although\n\t\t * the following parameters provide additional options in DataTables or\n\t\t * require special consideration:\n\t\t *\n\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t *   to the server. The function takes a single parameter, an object of\n\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t *   object may be returned which will be merged into the DataTables\n\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t *   from DataTables 1.9-.\n\t\t *\n\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t *   required, with the returned value being that used by DataTables as the\n\t\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t\t *   DataTables 1.9-.\n\t\t *\n\t\t * * `success` - Should not be overridden it is used internally in\n\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t *\n\t\t * `function`\n\t\t * ----------\n\t\t *\n\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t * or an AIR database.\n\t\t *\n\t\t * The function is given four parameters and no return is required. The\n\t\t * parameters are:\n\t\t *\n\t\t * 1. _object_ - Data to send to the server\n\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t *    data has been obtained. That data should be passed into the callback\n\t\t *    as the only parameter\n\t\t * 3. _object_ - DataTables settings object for the table\n\t\t *\n\t\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t\t *\n\t\t *  @type string|object|function\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.ajax\n\t\t *  @since 1.10.0\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax.\n\t\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": \"data.json\"\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"tableData\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t\t *   // from a plain array rather than an array in an object\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Manipulate the data returned from the server - add a link to data\n\t\t *   // (note this can, should, be done using `render` for the column - this\n\t\t *   // is just a simple example of how the data can be manipulated).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": function ( json ) {\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t *         }\n\t\t *         return json;\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Add data to the request\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"data\": function ( d ) {\n\t\t *         return {\n\t\t *           \"extra_search\": $('#extra').val()\n\t\t *         };\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Send request as POST\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"type\": \"POST\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get the data from localStorage (could interface with a form for\n\t\t *   // adding, editing and removing rows).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t *       callback(\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t *       );\n\t\t *     }\n\t\t *   } );\n\t\t */\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t * either a 1D array of options which will be used for both the displayed\n\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t * position as the value, and the array in the second position as the\n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *\n\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t *  @type array\n\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\t\n\t\n\t\t/**\n\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see\n\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.column\n\t\t */\n\t\t\"aoColumns\": null,\n\t\n\t\t/**\n\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t * each object in the array. This allows great flexibility when creating\n\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.columnDefs\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\t\n\t\n\t\t/**\n\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.searchCols\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchCols\": [\n\t\t *          null,\n\t\t *          { \"search\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aoSearchCols\": [],\n\t\n\t\n\t\t/**\n\t\t * An array of CSS classes that should be applied to displayed rows. This\n\t\t * array may be of any length, and DataTables will apply each class\n\t\t * sequentially, looping when required.\n\t\t *  @type array\n\t\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t\t *    options</i>\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.stripeClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using `columns`.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.autoWidth\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"autoWidth\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bAutoWidth\": true,\n\t\n\t\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.deferRender\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t *        \"deferRender\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDeferRender\": false,\n\t\n\t\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.destroy\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"srollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"filter\": false,\n\t\t *        \"destroy\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDestroy\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.dom}.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.searching\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searching\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bFilter\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the table information display. This shows information\n\t\t * about the data that is currently visible on the page, including information\n\t\t * about filtered data if that action is being performed.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"info\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bInfo\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\n\t\t * slightly different and additional mark-up from what DataTables has\n\t\t * traditionally used).\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.jQueryUI\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"jQueryUI\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bJQueryUI\": false,\n\t\n\t\n\t\t/**\n\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.lengthChange\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthChange\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bLengthChange\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.paging\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paging\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bPaginate\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"processing\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bProcessing\": false,\n\t\n\t\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t * you need.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.retrieve\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n\t\t *\n\t\t *    function initTable ()\n\t\t *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false,\n\t\t *        \"retrieve\": true\n\t\t *      } );\n\t\t *    }\n\t\t *\n\t\t *    function tableActions ()\n\t\t *    {\n\t\t *      var table = initTable();\n\t\t *      // perform API operations with oTable\n\t\t *    }\n\t\t */\n\t\t\"bRetrieve\": false,\n\t\n\t\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollCollapse\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200\",\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\t\n\t\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverSide\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bServerSide\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the `sortable` option for each column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.ordering\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ordering\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSort\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t * same time (activated by shift-click by the user).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderMulti\n\t\t *\n\t\t *  @example\n\t\t *    // Disable multiple column sorting ability\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderMulti\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortMulti\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderCellsTop\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortCellsTop\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.orderClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderClasses\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortClasses\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t * used to save table display information such as pagination information,\n\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t * the page the display display will match what thy had previously set up.\n\t\t *\n\t\t * Due to the use of `localStorage` the default state saving is not supported\n\t\t * in IE6 or 7. If state saving is required in those browsers, use\n\t\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.stateSave\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bStateSave\": false,\n\t\n\t\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.createdRow\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.drawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"drawCallback\": function( settings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t *  @type function\n\t\t *  @param {node} foot \"TR\" element for the footer\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.footerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {int} toFormat number to be formatted\n\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.formatNumber\n\t\t *\n\t\t *  @example\n\t\t *    // Format a number using a single quote for the separator (note that\n\t\t *    // this can also be done with the language.thousands option)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t *          return toFormat.toString().replace(\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t *          );\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnFormatNumber\": function ( toFormat ) {\n\t\t\treturn toFormat.toString().replace(\n\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\tthis.oLanguage.sThousands\n\t\t\t);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t *  @type function\n\t\t *  @param {node} head \"TR\" element for the header\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.headerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {int} start Starting position in data for the draw\n\t\t *  @param {int} end End position in data for the draw\n\t\t *  @param {int} max Total number of rows in the table (regardless of\n\t\t *    filtering)\n\t\t *  @param {int} total Total number of rows in the data set, after filtering\n\t\t *  @param {string} pre The string that DataTables has formatted using it's\n\t\t *    own rules\n\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.infoCallback\n\t\t *\n\t\t *  @example\n\t\t *    $('#example').dataTable( {\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t *        return start +\" to \"+ end;\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.initComplete\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"initComplete\": function(settings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnInitComplete\": null,\n\t\n\t\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t *    return) will allow it to complete.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.preDrawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} displayIndex The display index for the current table draw\n\t\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t\t *    rows (after filtering)\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.rowCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" ) {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnRowCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * This parameter allows you to override the default function which obtains\n\t\t * the data from the server so something more suitable for your application.\n\t\t * For example you could use POST data, or pull information from a Gears or\n\t\t * AIR database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t\t *  @param {array} data A key/value pair object containing the data to send\n\t\t *    to the server\n\t\t *  @param {function} callback to be called on completion of the data get\n\t\t *    process that will draw the data on the page.\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverData\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t *  It is often useful to send extra data to the server when making an Ajax\n\t\t * request - for example custom filtering information, and this callback\n\t\t * function makes it trivial to send extra information to the server. The\n\t\t * passed in parameter is the data set that has been constructed by\n\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t *  @type function\n\t\t *  @param {array} data Data array (array of objects which are name/value\n\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t *    significant number of parameters!\n\t\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t\t *    as this is passed by reference.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverParams\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @return {object} The DataTables state object to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadCallback\": function (settings) {\n\t\t *          var o;\n\t\t *\n\t\t *          // Send an Ajax request to the server to get the data. Note that\n\t\t *          // this is a synchronous request.\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"async\": false,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              o = json;\n\t\t *            }\n\t\t *          } );\n\t\t *\n\t\t *          return o;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadCallback\": function ( settings ) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t * a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that is to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Disallow state loading by returning false\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that was loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoaded\n\t\t *\n\t\t *  @example\n\t\t *    // Show an alert with the filtering value that was saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\t\n\t\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": data,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\t\ttry {\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\t\tJSON.stringify( data )\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t * has elapsed the state will be returned to the default.\n\t\t * Value is given in seconds.\n\t\t *  @type int\n\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.stateDuration\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iStateDuration\": 7200,\n\t\n\t\n\t\t/**\n\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t * the number of records available after filtering and the second element is the\n\t\t * number of records without filtering (allowing the table information element\n\t\t * to be shown correctly).\n\t\t *  @type int | array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.deferLoading\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records available in the table, no filtering applied\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t *        \"search\": {\n\t\t *          \"search\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDeferLoading\": null,\n\t\n\t\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pageLength\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pageLength\": 50\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\t\n\t\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.displayStart\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"displayStart\": 20\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\t\n\t\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.tabIndex\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"tabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\n\t\t/**\n\t\t * Classes that DataTables assigns to the various components and features\n\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t * during initialisation in addition to through the static\n\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.classes\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.aria\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\t\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t * control types.\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.paginate\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the first page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default First\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"First\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the last page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Last\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"Last\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t\t * next page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Next\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"Next\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t\t * the previous page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Previous\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t *  @type string\n\t\t\t *  @default No data available in table\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No data available in table\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information\n\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t * removed as needed by the language requires:\n\t\t\t *\n\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t *\n\t\t\t *  @type string\n\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.info\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t * format of this string should match `info`.\n\t\t\t *  @type string\n\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t *  @type string\n\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\t\n\t\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This decimal place operator is a little different from the other\n\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t *\n\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t * However, multiple different tables on the page can use different\n\t\t\t * decimal place characters.\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.decimal\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"decimal\": \",\"\n\t\t\t *          \"thousands\": \".\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDecimal\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t *  @type string\n\t\t\t *  @default ,\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.thousands\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"thousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sThousands\": \",\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t *  @type string\n\t\t\t *  @default Show _MENU_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language change only\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language and options change\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t *  @type string\n\t\t\t *  @default Loading...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t *  @type string\n\t\t\t *  @default Processing...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.processing\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sProcessing\": \"Processing...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t *  @type string\n\t\t\t *  @default Search:\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.search\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Specify where the filter should appear\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSearch\": \"Search:\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t */\n\t\t\t\"sSearchPlaceholder\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.url\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t *  @type string\n\t\t\t *  @default No matching records found\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the `search` parameter must be\n\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.search\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * By default DataTables will look for the property `data` (or `aaData` for\n\t\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t\t * source or for server-side processing - this parameter allows that\n\t\t * property to be changed. You can use Javascript dotted object notation to\n\t\t * get a data source for multiple levels of nesting.\n\t\t *  @type string\n\t\t *  @default data\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxDataProp\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxDataProp\": \"data\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * You can instruct DataTables to load data from an external\n\t\t * source using this parameter (use aData if you want to pass data in you\n\t\t * already have). Simply provide a url a JSON object can be obtained from.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxSource\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\n\t\t/**\n\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t * (for example you might want the pagination controls at the top of the\n\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t * aid styling. The follow syntax is used:\n\t\t *   <ul>\n\t\t *     <li>The following options are allowed:\n\t\t *       <ul>\n\t\t *         <li>'l' - Length changing</li>\n\t\t *         <li>'f' - Filtering input</li>\n\t\t *         <li>'t' - The table!</li>\n\t\t *         <li>'i' - Information</li>\n\t\t *         <li>'p' - Pagination</li>\n\t\t *         <li>'r' - pRocessing</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following constants are allowed:\n\t\t *       <ul>\n\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following syntax is expected:\n\t\t *       <ul>\n\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>Examples:\n\t\t *       <ul>\n\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *   </ul>\n\t\t *  @type string\n\t\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.dom\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDom\": \"lfrtip\",\n\t\n\t\n\t\t/**\n\t\t * Search delay option. This will throttle full table searches that use the\n\t\t * DataTables provided search input element (it does not effect calls to\n\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.searchDelay\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchDelay\": 200\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\n\t\t/**\n\t\t * DataTables features four different built-in options for the buttons to\n\t\t * display for pagination control:\n\t\t *\n\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus\n\t\t *   page numbers\n\t\t *  \n\t\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t\t *  @type string\n\t\t *  @default simple_numbers\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pagingType\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pagingType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sPaginationType\": \"simple_numbers\",\n\t\n\t\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t * is recommended.\n\t\t *  @type boolean|string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollX\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": true,\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollX\": \"\",\n\t\n\t\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollXInner\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": \"100%\",\n\t\t *        \"scrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollY\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollY\": \"\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t *  @type string\n\t\t *  @default GET\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverMethod\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sServerMethod\": \"GET\",\n\t\n\t\n\t\t/**\n\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t *\n\t\t * For further information about the renderers available see\n\t\t * DataTable.ext.renderer\n\t\t *  @type string|object\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.renderer\n\t\t *\n\t\t */\n\t\t\"renderer\": null,\n\t\n\t\n\t\t/**\n\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t * to set as the `id` property in the node.\n\t\t *  @type string\n\t\t *  @default DT_RowId\n\t\t *\n\t\t *  @name DataTable.defaults.rowId\n\t\t */\n\t\t\"rowId\": \"DT_RowId\"\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults );\n\t\n\t\n\t\n\t/*\n\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t * notation and camel case.\n\t */\n\t\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.column = {\n\t\t/**\n\t\t * Define which column(s) an order will occur on for this column. This\n\t\t * allows a column's ordering to take multiple columns into account when\n\t\t * doing a sort or use the data from a different column. For example first\n\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t * two columns.\n\t\t *  @type array|int\n\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderData\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t *          { \"orderData\": 2 },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aDataSort\": null,\n\t\t\"iDataSort\": -1,\n\t\n\t\n\t\t/**\n\t\t * You can control the default ordering direction, and even alter the\n\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t * using this parameter.\n\t\t *  @type array\n\t\t *  @default [ 'asc', 'desc' ]\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderSequence\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"asSorting\": [ 'asc', 'desc' ],\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.searchable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"searchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSearchable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable ordering on this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.visible\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"visible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bVisible\": true,\n\t\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} td The TD node that has been created\n\t\t *  @param {*} cellData The Data for the cell\n\t\t *  @param {array|object} rowData The data for the whole row\n\t\t *  @param {int} row The row index for the aoData data store\n\t\t *  @param {int} col The column index for aoColumns\n\t\t *\n\t\t *  @name DataTable.defaults.column.createdCell\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [3],\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t *            if ( cellData == \"1.7\" ) {\n\t\t *              $(td).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t\t * consistency. `dataProp` can still be used, as there is backwards\n\t\t * compatibility in DataTables for this option, but it is strongly\n\t\t * recommended that you use `data` in preference to `dataProp`.\n\t\t *  @name DataTable.defaults.column.dataProp\n\t\t */\n\t\n\t\n\t\t/**\n\t\t * This property can be used to read data from any data source property,\n\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object. Note that\n\t\t *      function notation is recommended for use in `render` rather than\n\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t *   data directly from it. This action has effects on two other\n\t\t *   initialisation options:\n\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t *      `defaultContent` will be used for the cell.\n\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t *      option is specified for the column, the whole data source for the\n\t\t *      row is used for the renderer.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * `{array|object}` The data source for the row\n\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t *    * Return:\n\t\t *      * The return value from the function is not required when 'set' is\n\t\t *        the type of call, but otherwise the return is what will be used\n\t\t *        for the data requested.\n\t\t *\n\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t * is simply a getter and thus simpler to use.\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t * name change reflects the flexibility of this property and is consistent\n\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t * if required.\n\t\t *\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.data\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Read table data from objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {value},\n\t\t *    //      \"version\": {value},\n\t\t *    //      \"grade\": {value}\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform\" },\n\t\t *          { \"data\": \"version\" },\n\t\t *          { \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Read information from deeply nested objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {\n\t\t *    //         \"inner\": {value}\n\t\t *    //      },\n\t\t *    //      \"details\": [\n\t\t *    //         {value}, {value}\n\t\t *    //      ]\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform.inner\" },\n\t\t *          { \"data\": \"platform.details.0\" },\n\t\t *          { \"data\": \"platform.details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `data` as a function to provide different information for\n\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed dislay and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using default content\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null,\n\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using array notation - outputting a list from an array\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"name[, ]\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\n\t\t/**\n\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering,\n\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t * property. `render` can be considered to be the the read only companion to\n\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t * this option can be given in a number of different ways to effect its\n\t\t * behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object.\n\t\t * * `object` - use different data for the different data types requested by\n\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t *   of the object is the data type the property refers to and the value can\n\t\t *   defined using an integer, string or function using the same rules as\n\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t *   This is the default value to use if you haven't specified a value for\n\t\t *   the data type requested by DataTables.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t *        'display', 'type' or 'sort'.\n\t\t *      * {array|object} The full data source for the row (not based on\n\t\t *        `data`)\n\t\t *    * Return:\n\t\t *      * The return value from the function is what will be used for the\n\t\t *        data requested.\n\t\t *\n\t\t *  @type string|int|function|object|null\n\t\t *  @default null Use the data source value.\n\t\t *\n\t\t *  @name DataTable.defaults.column.render\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Create a comma separated list from an array of objects\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          {\n\t\t *            \"data\": \"platform\",\n\t\t *            \"render\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Execute a function to obtain data\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": \"browserName()\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // As an object, extracting different data for the different types\n\t\t *    // This would be used with a data source such as:\n\t\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t\t *    // the formatted phone number is the one that is shown in the table.\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": {\n\t\t *            \"_\": \"phone\",\n\t\t *            \"filter\": \"phone_filter\",\n\t\t *            \"display\": \"phone_display\"\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Use as a function to create a link from the data source\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"download_link\",\n\t\t *          \"render\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t *  @type string\n\t\t *  @default td\n\t\t *\n\t\t *  @name DataTable.defaults.column.cellType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Make the first column use TH cells\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"cellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCellType\": \"td\",\n\t\n\t\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.class\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"class\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sClass\": \"\",\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this!\n\t\t *  @type string\n\t\t *  @default <i>Empty string<i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.contentPadding\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"contentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.column.defaultContent\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\",\n\t\t *            \"targets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.name\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"name\": \"engine\" },\n\t\t *          { \"name\": \"browser\" },\n\t\t *          { \"name\": \"platform\" },\n\t\t *          { \"name\": \"version\" },\n\t\t *          { \"name\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sName\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Defines a data source type for the ordering which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t * editable elements such as form inputs.\n\t\t *  @type string\n\t\t *  @default std\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderDataType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\t\n\t\n\t\t/**\n\t\t * The title of this column.\n\t\t *  @type string\n\t\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t\t *    original HTML table.</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.title\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be\n\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t * through plug-ins.\n\t\t *  @type string\n\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.type\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"type\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t *  @type string\n\t\t *  @default null <i>Automatic</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.width\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"width\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults.column );\n\t\n\t\n\t\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults} but this\n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t *  @namespace\n\t *  @todo Really should attach the settings object to individual instances so we\n\t *    don't need to create new instances on each $().dataTable() call (if the\n\t *    table already exists). It would also save passing oSettings around and\n\t *    into every single function. However, this is a very significant\n\t *    architecture change for DataTables and will almost certainly break\n\t *    backwards compatibility with older installations. This is something that\n\t *    will be done in 2.0.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t *  @namespace\n\t\t */\n\t\t\"oFeatures\": {\n\t\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\t\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all fro DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\t\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\t\n\t\t\t/**\n\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t * flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfo\": null,\n\t\n\t\t\t/**\n\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t * when pagination is enabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bLengthChange\": null,\n\t\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\t\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\t\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\t\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSort\": null,\n\t\n\t\t\t/**\n\t\t\t * Multi-column sorting\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortMulti\": null,\n\t\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\t\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t *  @namespace\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\t\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\t\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sX\": null,\n\t\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\t\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Language information for the table.\n\t\t *  @namespace\n\t\t *  @extends DataTable.defaults.oLanguage\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See\n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Browser support parameters\n\t\t *  @namespace\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t * scrolling element (IE6/7)\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollOversize\": false,\n\t\n\t\t\t/**\n\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollbarLeft\": false,\n\t\n\t\t\t/**\n\t\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bBounding\": false,\n\t\n\t\t\t/**\n\t\t\t * Browser scrollbar width\n\t\t\t *  @type integer\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"barWidth\": 0\n\t\t},\n\t\n\t\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The\n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aanFeatures\": [],\n\t\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoData\": [],\n\t\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplay\": [],\n\t\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\t\n\t\t/**\n\t\t * Map of row ids to data indexes\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"aIds\": {},\n\t\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoColumns\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's header\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeader\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooter\": [],\n\t\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a\n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\t\n\t\t/**\n\t\t * Store the applied search for each column - see\n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\t\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @todo These inner arrays should really be objects\n\t\t */\n\t\t\"aaSorting\": null,\n\t\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\t/**\n\t\t * Classes to use for the striping of a table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its striping classes as well\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDestroyStripes\": [],\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its width\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\t\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\t\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t * false will be used to cancel the draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoInitComplete\": [],\n\t\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\t\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sTableId\": \"\",\n\t\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTable\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTHead\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTFoot\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTBody\": null,\n\t\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTableWrapper\": null,\n\t\n\t\t/**\n\t\t * Indicate if when using server-side processing the loading of data\n\t\t * should be deferred until the second draw.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDeferLoading\": false,\n\t\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bInitialised\": false,\n\t\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoOpenRows\": [],\n\t\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDom\": null,\n\t\n\t\t/**\n\t\t * Search delay (in mS)\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default two_button\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\t\n\t\t/**\n\t\t * The state duration (for `stateSave`) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iStateDuration\": 0,\n\t\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object\n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSave\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoad\": [],\n\t\n\t\t/**\n\t\t * State that was saved. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oSavedState\": null,\n\t\n\t\t/**\n\t\t * State that was loaded. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oLoadedState\": null,\n\t\n\t\t/**\n\t\t * Source url for AJAX data for the table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\t/**\n\t\t * Property from a given object from which to read the table data from. This\n\t\t * can be an empty string (when not server-side processing), in which case\n\t\t * it is  assumed an an array is given directly.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sAjaxDataProp\": null,\n\t\n\t\t/**\n\t\t * Note if draw should be blocked while getting data\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bAjaxDataGet\": true,\n\t\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t * This can be used for working with the XHR information in one of the\n\t\t * callbacks\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"jqXHR\": null,\n\t\n\t\t/**\n\t\t * JSON returned from the server in the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"json\": undefined,\n\t\n\t\t/**\n\t\t * Data submitted as part of the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"oAjaxData\": undefined,\n\t\n\t\t/**\n\t\t * Function to get the server-side data.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\t/**\n\t\t * Functions which are called prior to sending an Ajax request so extra\n\t\t * parameters can easily be sent to the server\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoServerParams\": [],\n\t\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sServerMethod\": null,\n\t\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\t\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLengthMenu\": null,\n\t\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iDraw\": 0,\n\t\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDrawing\": false,\n\t\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t *  @type int\n\t\t *  @default -1\n\t\t */\n\t\t\"iDrawError\": -1,\n\t\n\t\t/**\n\t\t * Paging display length\n\t\t *  @type int\n\t\t *  @default 10\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\t\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type boolean\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\t\n\t\t/**\n\t\t * Flag to indicate if jQuery UI marking and classes should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bJUI\": null,\n\t\n\t\t/**\n\t\t * The classes to use for the table\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\t\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\t\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInit\": null,\n\t\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\t\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsTotal\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\tthis.aiDisplayMaster.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsDisplay\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\tthis.aiDisplay.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the display end point - aiDisplay index\n\t\t *  @type function\n\t\t */\n\t\t\"fnDisplayEnd\": function ()\n\t\t{\n\t\t\tvar\n\t\t\t\tlen      = this._iDisplayLength,\n\t\t\t\tstart    = this._iDisplayStart,\n\t\t\t\tcalc     = start + len,\n\t\t\t\trecords  = this.aiDisplay.length,\n\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\tpaginate = features.bPaginate;\n\t\n\t\t\tif ( features.bServerSide ) {\n\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\tstart + records :\n\t\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\t\trecords :\n\t\t\t\t\tcalc;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInstance\": null,\n\t\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sInstance\": null,\n\t\n\t\t/**\n\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null,\n\t\n\t\t/**\n\t\t * Last applied sort\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLastSort\": [],\n\t\n\t\t/**\n\t\t * Stored plug-in instances\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oPlugins\": {},\n\t\n\t\t/**\n\t\t * Function used to get a row's id from the row's data\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"rowIdFn\": null,\n\t\n\t\t/**\n\t\t * Data location where to store a row's id\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"rowId\": null\n\t};\n\n\t/**\n\t * Extension object for DataTables that is used to provide all extension\n\t * options.\n\t *\n\t * Note that the `DataTable.ext` object is available through\n\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\t\n\t\n\t/**\n\t * DataTables extensions\n\t * \n\t * This namespace acts as a collection area for plug-ins that can be used to\n\t * extend DataTables capabilities. Indeed many of the build in methods\n\t * use this method to provide their own capabilities (sorting methods for\n\t * example).\n\t *\n\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t * reasons\n\t *\n\t *  @namespace\n\t */\n\tDataTable.ext = _ext = {\n\t\t/**\n\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t * defined here so other extensions can define buttons regardless of load\n\t\t * order. It is _not_ used by DataTables core.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tbuttons: {},\n\t\n\t\n\t\t/**\n\t\t * Element class names\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tclasses: {},\n\t\n\t\n\t\t/**\n\t\t * DataTables build type (expanded by the download builder)\n\t\t *\n\t\t *  @type string\n\t\t */\n\t\tbuilder: \"-source-\",\n\t\n\t\n\t\t/**\n\t\t * Error reporting.\n\t\t * \n\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t * 'throw', 'none' or a function.\n\t\t *\n\t\t *  @type string|function\n\t\t *  @default alert\n\t\t */\n\t\terrMode: \"alert\",\n\t\n\t\n\t\t/**\n\t\t * Feature plug-ins.\n\t\t * \n\t\t * This is an array of objects which describe the feature plug-ins that are\n\t\t * available to DataTables. These feature plug-ins are then available for\n\t\t * use through the `dom` initialisation option.\n\t\t * \n\t\t * Each feature plug-in is described by an object which must have the\n\t\t * following properties:\n\t\t * \n\t\t * * `fnInit` - function that is used to initialise the plug-in,\n\t\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t\t *   instillation option. This is case sensitive.\n\t\t *\n\t\t * The `fnInit` function has the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *\n\t\t * And the following return is expected:\n\t\t * \n\t\t * * {node|null} The element which contains your feature. Note that the\n\t\t *   return may also be void if your plug-in does not require to inject any\n\t\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t\t *   be useful when developing a plug-in which allows table control via\n\t\t *   keyboard entry\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.features.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\"\n\t\t *    } );\n\t\t */\n\t\tfeature: [],\n\t\n\t\n\t\t/**\n\t\t * Row searching.\n\t\t * \n\t\t * This method of searching is complimentary to the default type based\n\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t * over the searching logic. Each element in this array is a function\n\t\t * (parameters described below) that is called for every row in the table,\n\t\t * and your logic decides if it should be included in the searching data set\n\t\t * or not.\n\t\t *\n\t\t * Searching functions have the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t *    original format that was passed in as the data source, or an array\n\t\t *    from a DOM data source\n\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t *   (false)\n\t\t *\n\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t * naming we call it searching here.\n\t\t *\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom search being applied to the\n\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t *    // from the end-user, matching the data in a certain range.\n\t\t *    $.fn.dataTable.ext.search.push(\n\t\t *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tsearch: [],\n\t\n\t\n\t\t/**\n\t\t * Selector extensions\n\t\t *\n\t\t * The `selector` option can be used to extend the options available for the\n\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t * their plural counterparts). For example the Select extension uses this\n\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t * which can be used in conjunction with the existing built in selector\n\t\t * options.\n\t\t *\n\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t * take three attributes:\n\t\t *\n\t\t * * Settings object for the host table\n\t\t * * Options object (`selector-modifier` object type)\n\t\t * * Array of selected item indexes\n\t\t *\n\t\t * The return is an array of the resulting item indexes after the custom\n\t\t * selector has been applied.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tselector: {\n\t\t\tcell: [],\n\t\t\tcolumn: [],\n\t\t\trow: []\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Internal functions, exposed for used in plug-ins.\n\t\t * \n\t\t * Please note that you should not need to use the internal methods for\n\t\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t\t * The internal function may change between releases.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tinternal: {},\n\t\n\t\n\t\t/**\n\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t * are available in DataTables.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tlegacy: {\n\t\t\t/**\n\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t * requests\n\t\t\t *\n\t\t\t *  @type boolean\n\t\t\t *  @default null\n\t\t\t */\n\t\t\tajax: null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Pagination plug-in methods.\n\t\t * \n\t\t * Each entry in this object is a function and defines which buttons should\n\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t * what buttons to display. This is done by returning an array of button\n\t\t * descriptions (what each button will do).\n\t\t *\n\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t * options defined here) can be used through the `paginationType`\n\t\t * initialisation parameter.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{int} page` The current page index\n\t\t * 2. `{int} pages` The number of pages in the table\n\t\t *\n\t\t * Each function is expected to return an array where each element of the\n\t\t * array can be one of:\n\t\t *\n\t\t * * `first` - Jump to first page when activated\n\t\t * * `last` - Jump to last page when activated\n\t\t * * `previous` - Show previous page when activated\n\t\t * * `next` - Show next page when activated\n\t\t * * `{int}` - Show page of the index given\n\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t *\n\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t * an object with two functions would be defined for each plug-in. That\n\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t * documented in DataTables 1.10+.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Show previous, next and current page buttons only\n\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n\t\t */\n\t\tpager: {},\n\t\n\t\n\t\trenderer: {\n\t\t\tpageButton: {},\n\t\t\theader: {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Ordering plug-ins - custom data source\n\t\t * \n\t\t * The extension options for ordering of data available here is complimentary\n\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t * allows much greater control over the the data that is being used to\n\t\t * order a column, but is necessarily therefore more complex.\n\t\t * \n\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t * than just the static string that DataTables knows of.\n\t\t * \n\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t * wish to be ordering for the column in question and then return that\n\t\t * array. The data in the array much be in the index order of the rows in\n\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t * parameter that is used for the column (if any).\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{int}` Target column index\n\t\t *\n\t\t * Each function is expected to return an array:\n\t\t *\n\t\t * * `{array}` Data for the column to be ordering upon\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Ordering using `input` node values\n\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n\t\t */\n\t\torder: {},\n\t\n\t\n\t\t/**\n\t\t * Type based plug-ins.\n\t\t *\n\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t * can also make use of the column type if required).\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\ttype: {\n\t\t\t/**\n\t\t\t * Type detection functions.\n\t\t\t *\n\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t * when complex data is in the table.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be analysed\n\t\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t\t     *     perform context specific type detection - for example detection\n\t\t     *     based on language settings such as using a comma for a decimal\n\t\t     *     place. Generally speaking the options from the settings will not\n\t\t     *     be required\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t *   pass it on to the other type detection functions.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Currency type detection plug-in:\n\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! $.isNumeric( data.substring(1) ) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tdetect: [],\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based search formatting.\n\t\t\t *\n\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t *\n\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t * no search formatting will be performed.\n\t\t\t * \n\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t * for searching data.\n\t\t\t *\n\t\t\t * The functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n\t\t\t */\n\t\t\tsearch: {},\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based ordering.\n\t\t\t *\n\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t * is defined by the functions available in this object.\n\t\t\t *\n\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t * this object:\n\t\t\t *\n\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t *\n\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t *\n\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t *\n\t\t\t * And return:\n\t\t\t *\n\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t *\n\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t * functions, taking two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data to compare to the second parameter\n\t\t     *  2. `{*}` Data to compare to the first parameter\n\t\t\t *\n\t\t\t * And returning:\n\t\t\t *\n\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t *   parameter.\n\t\t\t * \n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\torder: {}\n\t\t},\n\t\n\t\t/**\n\t\t * Unique DataTables instance counter\n\t\t *\n\t\t * @type int\n\t\t * @private\n\t\t */\n\t\t_unique: 0,\n\t\n\t\n\t\t//\n\t\t// Depreciated\n\t\t// The following properties are retained for backwards compatiblity only.\n\t\t// The should not be used in new projects and will be removed in a future\n\t\t// version\n\t\t//\n\t\n\t\t/**\n\t\t * Version check function.\n\t\t *  @type function\n\t\t *  @depreciated Since 1.10\n\t\t */\n\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\t\n\t\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tiApiIndex: 0,\n\t\n\t\n\t\t/**\n\t\t * jQuery UI class container\n\t\t *  @type object\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\toJUIClasses: {},\n\t\n\t\n\t\t/**\n\t\t * Software version\n\t\t *  @type string\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tsVersion: DataTable.version\n\t};\n\t\n\t\n\t//\n\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t//\n\t$.extend( _ext, {\n\t\tafnFiltering: _ext.search,\n\t\taTypes:       _ext.type.detect,\n\t\tofnSearch:    _ext.type.search,\n\t\toSort:        _ext.type.order,\n\t\tafnSortData:  _ext.order,\n\t\taoFeatures:   _ext.feature,\n\t\toApi:         _ext.internal,\n\t\toStdClasses:  _ext.classes,\n\t\toPagination:  _ext.pager\n\t} );\n\t\n\t\n\t$.extend( DataTable.ext.classes, {\n\t\t\"sTable\": \"dataTable\",\n\t\t\"sNoFooter\": \"no-footer\",\n\t\n\t\t/* Paging buttons */\n\t\t\"sPageButton\": \"paginate_button\",\n\t\t\"sPageButtonActive\": \"current\",\n\t\t\"sPageButtonDisabled\": \"disabled\",\n\t\n\t\t/* Striping classes */\n\t\t\"sStripeOdd\": \"odd\",\n\t\t\"sStripeEven\": \"even\",\n\t\n\t\t/* Empty row */\n\t\t\"sRowEmpty\": \"dataTables_empty\",\n\t\n\t\t/* Features */\n\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\"sInfo\": \"dataTables_info\",\n\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\"sLength\": \"dataTables_length\",\n\t\t\"sProcessing\": \"dataTables_processing\",\n\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\"sSortableAsc\": \"sorting_asc_disabled\",\n\t\t\"sSortableDesc\": \"sorting_desc_disabled\",\n\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\t\n\t\t/* Filtering */\n\t\t\"sFilterInput\": \"\",\n\t\n\t\t/* Page length */\n\t\t\"sLengthSelect\": \"\",\n\t\n\t\t/* Scrolling */\n\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\t\n\t\t/* Misc */\n\t\t\"sHeaderTH\": \"\",\n\t\t\"sFooterTH\": \"\",\n\t\n\t\t// Deprecated\n\t\t\"sSortJUIAsc\": \"\",\n\t\t\"sSortJUIDesc\": \"\",\n\t\t\"sSortJUI\": \"\",\n\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\"sSortJUIWrapper\": \"\",\n\t\t\"sSortIcon\": \"\",\n\t\t\"sJUIHeader\": \"\",\n\t\t\"sJUIFooter\": \"\"\n\t} );\n\t\n\t\n\t(function() {\n\t\n\t// Reused strings for better compression. Closure compiler appears to have a\n\t// weird edge case where it is trying to expand strings rather than use the\n\t// variable version. This results in about 200 bytes being added, for very\n\t// little preference benefit since it this run on script load only.\n\tvar _empty = '';\n\t_empty = '';\n\t\n\tvar _stateDefault = _empty + 'ui-state-default';\n\tvar _sortIcon     = _empty + 'css_right ui-icon ui-icon-';\n\tvar _headerFooter = _empty + 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix';\n\t\n\t$.extend( DataTable.ext.oJUIClasses, DataTable.ext.classes, {\n\t\t/* Full numbers paging buttons */\n\t\t\"sPageButton\":         \"fg-button ui-button \"+_stateDefault,\n\t\t\"sPageButtonActive\":   \"ui-state-disabled\",\n\t\t\"sPageButtonDisabled\": \"ui-state-disabled\",\n\t\n\t\t/* Features */\n\t\t\"sPaging\": \"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi \"+\n\t\t\t\"ui-buttonset-multi paging_\", /* Note that the type is postfixed */\n\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\":            _stateDefault+\" sorting_asc\",\n\t\t\"sSortDesc\":           _stateDefault+\" sorting_desc\",\n\t\t\"sSortable\":           _stateDefault+\" sorting\",\n\t\t\"sSortableAsc\":        _stateDefault+\" sorting_asc_disabled\",\n\t\t\"sSortableDesc\":       _stateDefault+\" sorting_desc_disabled\",\n\t\t\"sSortableNone\":       _stateDefault+\" sorting_disabled\",\n\t\t\"sSortJUIAsc\":         _sortIcon+\"triangle-1-n\",\n\t\t\"sSortJUIDesc\":        _sortIcon+\"triangle-1-s\",\n\t\t\"sSortJUI\":            _sortIcon+\"carat-2-n-s\",\n\t\t\"sSortJUIAscAllowed\":  _sortIcon+\"carat-1-n\",\n\t\t\"sSortJUIDescAllowed\": _sortIcon+\"carat-1-s\",\n\t\t\"sSortJUIWrapper\":     \"DataTables_sort_wrapper\",\n\t\t\"sSortIcon\":           \"DataTables_sort_icon\",\n\t\n\t\t/* Scrolling */\n\t\t\"sScrollHead\": \"dataTables_scrollHead \"+_stateDefault,\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot \"+_stateDefault,\n\t\n\t\t/* Misc */\n\t\t\"sHeaderTH\":  _stateDefault,\n\t\t\"sFooterTH\":  _stateDefault,\n\t\t\"sJUIHeader\": _headerFooter+\" ui-corner-tl ui-corner-tr\",\n\t\t\"sJUIFooter\": _headerFooter+\" ui-corner-bl ui-corner-br\"\n\t} );\n\t\n\t}());\n\t\n\t\n\t\n\tvar extPagination = DataTable.ext.pager;\n\t\n\tfunction _numbers ( page, pages ) {\n\t\tvar\n\t\t\tnumbers = [],\n\t\t\tbuttons = extPagination.numbers_length,\n\t\t\thalf = Math.floor( buttons / 2 ),\n\t\t\ti = 1;\n\t\n\t\tif ( pages <= buttons ) {\n\t\t\tnumbers = _range( 0, pages );\n\t\t}\n\t\telse if ( page <= half ) {\n\t\t\tnumbers = _range( 0, buttons-2 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t}\n\t\telse if ( page >= pages - 1 - half ) {\n\t\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\telse {\n\t\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\n\t\tnumbers.DT_el = 'span';\n\t\treturn numbers;\n\t}\n\t\n\t\n\t$.extend( extPagination, {\n\t\tsimple: function ( page, pages ) {\n\t\t\treturn [ 'previous', 'next' ];\n\t\t},\n\t\n\t\tfull: function ( page, pages ) {\n\t\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t\t},\n\t\n\t\tnumbers: function ( page, pages ) {\n\t\t\treturn [ _numbers(page, pages) ];\n\t\t},\n\t\n\t\tsimple_numbers: function ( page, pages ) {\n\t\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t\t},\n\t\n\t\tfull_numbers: function ( page, pages ) {\n\t\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t\t},\n\t\n\t\t// For testing and plug-ins to use\n\t\t_numbers: _numbers,\n\t\n\t\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\t\tnumbers_length: 7\n\t} );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\tpageButton: {\n\t\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\t\tvar btnDisplay, btnClass, counter=0;\n\t\n\t\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\t\tvar i, ien, node, button;\n\t\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t\t};\n\t\n\t\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tbutton = buttons[i];\n\t\n\t\t\t\t\t\tif ( $.isArray( button ) ) {\n\t\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\t\tbtnClass = '';\n\t\n\t\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\t\tnode = $('<a>', {\n\t\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t\t\t'tabindex': settings.iTabIndex,\n\t\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t\t.appendTo( container );\n\t\n\t\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t\t// accessibility, but neither are frames.\n\t\t\t\tvar activeEl;\n\t\n\t\t\t\ttry {\n\t\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t\t// completed\n\t\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\n\t\t\t\tattach( $(host).empty(), buttons );\n\t\n\t\t\t\tif ( activeEl ) {\n\t\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\t\n\t// Built in type detection. See model.ext.aTypes for information about\n\t// what is required from this methods.\n\t$.extend( DataTable.ext.type.detect, [\n\t\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t\t},\n\t\n\t\t// Dates (only those recognised by the browser's Date.parse)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\t// V8 will remove any unknown characters at the start and end of the\n\t\t\t// expression, leading to false matches such as `$245.12` or `10%` being\n\t\t\t// a valid date. See forum thread 18941 for detail.\n\t\t\tif ( d && !(d instanceof Date) && ( ! _re_date_start.test(d) || ! _re_date_end.test(d) ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t\t},\n\t\n\t\t// Formatted numbers\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric, formatted\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML (this is strict checking - there must be html)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t\t'html' : null;\n\t\t}\n\t] );\n\t\n\t\n\t\n\t// Filter formatting functions. See model.ext.ofnSearch for information about\n\t// what is required from these methods.\n\t// \n\t// Note that additional search methods are added for the html numbers and\n\t// html formatted numbers by `_addNumericSort()` when we know what the decimal\n\t// place is\n\t\n\t\n\t$.extend( DataTable.ext.type.search, {\n\t\thtml: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata\n\t\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t\t'';\n\t\t},\n\t\n\t\tstring: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\t\tdata;\n\t\t}\n\t} );\n\t\n\t\n\t\n\tvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\t\tif ( d !== 0 && (!d || d === '-') ) {\n\t\t\treturn -Infinity;\n\t\t}\n\t\n\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\tif ( decimalPlace ) {\n\t\t\td = _numToDecimal( d, decimalPlace );\n\t\t}\n\t\n\t\tif ( d.replace ) {\n\t\t\tif ( re1 ) {\n\t\t\t\td = d.replace( re1, '' );\n\t\t\t}\n\t\n\t\t\tif ( re2 ) {\n\t\t\t\td = d.replace( re2, '' );\n\t\t\t}\n\t\t}\n\t\n\t\treturn d * 1;\n\t};\n\t\n\t\n\t// Add the numeric 'deformatting' functions for sorting and search. This is done\n\t// in a function to provide an easy ability for the language options to add\n\t// additional methods if a non-period decimal place is used.\n\tfunction _addNumericSort ( decimalPlace ) {\n\t\t$.each(\n\t\t\t{\n\t\t\t\t// Plain numbers\n\t\t\t\t\"num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t\t},\n\t\n\t\t\t\t// Formatted numbers\n\t\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric\n\t\t\t\t\"html-num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric, formatted\n\t\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction ( key, fn ) {\n\t\t\t\t// Add the ordering method\n\t\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\t\n\t\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\t\n\t\n\t// Default sort methods\n\t$.extend( _ext.type.order, {\n\t\t// Dates\n\t\t\"date-pre\": function ( d ) {\n\t\t\treturn Date.parse( d ) || 0;\n\t\t},\n\t\n\t\t// html\n\t\t\"html-pre\": function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t},\n\t\n\t\t// string\n\t\t\"string-pre\": function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t},\n\t\n\t\t// string-asc and -desc are retained only for compatibility with the old\n\t\t// sort methods\n\t\t\"string-asc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\t\n\t\t\"string-desc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t}\n\t} );\n\t\n\t\n\t// Numeric sorting types - order doesn't matter here\n\t_addNumericSort( '' );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\theader: {\n\t\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t\t// No additional mark-up required\n\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t// listening for\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tcolumn.sSortingClass +' '+\n\t\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t},\n\t\n\t\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t\t.append( cell.contents() )\n\t\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( cell );\n\t\n\t\t\t\t// Attach a sort listener to update on sort\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t/*\n\t * Public helper functions. These aren't used internally by DataTables, or\n\t * called by any of the options passed into DataTables, but they can be used\n\t * externally by developers working with DataTables. They are helper functions\n\t * to make working with DataTables a little bit easier.\n\t */\n\t\n\tvar __htmlEscapeEntities = function ( d ) {\n\t\treturn typeof d === 'string' ?\n\t\t\td.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') :\n\t\t\td;\n\t};\n\t\n\t/**\n\t * Helpers for `columns.render`.\n\t *\n\t * The options defined here can be used with the `columns.render` initialisation\n\t * option to provide a display renderer. The following functions are defined:\n\t *\n\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t *   display, retaining the original unformatted data for sorting and filtering.\n\t *   It takes 5 parameters:\n\t *   * `string` - Thousands grouping separator\n\t *   * `string` - Decimal point indicator\n\t *   * `integer` - Number of decimal points to show\n\t *   * `string` (optional) - Prefix.\n\t *   * `string` (optional) - Postfix (/suffix).\n\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t *   parameters.\n\t *\n\t * @example\n\t *   // Column definition using the number renderer\n\t *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n\t *\n\t * @namespace\n\t */\n\tDataTable.render = {\n\t\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t\treturn {\n\t\t\t\tdisplay: function ( d ) {\n\t\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\tvar flo = parseFloat( d );\n\t\n\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t// be a number after all)\n\t\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t\t}\n\t\n\t\t\t\t\td = Math.abs( flo );\n\t\n\t\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t) +\n\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t(postfix||'');\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\ttext: function () {\n\t\t\treturn {\n\t\t\t\tdisplay: __htmlEscapeEntities\n\t\t\t};\n\t\t}\n\t};\n\t\n\t\n\t/*\n\t * This is really a good bit rubbish this method of exposing the internal methods\n\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t */\n\t\n\t\n\t/**\n\t * Create a wrapper function for exporting an internal functions to an external API.\n\t *  @param {string} fn API function name\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#internal\n\t */\n\tfunction _fnExternApiFunc (fn)\n\t{\n\t\treturn function() {\n\t\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t);\n\t\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t\t};\n\t}\n\t\n\t\n\t/**\n\t * Reference to internal functions for use by plug-in developers. Note that\n\t * these methods are references to internal functions and are considered to be\n\t * private. If you use these methods, be aware that they are liable to change\n\t * between versions.\n\t *  @namespace\n\t */\n\t$.extend( DataTable.ext.internal, {\n\t\t_fnExternApiFunc: _fnExternApiFunc,\n\t\t_fnBuildAjax: _fnBuildAjax,\n\t\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t\t_fnAjaxParameters: _fnAjaxParameters,\n\t\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t\t_fnAddColumn: _fnAddColumn,\n\t\t_fnColumnOptions: _fnColumnOptions,\n\t\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t\t_fnVisbleColumns: _fnVisbleColumns,\n\t\t_fnGetColumns: _fnGetColumns,\n\t\t_fnColumnTypes: _fnColumnTypes,\n\t\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t\t_fnHungarianMap: _fnHungarianMap,\n\t\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t\t_fnLanguageCompat: _fnLanguageCompat,\n\t\t_fnBrowserDetect: _fnBrowserDetect,\n\t\t_fnAddData: _fnAddData,\n\t\t_fnAddTr: _fnAddTr,\n\t\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t\t_fnGetCellData: _fnGetCellData,\n\t\t_fnSetCellData: _fnSetCellData,\n\t\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t\t_fnGetDataMaster: _fnGetDataMaster,\n\t\t_fnClearTable: _fnClearTable,\n\t\t_fnDeleteIndex: _fnDeleteIndex,\n\t\t_fnInvalidate: _fnInvalidate,\n\t\t_fnGetRowElements: _fnGetRowElements,\n\t\t_fnCreateTr: _fnCreateTr,\n\t\t_fnBuildHead: _fnBuildHead,\n\t\t_fnDrawHead: _fnDrawHead,\n\t\t_fnDraw: _fnDraw,\n\t\t_fnReDraw: _fnReDraw,\n\t\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t\t_fnDetectHeader: _fnDetectHeader,\n\t\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t\t_fnFilterComplete: _fnFilterComplete,\n\t\t_fnFilterCustom: _fnFilterCustom,\n\t\t_fnFilterColumn: _fnFilterColumn,\n\t\t_fnFilter: _fnFilter,\n\t\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t\t_fnEscapeRegex: _fnEscapeRegex,\n\t\t_fnFilterData: _fnFilterData,\n\t\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t\t_fnUpdateInfo: _fnUpdateInfo,\n\t\t_fnInfoMacros: _fnInfoMacros,\n\t\t_fnInitialise: _fnInitialise,\n\t\t_fnInitComplete: _fnInitComplete,\n\t\t_fnLengthChange: _fnLengthChange,\n\t\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t\t_fnPageChange: _fnPageChange,\n\t\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t\t_fnScrollDraw: _fnScrollDraw,\n\t\t_fnApplyToChildren: _fnApplyToChildren,\n\t\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t\t_fnThrottle: _fnThrottle,\n\t\t_fnConvertToWidth: _fnConvertToWidth,\n\t\t_fnGetWidestNode: _fnGetWidestNode,\n\t\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t\t_fnStringToCss: _fnStringToCss,\n\t\t_fnSortFlatten: _fnSortFlatten,\n\t\t_fnSort: _fnSort,\n\t\t_fnSortAria: _fnSortAria,\n\t\t_fnSortListener: _fnSortListener,\n\t\t_fnSortAttachListener: _fnSortAttachListener,\n\t\t_fnSortingClasses: _fnSortingClasses,\n\t\t_fnSortData: _fnSortData,\n\t\t_fnSaveState: _fnSaveState,\n\t\t_fnLoadState: _fnLoadState,\n\t\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t\t_fnLog: _fnLog,\n\t\t_fnMap: _fnMap,\n\t\t_fnBindAction: _fnBindAction,\n\t\t_fnCallbackReg: _fnCallbackReg,\n\t\t_fnCallbackFire: _fnCallbackFire,\n\t\t_fnLengthOverflow: _fnLengthOverflow,\n\t\t_fnRenderer: _fnRenderer,\n\t\t_fnDataSource: _fnDataSource,\n\t\t_fnRowAttributes: _fnRowAttributes,\n\t\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t\t                                // in 1.10, so this dead-end function is\n\t\t                                // added to prevent errors\n\t} );\n\t\n\n\t// jQuery access\n\t$.fn.dataTable = DataTable;\n\n\t// Provide access to the host jQuery object (circular reference)\n\tDataTable.$ = $;\n\n\t// Legacy aliases\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\n\t// With a capital `D` we return a DataTables API instance rather than a\n\t// jQuery object\n\t$.fn.DataTable = function ( opts ) {\n\t\treturn $(this).dataTable( opts ).api();\n\t};\n\n\t// All properties that are available to $.fn.dataTable should also be\n\t// available on $.fn.DataTable\n\t$.each( DataTable, function ( prop, val ) {\n\t\t$.fn.DataTable[ prop ] = val;\n\t} );\n\n\n\t// Information about events fired by DataTables - for documentation.\n\t/**\n\t * Draw event, fired whenever the table is redrawn on the page, at the same\n\t * point as fnDrawCallback. This may be useful for binding events or\n\t * performing calculations when the table is altered at all.\n\t *  @name DataTable#draw.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Search event, fired when the searching applied to the table (using the\n\t * built-in global search, or column filters) is altered.\n\t *  @name DataTable#search.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page change event, fired when the paging of the table is altered.\n\t *  @name DataTable#page.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Order event, fired when the ordering applied to the table is altered.\n\t *  @name DataTable#order.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * DataTables initialisation complete event, fired when the table is fully\n\t * drawn, including Ajax data loaded, if Ajax data is required.\n\t *  @name DataTable#init.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used</li></ol>\n\t */\n\n\t/**\n\t * State save event, fired when the table has changed state a new state save\n\t * is required. This event allows modification of the state saving object\n\t * prior to actually doing the save, including addition or other state\n\t * properties (for plug-ins) or modification of a DataTables core property.\n\t *  @name DataTable#stateSaveParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The state information to be saved\n\t */\n\n\t/**\n\t * State load event, fired when the table is loading state from the stored\n\t * data, but prior to the settings object being modified by the saved state\n\t * - allowing modification of the saved state is required or loading of\n\t * state for a plug-in.\n\t *  @name DataTable#stateLoadParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * State loaded event, fired when state has been loaded from stored data and\n\t * the settings object has been modified by the loaded data.\n\t *  @name DataTable#stateLoaded.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * Processing event, fired when DataTables is doing some kind of processing\n\t * (be it, order, searcg or anything else). It can be used to indicate to\n\t * the end user that there is something happening, or that something has\n\t * finished.\n\t *  @name DataTable#processing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n\t */\n\n\t/**\n\t * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n\t * request to made to the server for new data. This event is called before\n\t * DataTables processed the returned data, so it can also be used to pre-\n\t * process the data returned from the server, if needed.\n\t *\n\t * Note that this trigger is called in `fnServerData`, if you override\n\t * `fnServerData` and which to use this event, you need to trigger it in you\n\t * success function.\n\t *  @name DataTable#xhr.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {object} json JSON returned from the server\n\t *\n\t *  @example\n\t *     // Use a custom property returned from the server in another DOM element\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       $('#status').html( json.status );\n\t *     } );\n\t *\n\t *  @example\n\t *     // Pre-process the data returned from the server\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n\t *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n\t *       }\n\t *       // Note no return - manipulate the data directly in the JSON object.\n\t *     } );\n\t */\n\n\t/**\n\t * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n\t * or passing the bDestroy:true parameter in the initialisation object. This\n\t * can be used to remove bound events, added DOM nodes, etc.\n\t *  @name DataTable#destroy.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page length change event, fired when number of records to show on each\n\t * page (the length) is changed.\n\t *  @name DataTable#length.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {integer} len New length\n\t */\n\n\t/**\n\t * Column sizing has changed.\n\t *  @name DataTable#column-sizing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Column visibility has changed.\n\t *  @name DataTable#column-visibility.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {int} column Column index\n\t *  @param {bool} vis `false` if column now hidden, or `true` if visible\n\t */\n\n\treturn $.fn.dataTable;\n}));\n","/*! DataTables Bootstrap 3 integration\n * ©2011-2015 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * DataTables integration for Bootstrap 3. This requires Bootstrap 3 and\n * DataTables 1.10 or newer.\n *\n * This file sets the defaults and adds options to DataTables to style its\n * controls using Bootstrap. See http://datatables.net/manual/styling/bootstrap\n * for further information.\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t// Require DataTables, which attaches to jQuery, including\n\t\t\t\t// jQuery if needed and have a $ property so we can access the\n\t\t\t\t// jQuery object that is used\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n/* Set the defaults for DataTables initialisation */\n$.extend( true, DataTable.defaults, {\n\tdom:\n\t\t\"<'row'<'col-sm-6'l><'col-sm-6'f>>\" +\n\t\t\"<'row'<'col-sm-12'tr>>\" +\n\t\t\"<'row'<'col-sm-5'i><'col-sm-7'p>>\",\n\trenderer: 'bootstrap'\n} );\n\n\n/* Default class modification */\n$.extend( DataTable.ext.classes, {\n\tsWrapper:      \"dataTables_wrapper form-inline dt-bootstrap\",\n\tsFilterInput:  \"form-control input-sm\",\n\tsLengthSelect: \"form-control input-sm\",\n\tsProcessing:   \"dataTables_processing panel panel-default\"\n} );\n\n\n/* Bootstrap paging button renderer */\nDataTable.ext.renderer.pageButton.bootstrap = function ( settings, host, idx, buttons, page, pages ) {\n\tvar api     = new DataTable.Api( settings );\n\tvar classes = settings.oClasses;\n\tvar lang    = settings.oLanguage.oPaginate;\n\tvar aria = settings.oLanguage.oAria.paginate || {};\n\tvar btnDisplay, btnClass, counter=0;\n\n\tvar attach = function( container, buttons ) {\n\t\tvar i, ien, node, button;\n\t\tvar clickHandler = function ( e ) {\n\t\t\te.preventDefault();\n\t\t\tif ( !$(e.currentTarget).hasClass('disabled') && api.page() != e.data.action ) {\n\t\t\t\tapi.page( e.data.action ).draw( 'page' );\n\t\t\t}\n\t\t};\n\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif ( $.isArray( button ) ) {\n\t\t\t\tattach( container, button );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtnDisplay = '';\n\t\t\t\tbtnClass = '';\n\n\t\t\t\tswitch ( button ) {\n\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\tbtnDisplay = '&#x2026;';\n\t\t\t\t\t\tbtnClass = 'disabled';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'first':\n\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'next':\n\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'last':\n\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t'active' : '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( btnDisplay ) {\n\t\t\t\t\tnode = $('<li>', {\n\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append( $('<a>', {\n\t\t\t\t\t\t\t\t'href': '#',\n\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t'tabindex': settings.iTabIndex\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.appendTo( container );\n\n\t\t\t\t\tsettings.oApi._fnBindAction(\n\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t);\n\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t// inside an iframe or frame. \n\tvar activeEl;\n\n\ttry {\n\t\t// Because this approach is destroying and recreating the paging\n\t\t// elements, focus is lost on the select button which is bad for\n\t\t// accessibility. So we want to restore focus once the draw has\n\t\t// completed\n\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t}\n\tcatch (e) {}\n\n\tattach(\n\t\t$(host).empty().html('<ul class=\"pagination\"/>').children('ul'),\n\t\tbuttons\n\t);\n\n\tif ( activeEl ) {\n\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).focus();\n\t}\n};\n\n\nreturn DataTable;\n}));","/*! Responsive 2.0.2\n * 2014-2016 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     2.0.2\n * @file        dataTables.responsive.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2014-2016 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n/**\n * Responsive is a plug-in for the DataTables library that makes use of\n * DataTables' ability to change the visibility of columns, changing the\n * visibility of columns so the displayed columns fit into the table container.\n * The end result is that complex tables will be dynamically adjusted to fit\n * into the viewport, be it on a desktop, tablet or mobile browser.\n *\n * Responsive for DataTables has two modes of operation, which can used\n * individually or combined:\n *\n * * Class name based control - columns assigned class names that match the\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\n * * Automatic control - columns are automatically hidden when there is no\n *   room left to display them. Columns removed from the right.\n *\n * In additional to column visibility control, Responsive also has built into\n * options to use DataTables' child row display to show / hide the information\n * from the table that has been hidden. There are also two modes of operation\n * for this child row display:\n *\n * * Inline - when the control element that the user can use to show / hide\n *   child rows is displayed inside the first column of the table.\n * * Column - where a whole column is dedicated to be the show / hide control.\n *\n * Initialisation of Responsive is performed by:\n *\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n *   Responsive will automatically be initialised with the default configuration\n *   options when the DataTable is created.\n * * Using the `responsive` option in the DataTables configuration options. This\n *   can also be used to specify the configuration options, or simply set to\n *   `true` to use the defaults.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.10.3+\n *\n *  @example\n *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n *    } );\n */\nvar Responsive = function ( settings, opts ) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.3' ) ) {\n\t\tthrow 'DataTables Responsive requires DataTables 1.10.3 or newer';\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api( settings ),\n\t\tcolumns: [],\n\t\tcurrent: []\n\t};\n\n\t// Check if responsive has already been initialised on this table\n\tif ( this.s.dt.settings()[0].responsive ) {\n\t\treturn;\n\t}\n\n\t// details is an object, but for simplicity the user can give it as a string\n\t// or a boolean\n\tif ( opts && typeof opts.details === 'string' ) {\n\t\topts.details = { type: opts.details };\n\t}\n\telse if ( opts && opts.details === false ) {\n\t\topts.details = { type: false };\n\t}\n\telse if ( opts && opts.details === true ) {\n\t\topts.details = { type: 'inline' };\n\t}\n\n\tthis.c = $.extend( true, {}, Responsive.defaults, DataTable.defaults.responsive, opts );\n\tsettings.responsive = this;\n\tthis._constructor();\n};\n\n$.extend( Responsive.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the Responsive instance\n\t *\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtPrivateSettings = dt.settings()[0];\n\t\tvar oldWindowWidth = $(window).width();\n\n\t\tdt.settings()[0]._responsive = this;\n\n\t\t// Use DataTables' throttle function to avoid processor thrashing on\n\t\t// resize\n\t\t$(window).on( 'resize.dtr orientationchange.dtr', DataTable.util.throttle( function () {\n\t\t\t// iOS has a bug whereby resize can fire when only scrolling\n\t\t\t// See: http://stackoverflow.com/questions/8898412\n\t\t\tvar width = $(window).width();\n\n\t\t\tif ( width !== oldWindowWidth ) {\n\t\t\t\tthat._resize();\n\t\t\t\toldWindowWidth = width;\n\t\t\t}\n\t\t} ) );\n\n\t\t// DataTables doesn't currently trigger an event when a row is added, so\n\t\t// we need to hook into its private API to enforce the hidden rows when\n\t\t// new data is added\n\t\tdtPrivateSettings.oApi._fnCallbackReg( dtPrivateSettings, 'aoRowCreatedCallback', function (tr, data, idx) {\n\t\t\tif ( $.inArray( false, that.s.current ) !== -1 ) {\n\t\t\t\t$('td, th', tr).each( function ( i ) {\n\t\t\t\t\tvar idx = dt.column.index( 'toData', i );\n\n\t\t\t\t\tif ( that.s.current[idx] === false ) {\n\t\t\t\t\t\t$(this).css('display', 'none');\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Destroy event handler\n\t\tdt.on( 'destroy.dtr', function () {\n\t\t\tdt.off( '.dtr' );\n\t\t\t$( dt.table().body() ).off( '.dtr' );\n\t\t\t$(window).off( 'resize.dtr orientationchange.dtr' );\n\n\t\t\t// Restore the columns that we've hidden\n\t\t\t$.each( that.s.current, function ( i, val ) {\n\t\t\t\tif ( val === false ) {\n\t\t\t\t\tthat._setColumnVis( i, true );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Reorder the breakpoints array here in case they have been added out\n\t\t// of order\n\t\tthis.c.breakpoints.sort( function (a, b) {\n\t\t\treturn a.width < b.width ? 1 :\n\t\t\t\ta.width > b.width ? -1 : 0;\n\t\t} );\n\n\t\tthis._classLogic();\n\t\tthis._resizeAuto();\n\n\t\t// Details handler\n\t\tvar details = this.c.details;\n\n\t\tif ( details.type !== false ) {\n\t\t\tthat._detailsInit();\n\n\t\t\t// DataTables will trigger this event on every column it shows and\n\t\t\t// hides individually\n\t\t\tdt.on( 'column-visibility.dtr', function (e, ctx, col, vis) {\n\t\t\t\tthat._classLogic();\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\t\t\t} );\n\n\t\t\t// Redraw the details box on each draw which will happen if the data\n\t\t\t// has changed. This is used until DataTables implements a native\n\t\t\t// `updated` event for rows\n\t\t\tdt.on( 'draw.dtr', function () {\n\t\t\t\tthat._redrawChildren();\n\t\t\t} );\n\n\t\t\t$(dt.table().node()).addClass( 'dtr-'+details.type );\n\t\t}\n\n\t\tdt.on( 'column-reorder.dtr', function (e, settings, details) {\n\t\t\tthat._classLogic();\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t} );\n\n\t\t// Change in column sizes means we need to calc\n\t\tdt.on( 'column-sizing.dtr', function () {\n\t\t\tthat._resize();\n\t\t});\n\n\t\tdt.on( 'init.dtr', function (e, settings, details) {\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\n\t\t\t// If columns were hidden, then DataTables needs to adjust the\n\t\t\t// column sizing\n\t\t\tif ( $.inArray( false, that.s.current ) ) {\n\t\t\t\tdt.columns.adjust();\n\t\t\t}\n\t\t} );\n\n\t\t// First pass - draw the table for the current viewport size\n\t\tthis._resize();\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Calculate the visibility for the columns in a table for a given\n\t * breakpoint. The result is pre-determined based on the class logic if\n\t * class names are used to control all columns, but the width of the table\n\t * is also used if there are columns which are to be automatically shown\n\t * and hidden.\n\t *\n\t * @param  {string} breakpoint Breakpoint name to use for the calculation\n\t * @return {array} Array of boolean values initiating the visibility of each\n\t *   column.\n\t *  @private\n\t */\n\t_columnsVisiblity: function ( breakpoint )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\n\t\t// Create an array that defines the column ordering based first on the\n\t\t// column's priority, and secondly the column index. This allows the\n\t\t// columns to be removed from the right if the priority matches\n\t\tvar order = columns\n\t\t\t.map( function ( col, idx ) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnIdx: idx,\n\t\t\t\t\tpriority: col.priority\n\t\t\t\t};\n\t\t\t} )\n\t\t\t.sort( function ( a, b ) {\n\t\t\t\tif ( a.priority !== b.priority ) {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}\n\t\t\t\treturn a.columnIdx - b.columnIdx;\n\t\t\t} );\n\n\t\t// Class logic - determine which columns are in this breakpoint based\n\t\t// on the classes. If no class control (i.e. `auto`) then `-` is used\n\t\t// to indicate this to the rest of the function\n\t\tvar display = $.map( columns, function ( col ) {\n\t\t\treturn col.auto && col.minWidth === null ?\n\t\t\t\tfalse :\n\t\t\t\tcol.auto === true ?\n\t\t\t\t\t'-' :\n\t\t\t\t\t$.inArray( breakpoint, col.includeIn ) !== -1;\n\t\t} );\n\n\t\t// Auto column control - first pass: how much width is taken by the\n\t\t// ones that must be included from the non-auto columns\n\t\tvar requiredWidth = 0;\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\n\t\t\tif ( display[i] === true ) {\n\t\t\t\trequiredWidth += columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Second pass, use up any remaining width for other columns. For\n\t\t// scrolling tables we need to subtract the width of the scrollbar. It\n\t\t// may not be requires which makes this sub-optimal, but it would\n\t\t// require another full redraw to make complete use of those extra few\n\t\t// pixels\n\t\tvar scrolling = dt.settings()[0].oScroll;\n\t\tvar bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n\t\tvar widthAvailable = dt.table().container().offsetWidth - bar;\n\t\tvar usedWidth = widthAvailable - requiredWidth;\n\n\t\t// Control column needs to always be included. This makes it sub-\n\t\t// optimal in terms of using the available with, but to stop layout\n\t\t// thrashing or overflow. Also we need to account for the control column\n\t\t// width first so we know how much width is available for the other\n\t\t// columns, since the control column might not be the first one shown\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].control ) {\n\t\t\t\tusedWidth -= columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Allow columns to be shown (counting by priority and then right to\n\t\t// left) until we run out of room\n\t\tvar empty = false;\n\t\tfor ( i=0, ien=order.length ; i<ien ; i++ ) {\n\t\t\tvar colIdx = order[i].columnIdx;\n\n\t\t\tif ( display[colIdx] === '-' && ! columns[colIdx].control && columns[colIdx].minWidth ) {\n\t\t\t\t// Once we've found a column that won't fit we don't let any\n\t\t\t\t// others display either, or columns might disappear in the\n\t\t\t\t// middle of the table\n\t\t\t\tif ( empty || usedWidth - columns[colIdx].minWidth < 0 ) {\n\t\t\t\t\tempty = true;\n\t\t\t\t\tdisplay[colIdx] = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplay[colIdx] = true;\n\t\t\t\t}\n\n\t\t\t\tusedWidth -= columns[colIdx].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Determine if the 'control' column should be shown (if there is one).\n\t\t// This is the case when there is a hidden column (that is not the\n\t\t// control column). The two loops look inefficient here, but they are\n\t\t// trivial and will fly through. We need to know the outcome from the\n\t\t// first , before the action in the second can be taken\n\t\tvar showControl = false;\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( ! columns[i].control && ! columns[i].never && ! display[i] ) {\n\t\t\t\tshowControl = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].control ) {\n\t\t\t\tdisplay[i] = showControl;\n\t\t\t}\n\t\t}\n\n\t\t// Finally we need to make sure that there is at least one column that\n\t\t// is visible\n\t\tif ( $.inArray( true, display ) === -1 ) {\n\t\t\tdisplay[0] = true;\n\t\t}\n\n\t\treturn display;\n\t},\n\n\n\t/**\n\t * Create the internal `columns` array with information about the columns\n\t * for the table. This includes determining which breakpoints the column\n\t * will appear in, based upon class names in the column, which makes up the\n\t * vast majority of this method.\n\t *\n\t * @private\n\t */\n\t_classLogic: function ()\n\t{\n\t\tvar that = this;\n\t\tvar calc = {};\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar dt = this.s.dt;\n\t\tvar columns = dt.columns().eq(0).map( function (i) {\n\t\t\tvar column = this.column(i);\n\t\t\tvar className = column.header().className;\n\t\t\tvar priority = dt.settings()[0].aoColumns[i].responsivePriority;\n\n\t\t\tif ( priority === undefined ) {\n\t\t\t\tvar dataPriority = $(column.header()).data('priority');\n\n\t\t\t\tpriority = dataPriority !== undefined ?\n\t\t\t\t\tdataPriority * 1 :\n\t\t\t\t\t10000;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tclassName: className,\n\t\t\t\tincludeIn: [],\n\t\t\t\tauto:      false,\n\t\t\t\tcontrol:   false,\n\t\t\t\tnever:     className.match(/\\bnever\\b/) ? true : false,\n\t\t\t\tpriority:  priority\n\t\t\t};\n\t\t} );\n\n\t\t// Simply add a breakpoint to `includeIn` array, ensuring that there are\n\t\t// no duplicates\n\t\tvar add = function ( colIdx, name ) {\n\t\t\tvar includeIn = columns[ colIdx ].includeIn;\n\n\t\t\tif ( $.inArray( name, includeIn ) === -1 ) {\n\t\t\t\tincludeIn.push( name );\n\t\t\t}\n\t\t};\n\n\t\tvar column = function ( colIdx, name, operator, matched ) {\n\t\t\tvar size, i, ien;\n\n\t\t\tif ( ! operator ) {\n\t\t\t\tcolumns[ colIdx ].includeIn.push( name );\n\t\t\t}\n\t\t\telse if ( operator === 'max-' ) {\n\t\t\t\t// Add this breakpoint and all smaller\n\t\t\t\tsize = that._find( name ).width;\n\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].width <= size ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( operator === 'min-' ) {\n\t\t\t\t// Add this breakpoint and all larger\n\t\t\t\tsize = that._find( name ).width;\n\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].width >= size ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( operator === 'not-' ) {\n\t\t\t\t// Add all but this breakpoint\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].name.indexOf( matched ) === -1 ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop over each column and determine if it has a responsive control\n\t\t// class\n\t\tcolumns.each( function ( col, i ) {\n\t\t\tvar classNames = col.className.split(' ');\n\t\t\tvar hasClass = false;\n\n\t\t\t// Split the class name up so multiple rules can be applied if needed\n\t\t\tfor ( var k=0, ken=classNames.length ; k<ken ; k++ ) {\n\t\t\t\tvar className = $.trim( classNames[k] );\n\n\t\t\t\tif ( className === 'all' ) {\n\t\t\t\t\t// Include in all\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.includeIn = $.map( breakpoints, function (a) {\n\t\t\t\t\t\treturn a.name;\n\t\t\t\t\t} );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if ( className === 'none' || col.never ) {\n\t\t\t\t\t// Include in none (default) and no auto\n\t\t\t\t\thasClass = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if ( className === 'control' ) {\n\t\t\t\t\t// Special column that is only visible, when one of the other\n\t\t\t\t\t// columns is hidden. This is used for the details control\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.control = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.each( breakpoints, function ( j, breakpoint ) {\n\t\t\t\t\t// Does this column have a class that matches this breakpoint?\n\t\t\t\t\tvar brokenPoint = breakpoint.name.split('-');\n\t\t\t\t\tvar re = new RegExp( '(min\\\\-|max\\\\-|not\\\\-)?('+brokenPoint[0]+')(\\\\-[_a-zA-Z0-9])?' );\n\t\t\t\t\tvar match = className.match( re );\n\n\t\t\t\t\tif ( match ) {\n\t\t\t\t\t\thasClass = true;\n\n\t\t\t\t\t\tif ( match[2] === brokenPoint[0] && match[3] === '-'+brokenPoint[1] ) {\n\t\t\t\t\t\t\t// Class name matches breakpoint name fully\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2]+match[3] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( match[2] === brokenPoint[0] && ! match[3] ) {\n\t\t\t\t\t\t\t// Class name matched primary breakpoint name with no qualifier\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// If there was no control class, then automatic sizing is used\n\t\t\tif ( ! hasClass ) {\n\t\t\t\tcol.auto = true;\n\t\t\t}\n\t\t} );\n\n\t\tthis.s.columns = columns;\n\t},\n\n\n\t/**\n\t * Show the details for the child row\n\t *\n\t * @param  {DataTables.Api} row    API instance for the row\n\t * @param  {boolean}        update Update flag\n\t * @private\n\t */\n\t_detailsDisplay: function ( row, update )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\tif ( details && details.type ) {\n\t\t\tvar res = details.display( row, update, function () {\n\t\t\t\treturn details.renderer(\n\t\t\t\t\tdt, row[0], that._detailsObj(row[0])\n\t\t\t\t);\n\t\t\t} );\n\n\t\t\tif ( res === true || res === false ) {\n\t\t\t\t$(dt.table().node()).triggerHandler( 'responsive-display.dt', [dt, row, res, update] );\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Initialisation for the details handler\n\t *\n\t * @private\n\t */\n\t_detailsInit: function ()\n\t{\n\t\tvar that    = this;\n\t\tvar dt      = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\t// The inline type always uses the first child as the target\n\t\tif ( details.type === 'inline' ) {\n\t\t\tdetails.target = 'td:first-child, th:first-child';\n\t\t}\n\n\t\t// Keyboard accessibility\n\t\tdt.on( 'draw.dtr', function () {\n\t\t\tthat._tabIndexes();\n\t\t} );\n\t\tthat._tabIndexes(); // Initial draw has already happened\n\n\t\t$( dt.table().body() ).on( 'keyup.dtr', 'td, th', function (e) {\n\t\t\tif ( e.keyCode === 13 && $(this).data('dtr-keyboard') ) {\n\t\t\t\t$(this).click();\n\t\t\t}\n\t\t} );\n\n\t\t// type.target can be a string jQuery selector or a column index\n\t\tvar target   = details.target;\n\t\tvar selector = typeof target === 'string' ? target : 'td, th';\n\n\t\t// Click handler to show / hide the details rows when they are available\n\t\t$( dt.table().body() )\n\t\t\t.on( 'click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {\n\t\t\t\t// If the table is not collapsed (i.e. there is no hidden columns)\n\t\t\t\t// then take no action\n\t\t\t\tif ( ! $(dt.table().node()).hasClass('collapsed' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check that the row is actually a DataTable's controlled node\n\t\t\t\tif ( ! dt.row( $(this).closest('tr') ).length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// For column index, we determine if we should act or not in the\n\t\t\t\t// handler - otherwise it is already okay\n\t\t\t\tif ( typeof target === 'number' ) {\n\t\t\t\t\tvar targetIdx = target < 0 ?\n\t\t\t\t\t\tdt.columns().eq(0).length + target :\n\t\t\t\t\t\ttarget;\n\n\t\t\t\t\tif ( dt.cell( this ).index().column !== targetIdx ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// $().closest() includes itself in its check\n\t\t\t\tvar row = dt.row( $(this).closest('tr') );\n\n\t\t\t\t// Check event type to do an action\n\t\t\t\tif ( e.type === 'click' ) {\n\t\t\t\t\t// The renderer is given as a function so the caller can execute it\n\t\t\t\t\t// only when they need (i.e. if hiding there is no point is running\n\t\t\t\t\t// the renderer)\n\t\t\t\t\tthat._detailsDisplay( row, false );\n\t\t\t\t}\n\t\t\t\telse if ( e.type === 'mousedown' ) {\n\t\t\t\t\t// For mouse users, prevent the focus ring from showing\n\t\t\t\t\t$(this).css('outline', 'none');\n\t\t\t\t}\n\t\t\t\telse if ( e.type === 'mouseup' ) {\n\t\t\t\t\t// And then re-allow at the end of the click\n\t\t\t\t\t$(this).blur().css('outline', '');\n\t\t\t\t}\n\t\t\t} );\n\t},\n\n\n\t/**\n\t * Get the details to pass to a renderer for a row\n\t * @param  {int} rowIdx Row index\n\t * @private\n\t */\n\t_detailsObj: function ( rowIdx )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map( this.s.columns, function( col, i ) {\n\t\t\tif ( col.never ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttitle:       dt.settings()[0].aoColumns[ i ].sTitle,\n\t\t\t\tdata:        dt.cell( rowIdx, i ).render( that.c.orthogonal ),\n\t\t\t\thidden:      dt.column( i ).visible() && !that.s.current[ i ],\n\t\t\t\tcolumnIndex: i,\n\t\t\t\trowIndex:    rowIdx\n\t\t\t};\n\t\t} );\n\t},\n\n\n\t/**\n\t * Find a breakpoint object from a name\n\t *\n\t * @param  {string} name Breakpoint name to find\n\t * @return {object}      Breakpoint description object\n\t * @private\n\t */\n\t_find: function ( name )\n\t{\n\t\tvar breakpoints = this.c.breakpoints;\n\n\t\tfor ( var i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\tif ( breakpoints[i].name === name ) {\n\t\t\t\treturn breakpoints[i];\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Re-create the contents of the child rows as the display has changed in\n\t * some way.\n\t *\n\t * @private\n\t */\n\t_redrawChildren: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\tdt.rows( {page: 'current'} ).iterator( 'row', function ( settings, idx ) {\n\t\t\tvar row = dt.row( idx );\n\n\t\t\tthat._detailsDisplay( dt.row( idx ), true );\n\t\t} );\n\t},\n\n\n\t/**\n\t * Alter the table display for a resized viewport. This involves first\n\t * determining what breakpoint the window currently is in, getting the\n\t * column visibilities to apply and then setting them.\n\t *\n\t * @private\n\t */\n\t_resize: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar width = $(window).width();\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar breakpoint = breakpoints[0].name;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\t\tvar oldVis = this.s.current.slice();\n\n\t\t// Determine what breakpoint we are currently at\n\t\tfor ( i=breakpoints.length-1 ; i>=0 ; i-- ) {\n\t\t\tif ( width <= breakpoints[i].width ) {\n\t\t\t\tbreakpoint = breakpoints[i].name;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Show the columns for that break point\n\t\tvar columnsVis = this._columnsVisiblity( breakpoint );\n\t\tthis.s.current = columnsVis;\n\n\t\t// Set the class before the column visibility is changed so event\n\t\t// listeners know what the state is. Need to determine if there are\n\t\t// any columns that are not visible but can be shown\n\t\tvar collapsedClass = false;\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( columnsVis[i] === false && ! columns[i].never && ! columns[i].control ) {\n\t\t\t\tcollapsedClass = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$( dt.table().node() ).toggleClass( 'collapsed', collapsedClass );\n\n\t\tvar changed = false;\n\n\t\tdt.columns().eq(0).each( function ( colIdx, i ) {\n\t\t\tif ( columnsVis[i] !== oldVis[i] ) {\n\t\t\t\tchanged = true;\n\t\t\t\tthat._setColumnVis( colIdx, columnsVis[i] );\n\t\t\t}\n\t\t} );\n\n\t\tif ( changed ) {\n\t\t\tthis._redrawChildren();\n\n\t\t\t// Inform listeners of the change\n\t\t\t$(dt.table().node()).trigger( 'responsive-resize.dt', [dt, this.s.current] );\n\t\t}\n\t},\n\n\n\t/**\n\t * Determine the width of each column in the table so the auto column hiding\n\t * has that information to work with. This method is never going to be 100%\n\t * perfect since column widths can change slightly per page, but without\n\t * seriously compromising performance this is quite effective.\n\t *\n\t * @private\n\t */\n\t_resizeAuto: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\n\t\t// Are we allowed to do auto sizing?\n\t\tif ( ! this.c.auto ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Are there any columns that actually need auto-sizing, or do they all\n\t\t// have classes defined\n\t\tif ( $.inArray( true, $.map( columns, function (c) { return c.auto; } ) ) === -1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clone the table with the current data in it\n\t\tvar tableWidth   = dt.table().node().offsetWidth;\n\t\tvar columnWidths = dt.columns;\n\t\tvar clonedTable  = dt.table().node().cloneNode( false );\n\t\tvar clonedHeader = $( dt.table().header().cloneNode( false ) ).appendTo( clonedTable );\n\t\tvar clonedBody   = $( dt.table().body() ).clone( false, false ).empty().appendTo( clonedTable ); // use jQuery because of IE8\n\n\t\t// Header\n\t\tvar headerCells = dt.columns()\n\t\t\t.header()\n\t\t\t.filter( function (idx) {\n\t\t\t\treturn dt.column(idx).visible();\n\t\t\t} )\n\t\t\t.to$()\n\t\t\t.clone( false )\n\t\t\t.css( 'display', 'table-cell' );\n\n\t\t// Body rows - we don't need to take account of DataTables' column\n\t\t// visibility since we implement our own here (hence the `display` set)\n\t\t$(clonedBody)\n\t\t\t.append( $(dt.rows( { page: 'current' } ).nodes()).clone( false ) )\n\t\t\t.find( 'th, td' ).css( 'display', '' );\n\n\t\t// Footer\n\t\tvar footer = dt.table().footer();\n\t\tif ( footer ) {\n\t\t\tvar clonedFooter = $( footer.cloneNode( false ) ).appendTo( clonedTable );\n\t\t\tvar footerCells = dt.columns()\n\t\t\t\t.header()\n\t\t\t\t.filter( function (idx) {\n\t\t\t\t\treturn dt.column(idx).visible();\n\t\t\t\t} )\n\t\t\t\t.to$()\n\t\t\t\t.clone( false )\n\t\t\t\t.css( 'display', 'table-cell' );\n\n\t\t\t$('<tr/>')\n\t\t\t\t.append( footerCells )\n\t\t\t\t.appendTo( clonedFooter );\n\t\t}\n\n\t\t$('<tr/>')\n\t\t\t.append( headerCells )\n\t\t\t.appendTo( clonedHeader );\n\n\t\t// In the inline case extra padding is applied to the first column to\n\t\t// give space for the show / hide icon. We need to use this in the\n\t\t// calculation\n\t\tif ( this.c.details.type === 'inline' ) {\n\t\t\t$(clonedTable).addClass( 'dtr-inline collapsed' );\n\t\t}\n\n\t\tvar inserted = $('<div/>')\n\t\t\t.css( {\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} )\n\t\t\t.append( clonedTable );\n\n\t\tinserted.insertBefore( dt.table().node() );\n\n\t\t// The cloned header now contains the smallest that each column can be\n\t\theaderCells.each( function (i) {\n\t\t\tvar idx = dt.column.index( 'fromVisible', i );\n\t\t\tcolumns[ idx ].minWidth =  this.offsetWidth || 0;\n\t\t} );\n\n\t\tinserted.remove();\n\t},\n\n\t/**\n\t * Set a column's visibility.\n\t *\n\t * We don't use DataTables' column visibility controls in order to ensure\n\t * that column visibility can Responsive can no-exist. Since only IE8+ is\n\t * supported (and all evergreen browsers of course) the control of the\n\t * display attribute works well.\n\t *\n\t * @param {integer} col      Column index\n\t * @param {boolean} showHide Show or hide (true or false)\n\t * @private\n\t */\n\t_setColumnVis: function ( col, showHide )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar display = showHide ? '' : 'none'; // empty string will remove the attr\n\n\t\t$( dt.column( col ).header() ).css( 'display', display );\n\t\t$( dt.column( col ).footer() ).css( 'display', display );\n\t\tdt.column( col ).nodes().to$().css( 'display', display );\n\t},\n\n\n\t/**\n\t * Update the cell tab indexes for keyboard accessibility. This is called on\n\t * every table draw - that is potentially inefficient, but also the least\n\t * complex option given that column visibility can change on the fly. Its a\n\t * shame user-focus was removed from CSS 3 UI, as it would have solved this\n\t * issue with a single CSS statement.\n\t *\n\t * @private\n\t */\n\t_tabIndexes: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar cells = dt.cells( { page: 'current' } ).nodes().to$();\n\t\tvar ctx = dt.settings()[0];\n\t\tvar target = this.c.details.target;\n\n\t\tcells.filter( '[data-dtr-keyboard]' ).removeData( '[data-dtr-keyboard]' );\n\n\t\tvar selector = typeof target === 'number' ?\n\t\t\t':eq('+target+')' :\n\t\t\ttarget;\n\n\t\t$( selector, dt.rows( { page: 'current' } ).nodes() )\n\t\t\t.attr( 'tabIndex', ctx.iTabIndex )\n\t\t\t.data( 'dtr-keyboard', 1 );\n\t}\n} );\n\n\n/**\n * List of default breakpoints. Each item in the array is an object with two\n * properties:\n *\n * * `name` - the breakpoint name.\n * * `width` - the breakpoint width\n *\n * @name Responsive.breakpoints\n * @static\n */\nResponsive.breakpoints = [\n\t{ name: 'desktop',  width: Infinity },\n\t{ name: 'tablet-l', width: 1024 },\n\t{ name: 'tablet-p', width: 768 },\n\t{ name: 'mobile-l', width: 480 },\n\t{ name: 'mobile-p', width: 320 }\n];\n\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.display = {\n\tchildRow: function ( row, update, render ) {\n\t\tif ( update ) {\n\t\t\tif ( $(row.node()).hasClass('parent') ) {\n\t\t\t\trow.child( render(), 'child' ).show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( ! row.child.isShown()  ) {\n\t\t\t\trow.child( render(), 'child' ).show();\n\t\t\t\t$( row.node() ).addClass( 'parent' );\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow.child( false );\n\t\t\t\t$( row.node() ).removeClass( 'parent' );\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\tchildRowImmediate: function ( row, update, render ) {\n\t\tif ( (! update && row.child.isShown()) || ! row.responsive.hasHidden() ) {\n\t\t\t// User interaction and the row is show, or nothing to show\n\t\t\trow.child( false );\n\t\t\t$( row.node() ).removeClass( 'parent' );\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t// Display\n\t\t\trow.child( render(), 'child' ).show();\n\t\t\t$( row.node() ).addClass( 'parent' );\n\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t// This is a wrapper so the modal options for Bootstrap and jQuery UI can\n\t// have options passed into them. This specific one doesn't need to be a\n\t// function but it is for consistency in the `modal` name\n\tmodal: function ( options ) {\n\t\treturn function ( row, update, render ) {\n\t\t\tif ( ! update ) {\n\t\t\t\t// Show a modal\n\t\t\t\tvar close = function () {\n\t\t\t\t\tmodal.remove(); // will tidy events for us\n\t\t\t\t\t$(document).off( 'keypress.dtr' );\n\t\t\t\t};\n\n\t\t\t\tvar modal = $('<div class=\"dtr-modal\"/>')\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-display\"/>')\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-content\"/>')\n\t\t\t\t\t\t\t.append( render() )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-close\">&times;</div>' )\n\t\t\t\t\t\t\t.click( function () {\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-background\"/>')\n\t\t\t\t\t\t.click( function () {\n\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( 'body' );\n\n\t\t\t\t$(document).on( 'keyup.dtr', function (e) {\n\t\t\t\t\tif ( e.keyCode === 27 ) {\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$('div.dtr-modal-content')\n\t\t\t\t\t.empty()\n\t\t\t\t\t.append( render() );\n\t\t\t}\n\n\t\t\tif ( options && options.header ) {\n\t\t\t\t$('div.dtr-modal-content').prepend(\n\t\t\t\t\t'<h2>'+options.header( row )+'</h2>'\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t}\n};\n\n\n/**\n * Responsive default settings for initialisation\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.defaults = {\n\t/**\n\t * List of breakpoints for the instance. Note that this means that each\n\t * instance can have its own breakpoints. Additionally, the breakpoints\n\t * cannot be changed once an instance has been creased.\n\t *\n\t * @type {Array}\n\t * @default Takes the value of `Responsive.breakpoints`\n\t */\n\tbreakpoints: Responsive.breakpoints,\n\n\t/**\n\t * Enable / disable auto hiding calculations. It can help to increase\n\t * performance slightly if you disable this option, but all columns would\n\t * need to have breakpoint classes assigned to them\n\t *\n\t * @type {Boolean}\n\t * @default  `true`\n\t */\n\tauto: true,\n\n\t/**\n\t * Details control. If given as a string value, the `type` property of the\n\t * default object is set to that value, and the defaults used for the rest\n\t * of the object - this is for ease of implementation.\n\t *\n\t * The object consists of the following properties:\n\t *\n\t * * `display` - A function that is used to show and hide the hidden details\n\t * * `renderer` - function that is called for display of the child row data.\n\t *   The default function will show the data from the hidden columns\n\t * * `target` - Used as the selector for what objects to attach the child\n\t *   open / close to\n\t * * `type` - `false` to disable the details display, `inline` or `column`\n\t *   for the two control types\n\t *\n\t * @type {Object|string}\n\t */\n\tdetails: {\n\t\tdisplay: Responsive.display.childRow,\n\n\t\trenderer: function ( api, rowIdx, columns ) {\n\t\t\tvar data = $.map( columns, function ( col, i ) {\n\t\t\t\treturn col.hidden ?\n\t\t\t\t\t'<li data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t'<span class=\"dtr-title\">'+\n\t\t\t\t\t\t\tcol.title+\n\t\t\t\t\t\t'</span> '+\n\t\t\t\t\t\t'<span class=\"dtr-data\">'+\n\t\t\t\t\t\t\tcol.data+\n\t\t\t\t\t\t'</span>'+\n\t\t\t\t\t'</li>' :\n\t\t\t\t\t'';\n\t\t\t} ).join('');\n\n\t\t\treturn data ?\n\t\t\t\t$('<ul data-dtr-index=\"'+rowIdx+'\"/>').append( data ) :\n\t\t\t\tfalse;\n\t\t},\n\n\t\ttarget: 0,\n\n\t\ttype: 'inline'\n\t},\n\n\t/**\n\t * Orthogonal data request option. This is used to define the data type\n\t * requested when Responsive gets the data to show in the child row.\n\t *\n\t * @type {String}\n\t */\n\torthogonal: 'display'\n};\n\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register( 'responsive()', function () {\n\treturn this;\n} );\n\nApi.register( 'responsive.index()', function ( li ) {\n\tli = $(li);\n\n\treturn {\n\t\tcolumn: li.data('dtr-index'),\n\t\trow:    li.parent().data('dtr-index')\n\t};\n} );\n\nApi.register( 'responsive.rebuild()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._responsive ) {\n\t\t\tctx._responsive._classLogic();\n\t\t}\n\t} );\n} );\n\nApi.register( 'responsive.recalc()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._responsive ) {\n\t\t\tctx._responsive._resizeAuto();\n\t\t\tctx._responsive._resize();\n\t\t}\n\t} );\n} );\n\nApi.register( 'responsive.hasHidden()', function () {\n\tvar ctx = this.context[0];\n\n\treturn ctx._responsive ?\n\t\t$.inArray( false, ctx._responsive.s.current ) !== -1 :\n\t\tfalse;\n} );\n\n\n/**\n * Version information\n *\n * @name Responsive.version\n * @static\n */\nResponsive.version = '2.0.2';\n\n\n$.fn.dataTable.Responsive = Responsive;\n$.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'preInit.dt.dtr', function (e, settings, json) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tif ( $(settings.nTable).hasClass( 'responsive' ) ||\n\t\t $(settings.nTable).hasClass( 'dt-responsive' ) ||\n\t\t settings.oInit.responsive ||\n\t\t DataTable.defaults.responsive\n\t) {\n\t\tvar init = settings.oInit.responsive;\n\n\t\tif ( init !== false ) {\n\t\t\tnew Responsive( settings, $.isPlainObject( init ) ? init : {}  );\n\t\t}\n\t}\n} );\n\n\nreturn Responsive;\n}));\n","/*! Bootstrap integration for DataTables' Responsive\n * ©2015 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net-bs', 'datatables.net-responsive'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net-bs')(root, $).$;\n\t\t\t}\n\n\t\t\tif ( ! $.fn.dataTable.Responsive ) {\n\t\t\t\trequire('datatables.net-responsive')(root, $);\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\nvar _display = DataTable.Responsive.display;\nvar _original = _display.modal;\n\n_display.modal = function ( options ) {\n\treturn function ( row, update, render ) {\n\t\tif ( ! $.fn.modal ) {\n\t\t\t_original( row, update, render );\n\t\t}\n\t\telse {\n\t\t\tif ( ! update ) {\n\t\t\t\tvar modal = $(\n\t\t\t\t\t'<div class=\"modal fade\" role=\"dialog\">'+\n\t\t\t\t\t\t'<div class=\"modal-dialog\" role=\"document\">'+\n\t\t\t\t\t\t\t'<div class=\"modal-content\">'+\n\t\t\t\t\t\t\t\t'<div class=\"modal-header\">'+\n\t\t\t\t\t\t\t\t\t'<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>'+\n\t\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t\t\t'<div class=\"modal-body\"/>'+\n\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t'</div>'\n\t\t\t\t);\n\n\t\t\t\tif ( options && options.header ) {\n\t\t\t\t\tmodal.find('div.modal-header')\n\t\t\t\t\t\t.append( '<h4 class=\"modal-title\">'+options.header( row )+'</h4>' );\n\t\t\t\t}\n\n\t\t\t\tmodal.find( 'div.modal-body' ).append( render() );\n\t\t\t\tmodal\n\t\t\t\t\t.appendTo( 'body' )\n\t\t\t\t\t.modal();\n\t\t\t}\n\t\t}\n\t};\n};\n\n\nreturn DataTable.Responsive;\n}));\n","/* ========================================================================\n * Bootstrap: transition.js v3.3.6\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: alert.js v3.3.6\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.6'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: button.js v3.3.6\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.6'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: carousel.js v3.3.6\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.6'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: collapse.js v3.3.6\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.6'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: dropdown.js v3.3.6\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.6'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger($.Event('shown.bs.dropdown', relatedTarget))\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: modal.js v3.3.6\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.6'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tooltip.js v3.3.6\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.6'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: popover.js v3.3.6\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.6'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.6\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.6'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tab.js v3.3.6\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.6'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: affix.js v3.3.6\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.6'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n * ======================================================================== */\n\n(function($) {\n\n\t// Use this variable to set up the common and page specific functions. If you\n\t// rename this variable, you will also need to rename the namespace below.\n\tvar Sage = {\n\t\t// All pages\n\t\t'encuesta': {\n\t\t\tinit: function () {\n\t\t\t\t$( 'span[data-toggle=\"collapse\"]' ).hover(\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tconsole.log('asdas');\n\t\t\t\t\t\t$('.collapse').collapse('hide');\n\t\t\t\t\t\t$(this).next('.collapse').collapse('show');\n\t\t\t\t\t}, function() {\n\t\t\t\t\t\t$('.collapse').collapse('hide');\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\t$( 'span[data-toggle=\"collapse\"]' ).on('click', function (e) {\n\t\t\t\t\t$('.collapse').collapse('hide');\n\t\t\t\t\t$(this).next('.collapse').collapse('show');\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t'result_test': {\n\t\t\tinit: function () {\n\t\t\t\tvar data = [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"Otros\",\n\t\t\t\t\t\tdata: 56\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"Si\",\n\t\t\t\t\t\tdata: 44\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t\tvar labelFormatter = function(label, series) {\n\t\t\t\t\treturn \"<div style='font-size:8pt; text-align:center; padding:2px; color:white;'>\" + label + \"<br/>\" + Math.round(series.percent) + \"%</div>\";\n\t\t\t\t};\n\t\t\t\t$.plot('#ResultsChart', data, {\n\t\t\t\t\tseries: {\n\t\t\t\t\t\tpie: {\n\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\tradius: 1,\n\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\tradius: 2/3,\n\t\t\t\t\t\t\t\tformatter: labelFormatter,\n\t\t\t\t\t\t\t\tthreshold: 0.1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t'common': {\n\t\t\tinit: function() {\n\t\t\t\twindow.cargarUrl = function ( url ) {\n\t\t\t\t\twindow.location.assign( url );\n\t\t\t\t};\n\t\t\t\t// JavaScript to be fired on all pages\n\t\t\t\t$('#list_carreras').DataTable( {\n\t\t\t\t\t\"dom\": \"<'row'<'col-sm-12'l><'col-sm-12'f>>\" +\n\t\t\t\t\t\"<'row'<'col-sm-24'tr>>\" +\n\t\t\t\t\t\"<'row'<'col-sm-10'i><'col-sm-14'p>>\",\n\t\t\t\t\t\"language\": {\n\t\t\t\t\t\t\"sProcessing\":\t \"Procesando...\",\n\t\t\t\t\t\t\"sLengthMenu\":\t \"Mostrar _MENU_ registros\",\n\t\t\t\t\t\t\"sZeroRecords\":\t\"No se encontraron resultados\",\n\t\t\t\t\t\t\"sEmptyTable\":\t \"Ningún dato disponible en esta tabla\",\n\t\t\t\t\t\t\"sInfo\":\t\t\t \"Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros\",\n\t\t\t\t\t\t\"sInfoEmpty\":\t\t\"Mostrando registros del 0 al 0 de un total de 0 registros\",\n\t\t\t\t\t\t\"sInfoFiltered\":\t \"(filtrado de un total de _MAX_ registros)\",\n\t\t\t\t\t\t\"sInfoPostFix\":\t\"\",\n\t\t\t\t\t\t\"sSearch\":\t\t \"Buscar:\",\n\t\t\t\t\t\t\"sUrl\":\t\t\t\"\",\n\t\t\t\t\t\t\"sInfoThousands\":\t\",\",\n\t\t\t\t\t\t\"sLoadingRecords\": \"Cargando...\",\n\t\t\t\t\t\t\"oPaginate\": {\n\t\t\t\t\t\t\t\"sFirst\":\t\"Primero\",\n\t\t\t\t\t\t\t\"sLast\":\t \"Último\",\n\t\t\t\t\t\t\t\"sNext\":\t \"Siguiente\",\n\t\t\t\t\t\t\t\"sPrevious\": \"Anterior\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"oAria\": {\n\t\t\t\t\t\t\t\"sSortAscending\":\t\": Activar para ordenar la columna de manera ascendente\",\n\t\t\t\t\t\t\t\"sSortDescending\": \": Activar para ordenar la columna de manera descendente\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t\t$('[data-toggle=\"tooltip\"]').tooltip();\n\t\t\t\t\t$('.input-group.date').datepicker({\n\t\t\t\t\tformat: \"dd/mm/yyyy\",\n\t\t\t\t\tendDate: \"date()\",\n\t\t\t\t\tlanguage: \"es\",\n\t\t\t\t\tkeyboardNavigation: false,\n\t\t\t\t\tautoclose: true,\n\t\t\t\t\ttodayHighlight: true\n\t\t\t\t});\n\t\t\t},\n\t\t\tfinalize: function() {\n\t\t\t\t// JavaScript to be fired on all pages, after page specific JS is fired\n\t\t\t}\n\t\t},\n\t\t// Home page\n\t\t'home': {\n\t\t\tinit: function() {\n\t\t\t\t// JavaScript to be fired on the home page\n\t\t\t},\n\t\t\tfinalize: function() {\n\t\t\t\t// JavaScript to be fired on the home page, after the init JS\n\t\t\t}\n\t\t},\n\t\t// About us page, note the change from about-us to about_us.\n\t\t'about_us': {\n\t\t\tinit: function() {\n\t\t\t\t// JavaScript to be fired on the about us page\n\t\t\t}\n\t\t}\n\t};\n\n\t// The routing fires all common scripts, followed by the page specific scripts.\n\t// Add additional events for more control over timing e.g. a finalize event\n\tvar UTIL = {\n\t\tfire: function(func, funcname, args) {\n\t\t\tvar fire;\n\t\t\tvar namespace = Sage;\n\t\t\tfuncname = (funcname === undefined) ? 'init' : funcname;\n\t\t\tfire = func !== '';\n\t\t\tfire = fire && namespace[func];\n\t\t\tfire = fire && typeof namespace[func][funcname] === 'function';\n\n\t\t\tif (fire) {\n\t\t\t\tnamespace[func][funcname](args);\n\t\t\t}\n\t\t},\n\t\tloadEvents: function() {\n\t\t\t// Fire common init JS\n\t\t\tUTIL.fire('common');\n\n\t\t\t// Fire page-specific init JS, and then finalize JS\n\t\t\t$.each(document.body.className.replace(/-/g, '_').split(/\\s+/), function(i, classnm) {\n\t\t\t\tUTIL.fire(classnm);\n\t\t\t\tUTIL.fire(classnm, 'finalize');\n\t\t\t});\n\n\t\t\t// Fire common finalize JS\n\t\t\tUTIL.fire('common', 'finalize');\n\t\t}\n\t};\n\n\t// Load Events\n\t$(document).ready(UTIL.loadEvents);\n\n})(jQuery); // Fully reference jQuery after this point.\n"],"sourceRoot":"assets/scripts/"}